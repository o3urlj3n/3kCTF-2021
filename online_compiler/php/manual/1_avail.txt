apache_child_terminate                                              Terminate apache process after this request
apache_getenv                                                       Get an Apache subprocess_env variable
apache_get_modules                                                  Get a list of loaded Apache modules
apache_get_version                                                  Fetch Apache version
apache_lookup_uri                                                   Perform a partial request for the specified URI and return all info about it
apache_note                                                         Get and set apache request notes
apache_request_headers                                              Fetch all HTTP request headers
apache_response_headers                                             Fetch all HTTP response headers
apache_setenv                                                       Set an Apache subprocess_env variable
APCUIterator::current                                               Get current item
APCUIterator::getTotalCount                                         Get total count
APCUIterator::getTotalHits                                          Get total cache hits
APCUIterator::getTotalSize                                          Get total cache size
APCUIterator::key                                                   Get iterator key
APCUIterator::next                                                  Move pointer to next item
APCUIterator::rewind                                                Rewinds iterator
APCUIterator::valid                                                 Checks if current position is valid
APCUIterator::__construct                                           Constructs an APCUIterator iterator object
apcu_add                                                            Cache a new variable in the data store
apcu_cache_info                                                     Retrieves cached information from APCu's data store
apcu_cas                                                            Updates an old value with a new value
apcu_clear_cache                                                    Clears the APCu cache
apcu_dec                                                            Decrease a stored number
apcu_delete                                                         Removes a stored variable from the cache
apcu_enabled                                                        Whether APCu is usable in the current environment
apcu_entry                                                          Atomically fetch or generate a cache entry
apcu_exists                                                         Checks if entry exists
apcu_fetch                                                          Fetch a stored variable from the cache
apcu_inc                                                            Increase a stored number
apcu_key_info                                                       Get detailed information about the cache key
apcu_sma_info                                                       Retrieves APCu Shared Memory Allocation information
apcu_store                                                          Cache a variable in the data store
AppendIterator::append                                              Appends an iterator
AppendIterator::current                                             Gets the current value
AppendIterator::getArrayIterator                                    Gets the ArrayIterator
AppendIterator::getInnerIterator                                    Gets the inner iterator
AppendIterator::getIteratorIndex                                    Gets an index of iterators
AppendIterator::key                                                 Gets the current key
AppendIterator::next                                                Moves to the next element
AppendIterator::rewind                                              Rewinds the Iterator
AppendIterator::valid                                               Checks validity of the current element
AppendIterator::__construct                                         Constructs an AppendIterator
array                                                               Create an array
ArrayAccess::offsetExists                                           Whether an offset exists
ArrayAccess::offsetGet                                              Offset to retrieve
ArrayAccess::offsetSet                                              Assign a value to the specified offset
ArrayAccess::offsetUnset                                            Unset an offset
ArrayIterator::append                                               Append an element
ArrayIterator::asort                                                Sort array by values
ArrayIterator::count                                                Count elements
ArrayIterator::current                                              Return current array entry
ArrayIterator::getArrayCopy                                         Get array copy
ArrayIterator::getFlags                                             Get behavior flags
ArrayIterator::key                                                  Return current array key
ArrayIterator::ksort                                                Sort array by keys
ArrayIterator::natcasesort                                          Sort an array naturally, case insensitive
ArrayIterator::natsort                                              Sort an array naturally
ArrayIterator::next                                                 Move to next entry
ArrayIterator::offsetExists                                         Check if offset exists
ArrayIterator::offsetGet                                            Get value for an offset
ArrayIterator::offsetSet                                            Set value for an offset
ArrayIterator::offsetUnset                                          Unset value for an offset
ArrayIterator::rewind                                               Rewind array back to the start
ArrayIterator::seek                                                 Seek to position
ArrayIterator::serialize                                            Serialize
ArrayIterator::setFlags                                             Set behaviour flags
ArrayIterator::uasort                                               Sort with a user-defined comparison function and maintain index association
ArrayIterator::uksort                                               Sort by keys using a user-defined comparison function
ArrayIterator::unserialize                                          Unserialize
ArrayIterator::valid                                                Check whether array contains more entries
ArrayIterator::__construct                                          Construct an ArrayIterator
ArrayObject::append                                                 Appends the value
ArrayObject::asort                                                  Sort the entries by value
ArrayObject::count                                                  Get the number of public properties in the ArrayObject
ArrayObject::exchangeArray                                          Exchange the array for another one
ArrayObject::getArrayCopy                                           Creates a copy of the ArrayObject
ArrayObject::getFlags                                               Gets the behavior flags
ArrayObject::getIterator                                            Create a new iterator from an ArrayObject instance
ArrayObject::getIteratorClass                                       Gets the iterator classname for the ArrayObject
ArrayObject::ksort                                                  Sort the entries by key
ArrayObject::natcasesort                                            Sort an array using a case insensitive "natural order" algorithm
ArrayObject::natsort                                                Sort entries using a "natural order" algorithm
ArrayObject::offsetExists                                           Returns whether the requested index exists
ArrayObject::offsetGet                                              Returns the value at the specified index
ArrayObject::offsetSet                                              Sets the value at the specified index to newval
ArrayObject::offsetUnset                                            Unsets the value at the specified index
ArrayObject::serialize                                              Serialize an ArrayObject
ArrayObject::setFlags                                               Sets the behavior flags
ArrayObject::setIteratorClass                                       Sets the iterator classname for the ArrayObject
ArrayObject::uasort                                                 Sort the entries with a user-defined comparison function and maintain key association
ArrayObject::uksort                                                 Sort the entries by keys using a user-defined comparison function
ArrayObject::unserialize                                            Unserialize an ArrayObject
ArrayObject::__construct                                            Construct a new array object
array_key_first                                                     Gets the first key of an array
array_key_last                                                      Gets the last key of an array
BaseResult::getWarnings                                             Fetch warnings from last operation
BaseResult::getWarningsCount                                        Fetch warning count from last operation
bcadd                                                               Add two arbitrary precision numbers
bccomp                                                              Compare two arbitrary precision numbers
bcdiv                                                               Divide two arbitrary precision numbers
bcmod                                                               Get modulus of an arbitrary precision number
bcmul                                                               Multiply two arbitrary precision numbers
bcpow                                                               Raise an arbitrary precision number to another
bcpowmod                                                            Raise an arbitrary precision number to another, reduced by a specified modulus
bcscale                                                             Set or get default scale parameter for all bc math functions
bcsqrt                                                              Get the square root of an arbitrary precision number
bcsub                                                               Subtract one arbitrary precision number from another
bindtextdomain                                                      Sets or gets the path for a domain
bind_textdomain_codeset                                             Specify or get the character encoding in which the messages from the DOMAIN message catalog will be returned
bson_decode                                                         Deserializes a BSON object into a PHP array
bson_encode                                                         Serializes a PHP variable into a BSON string
bzclose                                                             Close a bzip2 file
bzcompress                                                          Compress a string into bzip2 encoded data
bzdecompress                                                        Decompresses bzip2 encoded data
bzerrno                                                             Returns a bzip2 error number
bzerror                                                             Returns the bzip2 error number and error string in an array
bzerrstr                                                            Returns a bzip2 error string
bzflush                                                             Do nothing
bzopen                                                              Opens a bzip2 compressed file
bzread                                                              Binary safe bzip2 file read
bzwrite                                                             Binary safe bzip2 file write
CachingIterator::count                                              The number of elements in the iterator
CachingIterator::current                                            Return the current element
CachingIterator::getCache                                           Retrieve the contents of the cache
CachingIterator::getFlags                                           Get flags used
CachingIterator::getInnerIterator                                   Returns the inner iterator
CachingIterator::hasNext                                            Check whether the inner iterator has a valid next element
CachingIterator::key                                                Return the key for the current element
CachingIterator::next                                               Move the iterator forward
CachingIterator::offsetExists                                       The offsetExists purpose
CachingIterator::offsetGet                                          The offsetGet purpose
CachingIterator::offsetSet                                          The offsetSet purpose
CachingIterator::offsetUnset                                        The offsetUnset purpose
CachingIterator::rewind                                             Rewind the iterator
CachingIterator::setFlags                                           The setFlags purpose
CachingIterator::valid                                              Check whether the current element is valid
CachingIterator::__construct                                        Construct a new CachingIterator object for the iterator
CachingIterator::__toString                                         Return the string representation of the current element
CallbackFilterIterator::accept                                      Calls the callback with the current value, the current key and the inner iterator as arguments
CallbackFilterIterator::__construct                                 Create a filtered iterator from another iterator
cal_days_in_month                                                   Return the number of days in a month for a given year and calendar
cal_from_jd                                                         Converts from Julian Day Count to a supported calendar
cal_info                                                            Returns information about a particular calendar
cal_to_jd                                                           Converts from a supported calendar to Julian Day Count
chroot                                                              Change the root directory
classkit_import                                                     Import new class method definitions from a file
classkit_method_add                                                 Dynamically adds a new method to a given class
classkit_method_copy                                                Copies a method from class to another
classkit_method_redefine                                            Dynamically changes the code of the given method
classkit_method_remove                                              Dynamically removes the given method
classkit_method_rename                                              Dynamically changes the name of the given method
Client::getClient                                                   Get client session
Client::__construct                                                 Client constructor
cli_get_process_title                                               Returns the current process title
cli_set_process_title                                               Sets the process title
Closure::bind                                                       Duplicates a closure with a specific bound object and class scope
Closure::bindTo                                                     Duplicates the closure with a new bound object and class scope
Closure::call                                                       Binds and calls the closure
Closure::fromCallable                                               Converts a callable into a closure
Closure::__construct                                                Constructor that disallows instantiation
Collator::asort                                                     Sort array maintaining index association
Collator::compare                                                   Compare two Unicode strings
Collator::create                                                    Create a collator
Collator::getAttribute                                              Get collation attribute value
Collator::getErrorCode                                              Get collator's last error code
Collator::getErrorMessage                                           Get text for collator's last error code
Collator::getLocale                                                 Get the locale name of the collator
Collator::getSortKey                                                Get sorting key for a string
Collator::getStrength                                               Get current collation strength
Collator::setAttribute                                              Set collation attribute
Collator::setStrength                                               Set collation strength
Collator::sort                                                      Sort array using specified collator
Collator::sortWithSortKeys                                          Sort array using specified collator and sort keys
Collator::__construct                                               Create a collator
Collectable::isGarbage                                              Determine whether an object has been marked as garbage
Collectable::setGarbage                                             Mark an object as garbage
Collection::add                                                     Add collection document
Collection::addOrReplaceOne                                         Add or replace collection document
Collection::count                                                   Get document count
Collection::createIndex                                             Create collection index
Collection::dropIndex                                               Drop collection index
Collection::existsInDatabase                                        Check if collection exists in database
Collection::find                                                    Search for document
Collection::getName                                                 Get collection name
Collection::getOne                                                  Get one document
Collection::getSchema                                               Get schema object
Collection::getSession                                              Get session object
Collection::modify                                                  Modify collection documents
Collection::remove                                                  Remove collection documents
Collection::removeOne                                               Remove one collection document
Collection::replaceOne                                              Replace one collection document
Collection::__construct                                             Collection constructor
CollectionAdd::execute                                              Execute the statement
CollectionAdd::__construct                                          CollectionAdd constructor
CollectionFind::bind                                                Bind value to query placeholder
CollectionFind::execute                                             Execute the statement
CollectionFind::fields                                              Set document field filter
CollectionFind::groupBy                                             Set grouping criteria
CollectionFind::having                                              Set condition for aggregate functions
CollectionFind::limit                                               Limit number of returned documents
CollectionFind::lockExclusive                                       Execute operation with EXCLUSIVE LOCK
CollectionFind::lockShared                                          Execute operation with SHARED LOCK
CollectionFind::offset                                              Skip given number of elements to be returned
CollectionFind::sort                                                Set the sorting criteria
CollectionFind::__construct                                         CollectionFind constructor
CollectionModify::arrayAppend                                       Append element to an array field
CollectionModify::arrayInsert                                       Insert element into an array field
CollectionModify::bind                                              Bind value to query placeholder
CollectionModify::execute                                           Execute modify operation
CollectionModify::limit                                             Limit number of modified documents
CollectionModify::patch                                             Patch document
CollectionModify::replace                                           Replace document field
CollectionModify::set                                               Set document attribute
CollectionModify::skip                                              Skip elements
CollectionModify::sort                                              Set the sorting criteria
CollectionModify::unset                                             Unset the value of document fields
CollectionModify::__construct                                       CollectionModify constructor
CollectionRemove::bind                                              Bind value to placeholder
CollectionRemove::execute                                           Execute remove operation
CollectionRemove::limit                                             Limit number of documents to remove
CollectionRemove::sort                                              Set the sorting criteria
CollectionRemove::__construct                                       CollectionRemove constructor
ColumnResult::getCharacterSetName                                   Get character set
ColumnResult::getCollationName                                      Get collation name
ColumnResult::getColumnLabel                                        Get column label
ColumnResult::getColumnName                                         Get column name
ColumnResult::getFractionalDigits                                   Get fractional digit length
ColumnResult::getLength                                             Get column field length
ColumnResult::getSchemaName                                         Get schema name
ColumnResult::getTableLabel                                         Get table label
ColumnResult::getTableName                                          Get table name
ColumnResult::getType                                               Get column type
ColumnResult::isNumberSigned                                        Check if signed type
ColumnResult::isPadded                                              Check if padded
ColumnResult::__construct                                           ColumnResult constructor
com::__construct                                                    com class constructor
CommonMark\CQL::__construct                                         CQL Construction
CommonMark\CQL::__invoke                                            CQL Execution
CommonMark\Interfaces\IVisitable::accept                            Visitation
CommonMark\Interfaces\IVisitor::enter                               Visitation
CommonMark\Interfaces\IVisitor::leave                               Visitation
CommonMark\Node::accept                                             Visitation
CommonMark\Node::appendChild                                        AST Manipulation
CommonMark\Node::insertAfter                                        AST Manipulation
CommonMark\Node::insertBefore                                       AST Manipulation
CommonMark\Node::prependChild                                       AST Manipulation
CommonMark\Node::replace                                            AST Manipulation
CommonMark\Node::unlink                                             AST Manipulation
CommonMark\Node\BulletList::__construct                             BulletList Construction
CommonMark\Node\CodeBlock::__construct                              CodeBlock Construction
CommonMark\Node\Heading::__construct                                Heading Construction
CommonMark\Node\Image::__construct                                  Image Construction
CommonMark\Node\Link::__construct                                   Link Construction
CommonMark\Node\OrderedList::__construct                            OrderedList Construction
CommonMark\Node\Text::__construct                                   Text Construction
CommonMark\Parse                                                    Parsing
CommonMark\Parser::finish                                           Parsing
CommonMark\Parser::parse                                            Parsing
CommonMark\Parser::__construct                                      Parsing
CommonMark\Render                                                   Rendering
CommonMark\Render\HTML                                              Rendering
CommonMark\Render\Latex                                             Rendering
CommonMark\Render\Man                                               Rendering
CommonMark\Render\XML                                               Rendering
COMPersistHelper::GetCurFileName                                    Get current filename
COMPersistHelper::GetMaxStreamSize                                  Get maximum stream size
COMPersistHelper::InitNew                                           Initialize object to default state
COMPersistHelper::LoadFromFile                                      Load object from file
COMPersistHelper::LoadFromStream                                    Load object from stream
COMPersistHelper::SaveToFile                                        Save object to file
COMPersistHelper::SaveToStream                                      Save object to stream
COMPersistHelper::__construct                                       Construct a COMPersistHelper object
Componere\Abstract\Definition::addInterface                         Add Interface
Componere\Abstract\Definition::addMethod                            Add Method
Componere\Abstract\Definition::addTrait                             Add Trait
Componere\Abstract\Definition::getReflector                         Reflection
Componere\cast                                                      Casting
Componere\cast_by_ref                                               Casting
Componere\Definition::addConstant                                   Add Constant
Componere\Definition::addProperty                                   Add Property
Componere\Definition::getClosure                                    Get Closure
Componere\Definition::getClosures                                   Get Closures
Componere\Definition::isRegistered                                  State Detection
Componere\Definition::register                                      Registration
Componere\Definition::__construct                                   Definition Construction
Componere\Method::getReflector                                      Reflection
Componere\Method::setPrivate                                        Accessibility Modification
Componere\Method::setProtected                                      Accessibility Modification
Componere\Method::setStatic                                         Accessibility Modification
Componere\Method::__construct                                       Method Construction
Componere\Patch::apply                                              Application
Componere\Patch::derive                                             Patch Derivation
Componere\Patch::getClosure                                         Get Closure
Componere\Patch::getClosures                                        Get Closures
Componere\Patch::isApplied                                          State Detection
Componere\Patch::revert                                             Reversal
Componere\Patch::__construct                                        Patch Construction
Componere\Value::hasDefault                                         Value Interaction
Componere\Value::isPrivate                                          Accessibility Detection
Componere\Value::isProtected                                        Accessibility Detection
Componere\Value::isStatic                                           Accessibility Detection
Componere\Value::setPrivate                                         Accessibility Modification
Componere\Value::setProtected                                       Accessibility Modification
Componere\Value::setStatic                                          Accessibility Modification
Componere\Value::__construct                                        Value Construction
com_create_guid                                                     Generate a globally unique identifier (GUID)
com_event_sink                                                      Connect events from a COM object to a PHP object
com_get_active_object                                               Returns a handle to an already running instance of a COM object
com_load_typelib                                                    Loads a Typelib
com_message_pump                                                    Process COM messages, sleeping for up to timeoutms milliseconds
com_print_typeinfo                                                  Print out a PHP class definition for a dispatchable interface
Cond::broadcast                                                     Broadcast a Condition
Cond::create                                                        Create a Condition
Cond::destroy                                                       Destroy a Condition
Cond::signal                                                        Signal a Condition
Cond::wait                                                          Wait for Condition
Context parameters                                                  Context parameter listing
Countable::count                                                    Count elements of an object
CrudOperationBindable::bind                                         Bind value to placeholder
CrudOperationLimitable::limit                                       Set result limit
CrudOperationSkippable::skip                                        Number of operations to skip
CrudOperationSortable::sort                                         Sort results
cubrid_affected_rows                                                Return the number of rows affected by the last SQL statement
cubrid_bind                                                         Bind variables to a prepared statement as parameters
cubrid_client_encoding                                              Return the current CUBRID connection charset
cubrid_close                                                        Close CUBRID connection
cubrid_close_prepare                                                Close the request handle
cubrid_close_request                                                Close the request handle
cubrid_column_names                                                 Get the column names in result
cubrid_column_types                                                 Get column types in result
cubrid_col_get                                                      Get contents of collection type column using OID
cubrid_col_size                                                     Get the number of elements in collection type column using OID
cubrid_commit                                                       Commit a transaction
cubrid_connect                                                      Open a connection to a CUBRID Server
cubrid_connect_with_url                                             Establish the environment for connecting to CUBRID server
cubrid_current_oid                                                  Get OID of the current cursor location
cubrid_data_seek                                                    Move the internal row pointer of the CUBRID result
cubrid_db_name                                                      Get db name from results of cubrid_list_dbs
cubrid_disconnect                                                   Close a database connection
cubrid_drop                                                         Delete an instance using OID
cubrid_errno                                                        Return the numerical value of the error message from previous CUBRID operation
cubrid_error                                                        Get the error message
cubrid_error_code                                                   Get error code for the most recent function call
cubrid_error_code_facility                                          Get the facility code of error
cubrid_error_msg                                                    Get last error message for the most recent function call
cubrid_execute                                                      Execute a prepared SQL statement
cubrid_fetch                                                        Fetch the next row from a result set
cubrid_fetch_array                                                  Fetch a result row as an associative array, a numeric array, or both
cubrid_fetch_assoc                                                  Return the associative array that corresponds to the fetched row
cubrid_fetch_field                                                  Get column information from a result and return as an object
cubrid_fetch_lengths                                                Return an array with the lengths of the values of each field from the current row
cubrid_fetch_object                                                 Fetch the next row and return it as an object
cubrid_fetch_row                                                    Return a numerical array with the values of the current row
cubrid_field_flags                                                  Return a string with the flags of the given field offset
cubrid_field_len                                                    Get the maximum length of the specified field
cubrid_field_name                                                   Return the name of the specified field index
cubrid_field_seek                                                   Move the result set cursor to the specified field offset
cubrid_field_table                                                  Return the name of the table of the specified field
cubrid_field_type                                                   Return the type of the column corresponding to the given field offset
cubrid_free_result                                                  Free the memory occupied by the result data
cubrid_get                                                          Get a column using OID
cubrid_get_autocommit                                               Get auto-commit mode of the connection
cubrid_get_charset                                                  Return the current CUBRID connection charset
cubrid_get_class_name                                               Get the class name using OID
cubrid_get_client_info                                              Return the client library version
cubrid_get_db_parameter                                             Returns the CUBRID database parameters
cubrid_get_query_timeout                                            Get the query timeout value of the request
cubrid_get_server_info                                              Return the CUBRID server version
cubrid_insert_id                                                    Return the ID generated for the last updated AUTO_INCREMENT column
cubrid_is_instance                                                  Check whether the instance pointed by OID exists
cubrid_list_dbs                                                     Return an array with the list of all existing CUBRID databases
cubrid_load_from_glo                                                Read data from a GLO instance and save it in a file
cubrid_lob2_bind                                                    Bind a lob object or a string as a lob object to a prepared statement as parameters
cubrid_lob2_close                                                   Close LOB object
cubrid_lob2_export                                                  Export the lob object to a file
cubrid_lob2_import                                                  Import BLOB/CLOB data from a file
cubrid_lob2_new                                                     Create a lob object
cubrid_lob2_read                                                    Read from BLOB/CLOB data
cubrid_lob2_seek                                                    Move the cursor of a lob object
cubrid_lob2_seek64                                                  Move the cursor of a lob object
cubrid_lob2_size                                                    Get a lob object's size
cubrid_lob2_size64                                                  Get a lob object's size
cubrid_lob2_tell                                                    Tell the cursor position of the LOB object
cubrid_lob2_tell64                                                  Tell the cursor position of the LOB object
cubrid_lob2_write                                                   Write to a lob object
cubrid_lob_close                                                    Close BLOB/CLOB data
cubrid_lob_export                                                   Export BLOB/CLOB data to file
cubrid_lob_get                                                      Get BLOB/CLOB data
cubrid_lob_send                                                     Read BLOB/CLOB data and send straight to browser
cubrid_lob_size                                                     Get BLOB/CLOB data size
cubrid_lock_read                                                    Set a read lock on the given OID
cubrid_lock_write                                                   Set a write lock on the given OID
cubrid_move_cursor                                                  Move the cursor in the result
cubrid_new_glo                                                      Create a glo instance
cubrid_next_result                                                  Get result of next query when executing multiple SQL statements
cubrid_num_cols                                                     Return the number of columns in the result set
cubrid_num_fields                                                   Return the number of columns in the result set
cubrid_num_rows                                                     Get the number of rows in the result set
cubrid_pconnect                                                     Open a persistent connection to a CUBRID server
cubrid_pconnect_with_url                                            Open a persistent connection to CUBRID server
cubrid_ping                                                         Ping a server connection or reconnect if there is no connection
cubrid_prepare                                                      Prepare a SQL statement for execution
cubrid_put                                                          Update a column using OID
cubrid_query                                                        Send a CUBRID query
cubrid_real_escape_string                                           Escape special characters in a string for use in an SQL statement
cubrid_result                                                       Return the value of a specific field in a specific row
cubrid_rollback                                                     Roll back a transaction
cubrid_save_to_glo                                                  Save requested file in a GLO instance
cubrid_schema                                                       Get the requested schema information
cubrid_send_glo                                                     Read data from glo and send it to std output
cubrid_seq_drop                                                     Delete an element from sequence type column using OID
cubrid_seq_insert                                                   Insert an element to a sequence type column using OID
cubrid_seq_put                                                      Update the element value of sequence type column using OID
cubrid_set_add                                                      Insert a single element to set type column using OID
cubrid_set_autocommit                                               Set autocommit mode of the connection
cubrid_set_db_parameter                                             Sets the CUBRID database parameters
cubrid_set_drop                                                     Delete an element from set type column using OID
cubrid_set_query_timeout                                            Set the timeout time of query execution
cubrid_unbuffered_query                                             Perform a query without fetching the results into memory
cubrid_version                                                      Get the CUBRID PHP module's version
CURL context options                                                CURL context option listing
CURLFile::getFilename                                               Get file name
CURLFile::getMimeType                                               Get MIME type
CURLFile::getPostFilename                                           Get file name for POST
CURLFile::setMimeType                                               Set MIME type
CURLFile::setPostFilename                                           Set file name for POST
CURLFile::__construct                                               Create a CURLFile object
data://                                                             Data (RFC 2397)
DatabaseObject::existsInDatabase                                    Check if object exists in database
DatabaseObject::getName                                             Get object name
DatabaseObject::getSession                                          Get session name
DateInterval::createFromDateString                                  Sets up a DateInterval from the relative parts of the string
DateInterval::format                                                Formats the interval
DateInterval::__construct                                           Creates a new DateInterval object
DatePeriod::getDateInterval                                         Gets the interval
DatePeriod::getEndDate                                              Gets the end date
DatePeriod::getRecurrences                                          Gets the number of recurrences
DatePeriod::getStartDate                                            Gets the start date
DatePeriod::__construct                                             Creates a new DatePeriod object
DateTime::add                                                       Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object
DateTime::createFromFormat                                          Parses a time string according to a specified format
DateTime::createFromImmutable                                       Returns new DateTime object encapsulating the given DateTimeImmutable object
DateTime::createFromInterface                                       Returns new DateTime object encapsulating the given DateTimeInterface object
DateTime::diff                                                      Returns the difference between two DateTime objects
DateTime::format                                                    Returns date formatted according to given format
DateTime::getLastErrors                                             Returns the warnings and errors
DateTime::getOffset                                                 Returns the timezone offset
DateTime::getTimestamp                                              Gets the Unix timestamp
DateTime::getTimezone                                               Return time zone relative to given DateTime
DateTime::modify                                                    Alters the timestamp
DateTime::setDate                                                   Sets the date
DateTime::setISODate                                                Sets the ISO date
DateTime::setTime                                                   Sets the time
DateTime::setTimestamp                                              Sets the date and time based on an Unix timestamp
DateTime::setTimezone                                               Sets the time zone for the DateTime object
DateTime::sub                                                       Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object
DateTime::__construct                                               Returns new DateTime object
DateTime::__set_state                                               The __set_state handler
DateTime::__wakeup                                                  The __wakeup handler
DateTimeImmutable::add                                              Adds an amount of days, months, years, hours, minutes and seconds
DateTimeImmutable::createFromFormat                                 Parses a time string according to a specified format
DateTimeImmutable::createFromInterface                              Returns new DateTimeImmutable object encapsulating the given DateTimeInterface object
DateTimeImmutable::createFromMutable                                Returns new DateTimeImmutable object encapsulating the given DateTime object
DateTimeImmutable::getLastErrors                                    Returns the warnings and errors
DateTimeImmutable::modify                                           Creates a new object with modified timestamp
DateTimeImmutable::setDate                                          Sets the date
DateTimeImmutable::setISODate                                       Sets the ISO date
DateTimeImmutable::setTime                                          Sets the time
DateTimeImmutable::setTimestamp                                     Sets the date and time based on a Unix timestamp
DateTimeImmutable::setTimezone                                      Sets the time zone
DateTimeImmutable::sub                                              Subtracts an amount of days, months, years, hours, minutes and seconds
DateTimeImmutable::__construct                                      Returns new DateTimeImmutable object
DateTimeImmutable::__set_state                                      The __set_state handler
DateTimeZone::getLocation                                           Returns location information for a timezone
DateTimeZone::getName                                               Returns the name of the timezone
DateTimeZone::getOffset                                             Returns the timezone offset from GMT
DateTimeZone::getTransitions                                        Returns all transitions for the timezone
DateTimeZone::listAbbreviations                                     Returns associative array containing dst, offset and the timezone name
DateTimeZone::listIdentifiers                                       Returns a numerically indexed array containing all defined timezone identifiers
DateTimeZone::__construct                                           Creates new DateTimeZone object
db2_autocommit                                                      Returns or sets the AUTOCOMMIT state for a database connection
db2_bind_param                                                      Binds a PHP variable to an SQL statement parameter
db2_client_info                                                     Returns an object with properties that describe the DB2 database client
db2_close                                                           Closes a database connection
db2_columns                                                         Returns a result set listing the columns and associated metadata for a table
db2_column_privileges                                               Returns a result set listing the columns and associated privileges for a table
db2_commit                                                          Commits a transaction
db2_connect                                                         Returns a connection to a database
db2_conn_error                                                      Returns a string containing the SQLSTATE returned by the last connection attempt
db2_conn_errormsg                                                   Returns the last connection error message and SQLCODE value
db2_cursor_type                                                     Returns the cursor type used by a statement resource
db2_escape_string                                                   Used to escape certain characters
db2_exec                                                            Executes an SQL statement directly
db2_execute                                                         Executes a prepared SQL statement
db2_fetch_array                                                     Returns an array, indexed by column position, representing a row in a result set
db2_fetch_assoc                                                     Returns an array, indexed by column name, representing a row in a result set
db2_fetch_both                                                      Returns an array, indexed by both column name and position, representing a row in a result set
db2_fetch_object                                                    Returns an object with properties representing columns in the fetched row
db2_fetch_row                                                       Sets the result set pointer to the next row or requested row
db2_field_display_size                                              Returns the maximum number of bytes required to display a column
db2_field_name                                                      Returns the name of the column in the result set
db2_field_num                                                       Returns the position of the named column in a result set
db2_field_precision                                                 Returns the precision of the indicated column in a result set
db2_field_scale                                                     Returns the scale of the indicated column in a result set
db2_field_type                                                      Returns the data type of the indicated column in a result set
db2_field_width                                                     Returns the width of the current value of the indicated column in a result set
db2_foreign_keys                                                    Returns a result set listing the foreign keys for a table
db2_free_result                                                     Frees resources associated with a result set
db2_free_stmt                                                       Frees resources associated with the indicated statement resource
db2_get_option                                                      Retrieves an option value for a statement resource or a connection resource
db2_last_insert_id                                                  Returns the auto generated ID of the last insert query that successfully executed on this connection
db2_lob_read                                                        Gets a user defined size of LOB files with each invocation
db2_next_result                                                     Requests the next result set from a stored procedure
db2_num_fields                                                      Returns the number of fields contained in a result set
db2_num_rows                                                        Returns the number of rows affected by an SQL statement
db2_pclose                                                          Closes a persistent database connection
db2_pconnect                                                        Returns a persistent connection to a database
db2_prepare                                                         Prepares an SQL statement to be executed
db2_primary_keys                                                    Returns a result set listing primary keys for a table
db2_procedures                                                      Returns a result set listing the stored procedures registered in a database
db2_procedure_columns                                               Returns a result set listing stored procedure parameters
db2_result                                                          Returns a single column from a row in the result set
db2_rollback                                                        Rolls back a transaction
db2_server_info                                                     Returns an object with properties that describe the DB2 database server
db2_set_option                                                      Set options for connection or statement resources
db2_special_columns                                                 Returns a result set listing the unique row identifier columns for a table
db2_statistics                                                      Returns a result set listing the index and statistics for a table
db2_stmt_error                                                      Returns a string containing the SQLSTATE returned by an SQL statement
db2_stmt_errormsg                                                   Returns a string containing the last SQL statement error message
db2_tables                                                          Returns a result set listing the tables and associated metadata in a database
db2_table_privileges                                                Returns a result set listing the tables and associated privileges in a database
dbase_add_record                                                    Adds a record to a database
dbase_close                                                         Closes a database
dbase_create                                                        Creates a database
dbase_delete_record                                                 Deletes a record from a database
dbase_get_header_info                                               Gets the header info of a database
dbase_get_record                                                    Gets a record from a database as an indexed array
dbase_get_record_with_names                                         Gets a record from a database as an associative array
dbase_numfields                                                     Gets the number of fields of a database
dbase_numrecords                                                    Gets the number of records in a database
dbase_open                                                          Opens a database
dbase_pack                                                          Packs a database
dbase_replace_record                                                Replaces a record in a database
dba_close                                                           Close a DBA database
dba_delete                                                          Delete DBA entry specified by key
dba_exists                                                          Check whether key exists
dba_fetch                                                           Fetch data specified by key
dba_firstkey                                                        Fetch first key
dba_handlers                                                        List all the handlers available
dba_insert                                                          Insert entry
dba_key_split                                                       Splits a key in string representation into array representation
dba_list                                                            List all open database files
dba_nextkey                                                         Fetch next key
dba_open                                                            Open database
dba_optimize                                                        Optimize database
dba_popen                                                           Open database persistently
dba_replace                                                         Replace or insert entry
dba_sync                                                            Synchronize database
dbplus_add                                                          Add a tuple to a relation
dbplus_aql                                                          Perform AQL query
dbplus_chdir                                                        Get/Set database virtual current directory
dbplus_close                                                        Close a relation
dbplus_curr                                                         Get current tuple from relation
dbplus_errcode                                                      Get error string for given errorcode or last error
dbplus_errno                                                        Get error code for last operation
dbplus_find                                                         Set a constraint on a relation
dbplus_first                                                        Get first tuple from relation
dbplus_flush                                                        Flush all changes made on a relation
dbplus_freealllocks                                                 Free all locks held by this client
dbplus_freelock                                                     Release write lock on tuple
dbplus_freerlocks                                                   Free all tuple locks on given relation
dbplus_getlock                                                      Get a write lock on a tuple
dbplus_getunique                                                    Get an id number unique to a relation
dbplus_info                                                         Get information about a relation
dbplus_last                                                         Get last tuple from relation
dbplus_lockrel                                                      Request write lock on relation
dbplus_next                                                         Get next tuple from relation
dbplus_open                                                         Open relation file
dbplus_prev                                                         Get previous tuple from relation
dbplus_rchperm                                                      Change relation permissions
dbplus_rcreate                                                      Creates a new DB++ relation
dbplus_rcrtexact                                                    Creates an exact but empty copy of a relation including indices
dbplus_rcrtlike                                                     Creates an empty copy of a relation with default indices
dbplus_resolve                                                      Resolve host information for relation
dbplus_restorepos                                                   Restore position
dbplus_rkeys                                                        Specify new primary key for a relation
dbplus_ropen                                                        Open relation file local
dbplus_rquery                                                       Perform local (raw) AQL query
dbplus_rrename                                                      Rename a relation
dbplus_rsecindex                                                    Create a new secondary index for a relation
dbplus_runlink                                                      Remove relation from filesystem
dbplus_rzap                                                         Remove all tuples from relation
dbplus_savepos                                                      Save position
dbplus_setindex                                                     Set index
dbplus_setindexbynumber                                             Set index by number
dbplus_sql                                                          Perform SQL query
dbplus_tcl                                                          Execute TCL code on server side
dbplus_tremove                                                      Remove tuple and return new current tuple
dbplus_undo                                                         Undo
dbplus_undoprepare                                                  Prepare undo
dbplus_unlockrel                                                    Give up write lock on relation
dbplus_unselect                                                     Remove a constraint from relation
dbplus_update                                                       Update specified tuple in relation
dbplus_xlockrel                                                     Request exclusive lock on relation
dbplus_xunlockrel                                                   Free exclusive lock on relation
dcgettext                                                           Overrides the domain for a single lookup
dcngettext                                                          Plural version of dcgettext
delete                                                              See unlink or unset
dgettext                                                            Override the current domain
die                                                                 Equivalent to exit
dio_close                                                           Closes the file descriptor given by fd
dio_fcntl                                                           Performs a c library fcntl on fd
dio_open                                                            Opens a file (creating it if necessary) at a lower level than the C library input/ouput stream functions allow
dio_read                                                            Reads bytes from a file descriptor
dio_seek                                                            Seeks to pos on fd from whence
dio_stat                                                            Gets stat information about the file descriptor fd
dio_tcsetattr                                                       Sets terminal attributes and baud rate for a serial port
dio_truncate                                                        Truncates file descriptor fd to offset bytes
dio_write                                                           Writes data to fd with optional truncation at length
Directory::close                                                    Close directory handle
Directory::read                                                     Read entry from directory handle
Directory::rewind                                                   Rewind directory handle
DirectoryIterator::current                                          Return the current DirectoryIterator item
DirectoryIterator::getATime                                         Get last access time of the current DirectoryIterator item
DirectoryIterator::getBasename                                      Get base name of current DirectoryIterator item
DirectoryIterator::getCTime                                         Get inode change time of the current DirectoryIterator item
DirectoryIterator::getExtension                                     Gets the file extension
DirectoryIterator::getFilename                                      Return file name of current DirectoryIterator item
DirectoryIterator::getGroup                                         Get group for the current DirectoryIterator item
DirectoryIterator::getInode                                         Get inode for the current DirectoryIterator item
DirectoryIterator::getMTime                                         Get last modification time of current DirectoryIterator item
DirectoryIterator::getOwner                                         Get owner of current DirectoryIterator item
DirectoryIterator::getPath                                          Get path of current Iterator item without filename
DirectoryIterator::getPathname                                      Return path and file name of current DirectoryIterator item
DirectoryIterator::getPerms                                         Get the permissions of current DirectoryIterator item
DirectoryIterator::getSize                                          Get size of current DirectoryIterator item
DirectoryIterator::getType                                          Determine the type of the current DirectoryIterator item
DirectoryIterator::isDir                                            Determine if current DirectoryIterator item is a directory
DirectoryIterator::isDot                                            Determine if current DirectoryIterator item is '.' or '..'
DirectoryIterator::isExecutable                                     Determine if current DirectoryIterator item is executable
DirectoryIterator::isFile                                           Determine if current DirectoryIterator item is a regular file
DirectoryIterator::isLink                                           Determine if current DirectoryIterator item is a symbolic link
DirectoryIterator::isReadable                                       Determine if current DirectoryIterator item can be read
DirectoryIterator::isWritable                                       Determine if current DirectoryIterator item can be written to
DirectoryIterator::key                                              Return the key for the current DirectoryIterator item
DirectoryIterator::next                                             Move forward to next DirectoryIterator item
DirectoryIterator::rewind                                           Rewind the DirectoryIterator back to the start
DirectoryIterator::seek                                             Seek to a DirectoryIterator item
DirectoryIterator::valid                                            Check whether current DirectoryIterator position is a valid file
DirectoryIterator::__construct                                      Constructs a new directory iterator from a path
DirectoryIterator::__toString                                       Get file name as a string
dngettext                                                           Plural version of dgettext
DocResult::fetchAll                                                 Get all rows
DocResult::fetchOne                                                 Get one row
DocResult::getWarnings                                              Get warnings from last operation
DocResult::getWarningsCount                                         Get warning count from last operation
DocResult::__construct                                              DocResult constructor
DOMAttr::isId                                                       Checks if attribute is a defined ID
DOMAttr::__construct                                                Creates a new DOMAttr object
DOMCdataSection::__construct                                        Constructs a new DOMCdataSection object
DOMCharacterData::appendData                                        Append the string to the end of the character data of the node
DOMCharacterData::deleteData                                        Remove a range of characters from the node
DOMCharacterData::insertData                                        Insert a string at the specified 16-bit unit offset
DOMCharacterData::replaceData                                       Replace a substring within the DOMCharacterData node
DOMCharacterData::substringData                                     Extracts a range of data from the node
DOMComment::__construct                                             Creates a new DOMComment object
DOMDocument::createAttribute                                        Create new attribute
DOMDocument::createAttributeNS                                      Create new attribute node with an associated namespace
DOMDocument::createCDATASection                                     Create new cdata node
DOMDocument::createComment                                          Create new comment node
DOMDocument::createDocumentFragment                                 Create new document fragment
DOMDocument::createElement                                          Create new element node
DOMDocument::createElementNS                                        Create new element node with an associated namespace
DOMDocument::createEntityReference                                  Create new entity reference node
DOMDocument::createProcessingInstruction                            Creates new PI node
DOMDocument::createTextNode                                         Create new text node
DOMDocument::getElementById                                         Searches for an element with a certain id
DOMDocument::getElementsByTagName                                   Searches for all elements with given local tag name
DOMDocument::getElementsByTagNameNS                                 Searches for all elements with given tag name in specified namespace
DOMDocument::importNode                                             Import node into current document
DOMDocument::load                                                   Load XML from a file
DOMDocument::loadHTML                                               Load HTML from a string
DOMDocument::loadHTMLFile                                           Load HTML from a file
DOMDocument::loadXML                                                Load XML from a string
DOMDocument::normalizeDocument                                      Normalizes the document
DOMDocument::registerNodeClass                                      Register extended class used to create base node type
DOMDocument::relaxNGValidate                                        Performs relaxNG validation on the document
DOMDocument::relaxNGValidateSource                                  Performs relaxNG validation on the document
DOMDocument::save                                                   Dumps the internal XML tree back into a file
DOMDocument::saveHTML                                               Dumps the internal document into a string using HTML formatting
DOMDocument::saveHTMLFile                                           Dumps the internal document into a file using HTML formatting
DOMDocument::saveXML                                                Dumps the internal XML tree back into a string
DOMDocument::schemaValidate                                         Validates a document based on a schema. Only XML Schema 1.0 is supported.
DOMDocument::schemaValidateSource                                   Validates a document based on a schema
DOMDocument::validate                                               Validates the document based on its DTD
DOMDocument::xinclude                                               Substitutes XIncludes in a DOMDocument Object
DOMDocument::__construct                                            Creates a new DOMDocument object
DOMDocumentFragment::appendXML                                      Append raw XML data
DOMElement::getAttribute                                            Returns value of attribute
DOMElement::getAttributeNode                                        Returns attribute node
DOMElement::getAttributeNodeNS                                      Returns attribute node
DOMElement::getAttributeNS                                          Returns value of attribute
DOMElement::getElementsByTagName                                    Gets elements by tagname
DOMElement::getElementsByTagNameNS                                  Get elements by namespaceURI and localName
DOMElement::hasAttribute                                            Checks to see if attribute exists
DOMElement::hasAttributeNS                                          Checks to see if attribute exists
DOMElement::removeAttribute                                         Removes attribute
DOMElement::removeAttributeNode                                     Removes attribute
DOMElement::removeAttributeNS                                       Removes attribute
DOMElement::setAttribute                                            Adds new attribute
DOMElement::setAttributeNode                                        Adds new attribute node to element
DOMElement::setAttributeNodeNS                                      Adds new attribute node to element
DOMElement::setAttributeNS                                          Adds new attribute
DOMElement::setIdAttribute                                          Declares the attribute specified by name to be of type ID
DOMElement::setIdAttributeNode                                      Declares the attribute specified by node to be of type ID
DOMElement::setIdAttributeNS                                        Declares the attribute specified by local name and namespace URI to be of type ID
DOMElement::__construct                                             Creates a new DOMElement object
DOMEntityReference::__construct                                     Creates a new DOMEntityReference object
DOMImplementation::createDocument                                   Creates a DOMDocument object of the specified type with its document element
DOMImplementation::createDocumentType                               Creates an empty DOMDocumentType object
DOMImplementation::hasFeature                                       Test if the DOM implementation implements a specific feature
DOMImplementation::__construct                                      Creates a new DOMImplementation object
DOMNamedNodeMap::count                                              Get number of nodes in the map
DOMNamedNodeMap::getNamedItem                                       Retrieves a node specified by name
DOMNamedNodeMap::getNamedItemNS                                     Retrieves a node specified by local name and namespace URI
DOMNamedNodeMap::item                                               Retrieves a node specified by index
DOMNode::appendChild                                                Adds new child at the end of the children
DOMNode::C14N                                                       Canonicalize nodes to a string
DOMNode::C14NFile                                                   Canonicalize nodes to a file
DOMNode::cloneNode                                                  Clones a node
DOMNode::getLineNo                                                  Get line number for a node
DOMNode::getNodePath                                                Get an XPath for a node
DOMNode::hasAttributes                                              Checks if node has attributes
DOMNode::hasChildNodes                                              Checks if node has children
DOMNode::insertBefore                                               Adds a new child before a reference node
DOMNode::isDefaultNamespace                                         Checks if the specified namespaceURI is the default namespace or not
DOMNode::isSameNode                                                 Indicates if two nodes are the same node
DOMNode::isSupported                                                Checks if feature is supported for specified version
DOMNode::lookupNamespaceUri                                         Gets the namespace URI of the node based on the prefix
DOMNode::lookupPrefix                                               Gets the namespace prefix of the node based on the namespace URI
DOMNode::normalize                                                  Normalizes the node
DOMNode::removeChild                                                Removes child from list of children
DOMNode::replaceChild                                               Replaces a child
DOMNodeList::count                                                  Get number of nodes in the list
DOMNodeList::item                                                   Retrieves a node specified by index
DOMProcessingInstruction::__construct                               Creates a new DOMProcessingInstruction object
DOMText::isElementContentWhitespace                                 Returns whether this text node contains whitespace in element content
DOMText::isWhitespaceInElementContent                               Indicates whether this text node contains whitespace
DOMText::splitText                                                  Breaks this node into two nodes at the specified offset
DOMText::__construct                                                Creates a new DOMText object
DOMXPath::evaluate                                                  Evaluates the given XPath expression and returns a typed result if possible
DOMXPath::query                                                     Evaluates the given XPath expression
DOMXPath::registerNamespace                                         Registers the namespace with the DOMXPath object
DOMXPath::registerPhpFunctions                                      Register PHP functions as XPath functions
DOMXPath::__construct                                               Creates a new DOMXPath object
dotnet::__construct                                                 dotnet class constructor
Ds\Collection::clear                                                Removes all values
Ds\Collection::copy                                                 Returns a shallow copy of the collection
Ds\Collection::isEmpty                                              Returns whether the collection is empty
Ds\Collection::toArray                                              Converts the collection to an array
Ds\Deque::allocate                                                  Allocates enough memory for a required capacity
Ds\Deque::apply                                                     Updates all values by applying a callback function to each value
Ds\Deque::capacity                                                  Returns the current capacity
Ds\Deque::clear                                                     Removes all values from the deque
Ds\Deque::contains                                                  Determines if the deque contains given values
Ds\Deque::copy                                                      Returns a shallow copy of the deque
Ds\Deque::count                                                     Returns the number of values in the collection
Ds\Deque::filter                                                    Creates a new deque using a callable to determine which values to include
Ds\Deque::find                                                      Attempts to find a value's index
Ds\Deque::first                                                     Returns the first value in the deque
Ds\Deque::get                                                       Returns the value at a given index
Ds\Deque::insert                                                    Inserts values at a given index
Ds\Deque::isEmpty                                                   Returns whether the deque is empty
Ds\Deque::join                                                      Joins all values together as a string
Ds\Deque::jsonSerialize                                             Returns a representation that can be converted to JSON
Ds\Deque::last                                                      Returns the last value
Ds\Deque::map                                                       Returns the result of applying a callback to each value
Ds\Deque::merge                                                     Returns the result of adding all given values to the deque
Ds\Deque::pop                                                       Removes and returns the last value
Ds\Deque::push                                                      Adds values to the end of the deque
Ds\Deque::reduce                                                    Reduces the deque to a single value using a callback function
Ds\Deque::remove                                                    Removes and returns a value by index
Ds\Deque::reverse                                                   Reverses the deque in-place
Ds\Deque::reversed                                                  Returns a reversed copy
Ds\Deque::rotate                                                    Rotates the deque by a given number of rotations
Ds\Deque::set                                                       Updates a value at a given index
Ds\Deque::shift                                                     Removes and returns the first value
Ds\Deque::slice                                                     Returns a sub-deque of a given range
Ds\Deque::sort                                                      Sorts the deque in-place
Ds\Deque::sorted                                                    Returns a sorted copy
Ds\Deque::sum                                                       Returns the sum of all values in the deque
Ds\Deque::toArray                                                   Converts the deque to an array
Ds\Deque::unshift                                                   Adds values to the front of the deque
Ds\Deque::__construct                                               Creates a new instance
Ds\Hashable::equals                                                 Determines whether an object is equal to the current instance
Ds\Hashable::hash                                                   Returns a scalar value to be used as a hash value
Ds\Map::allocate                                                    Allocates enough memory for a required capacity
Ds\Map::apply                                                       Updates all values by applying a callback function to each value
Ds\Map::capacity                                                    Returns the current capacity
Ds\Map::clear                                                       Removes all values
Ds\Map::copy                                                        Returns a shallow copy of the map
Ds\Map::count                                                       Returns the number of values in the map
Ds\Map::diff                                                        Creates a new map using keys that aren't in another map
Ds\Map::filter                                                      Creates a new map using a callable to determine which pairs to include
Ds\Map::first                                                       Returns the first pair in the map
Ds\Map::get                                                         Returns the value for a given key
Ds\Map::hasKey                                                      Determines whether the map contains a given key
Ds\Map::hasValue                                                    Determines whether the map contains a given value
Ds\Map::intersect                                                   Creates a new map by intersecting keys with another map
Ds\Map::isEmpty                                                     Returns whether the map is empty
Ds\Map::jsonSerialize                                               Returns a representation that can be converted to JSON
Ds\Map::keys                                                        Returns a set of the map's keys
Ds\Map::ksort                                                       Sorts the map in-place by key
Ds\Map::ksorted                                                     Returns a copy, sorted by key
Ds\Map::last                                                        Returns the last pair of the map
Ds\Map::map                                                         Returns the result of applying a callback to each value
Ds\Map::merge                                                       Returns the result of adding all given associations
Ds\Map::pairs                                                       Returns a sequence containing all the pairs of the map
Ds\Map::put                                                         Associates a key with a value
Ds\Map::putAll                                                      Associates all key-value pairs of a traversable object or array
Ds\Map::reduce                                                      Reduces the map to a single value using a callback function
Ds\Map::remove                                                      Removes and returns a value by key
Ds\Map::reverse                                                     Reverses the map in-place
Ds\Map::reversed                                                    Returns a reversed copy
Ds\Map::skip                                                        Returns the pair at a given positional index
Ds\Map::slice                                                       Returns a subset of the map defined by a starting index and length
Ds\Map::sort                                                        Sorts the map in-place by value
Ds\Map::sorted                                                      Returns a copy, sorted by value
Ds\Map::sum                                                         Returns the sum of all values in the map
Ds\Map::toArray                                                     Converts the map to an array
Ds\Map::union                                                       Creates a new map using values from the current instance and another map
Ds\Map::values                                                      Returns a sequence of the map's values
Ds\Map::xor                                                         Creates a new map using keys of either the current instance or of another map, but not of both
Ds\Map::__construct                                                 Creates a new instance
Ds\Pair::clear                                                      Removes all values
Ds\Pair::copy                                                       Returns a shallow copy of the pair
Ds\Pair::isEmpty                                                    Returns whether the pair is empty
Ds\Pair::jsonSerialize                                              Returns a representation that can be converted to JSON
Ds\Pair::toArray                                                    Converts the pair to an array
Ds\Pair::__construct                                                Creates a new instance
Ds\PriorityQueue::allocate                                          Allocates enough memory for a required capacity
Ds\PriorityQueue::capacity                                          Returns the current capacity
Ds\PriorityQueue::clear                                             Removes all values
Ds\PriorityQueue::copy                                              Returns a shallow copy of the queue
Ds\PriorityQueue::count                                             Returns the number of values in the queue
Ds\PriorityQueue::isEmpty                                           Returns whether the queue is empty
Ds\PriorityQueue::jsonSerialize                                     Returns a representation that can be converted to JSON
Ds\PriorityQueue::peek                                              Returns the value at the front of the queue
Ds\PriorityQueue::pop                                               Removes and returns the value with the highest priority
Ds\PriorityQueue::push                                              Pushes values into the queue
Ds\PriorityQueue::toArray                                           Converts the queue to an array
Ds\PriorityQueue::__construct                                       Creates a new instance
Ds\Queue::allocate                                                  Allocates enough memory for a required capacity
Ds\Queue::capacity                                                  Returns the current capacity
Ds\Queue::clear                                                     Removes all values
Ds\Queue::copy                                                      Returns a shallow copy of the queue
Ds\Queue::count                                                     Returns the number of values in the queue
Ds\Queue::isEmpty                                                   Returns whether the queue is empty
Ds\Queue::jsonSerialize                                             Returns a representation that can be converted to JSON
Ds\Queue::peek                                                      Returns the value at the front of the queue
Ds\Queue::pop                                                       Removes and returns the value at the front of the queue
Ds\Queue::push                                                      Pushes values into the queue
Ds\Queue::toArray                                                   Converts the queue to an array
Ds\Queue::__construct                                               Creates a new instance
Ds\Sequence::allocate                                               Allocates enough memory for a required capacity
Ds\Sequence::apply                                                  Updates all values by applying a callback function to each value
Ds\Sequence::capacity                                               Returns the current capacity
Ds\Sequence::contains                                               Determines if the sequence contains given values
Ds\Sequence::filter                                                 Creates a new sequence using a callable to determine which values to include
Ds\Sequence::find                                                   Attempts to find a value's index
Ds\Sequence::first                                                  Returns the first value in the sequence
Ds\Sequence::get                                                    Returns the value at a given index
Ds\Sequence::insert                                                 Inserts values at a given index
Ds\Sequence::join                                                   Joins all values together as a string
Ds\Sequence::last                                                   Returns the last value
Ds\Sequence::map                                                    Returns the result of applying a callback to each value
Ds\Sequence::merge                                                  Returns the result of adding all given values to the sequence
Ds\Sequence::pop                                                    Removes and returns the last value
Ds\Sequence::push                                                   Adds values to the end of the sequence
Ds\Sequence::reduce                                                 Reduces the sequence to a single value using a callback function
Ds\Sequence::remove                                                 Removes and returns a value by index
Ds\Sequence::reverse                                                Reverses the sequence in-place
Ds\Sequence::reversed                                               Returns a reversed copy
Ds\Sequence::rotate                                                 Rotates the sequence by a given number of rotations
Ds\Sequence::set                                                    Updates a value at a given index
Ds\Sequence::shift                                                  Removes and returns the first value
Ds\Sequence::slice                                                  Returns a sub-sequence of a given range
Ds\Sequence::sort                                                   Sorts the sequence in-place
Ds\Sequence::sorted                                                 Returns a sorted copy
Ds\Sequence::sum                                                    Returns the sum of all values in the sequence
Ds\Sequence::unshift                                                Adds values to the front of the sequence
Ds\Set::add                                                         Adds values to the set
Ds\Set::allocate                                                    Allocates enough memory for a required capacity
Ds\Set::capacity                                                    Returns the current capacity
Ds\Set::clear                                                       Removes all values
Ds\Set::contains                                                    Determines if the set contains all values
Ds\Set::copy                                                        Returns a shallow copy of the set
Ds\Set::count                                                       Returns the number of values in the set
Ds\Set::diff                                                        Creates a new set using values that aren't in another set
Ds\Set::filter                                                      Creates a new set using a callable to determine which values to include
Ds\Set::first                                                       Returns the first value in the set
Ds\Set::get                                                         Returns the value at a given index
Ds\Set::intersect                                                   Creates a new set by intersecting values with another set
Ds\Set::isEmpty                                                     Returns whether the set is empty
Ds\Set::join                                                        Joins all values together as a string
Ds\Set::jsonSerialize                                               Returns a representation that can be converted to JSON
Ds\Set::last                                                        Returns the last value in the set
Ds\Set::merge                                                       Returns the result of adding all given values to the set
Ds\Set::reduce                                                      Reduces the set to a single value using a callback function
Ds\Set::remove                                                      Removes all given values from the set
Ds\Set::reverse                                                     Reverses the set in-place
Ds\Set::reversed                                                    Returns a reversed copy
Ds\Set::slice                                                       Returns a sub-set of a given range
Ds\Set::sort                                                        Sorts the set in-place
Ds\Set::sorted                                                      Returns a sorted copy
Ds\Set::sum                                                         Returns the sum of all values in the set
Ds\Set::toArray                                                     Converts the set to an array
Ds\Set::union                                                       Creates a new set using values from the current instance and another set
Ds\Set::xor                                                         Creates a new set using values in either the current instance or in another set, but not in both
Ds\Set::__construct                                                 Creates a new instance
Ds\Stack::allocate                                                  Allocates enough memory for a required capacity
Ds\Stack::capacity                                                  Returns the current capacity
Ds\Stack::clear                                                     Removes all values
Ds\Stack::copy                                                      Returns a shallow copy of the stack
Ds\Stack::count                                                     Returns the number of values in the stack
Ds\Stack::isEmpty                                                   Returns whether the stack is empty
Ds\Stack::jsonSerialize                                             Returns a representation that can be converted to JSON
Ds\Stack::peek                                                      Returns the value at the top of the stack
Ds\Stack::pop                                                       Removes and returns the value at the top of the stack
Ds\Stack::push                                                      Pushes values onto the stack
Ds\Stack::toArray                                                   Converts the stack to an array
Ds\Stack::__construct                                               Creates a new instance
Ds\Vector::allocate                                                 Allocates enough memory for a required capacity
Ds\Vector::apply                                                    Updates all values by applying a callback function to each value
Ds\Vector::capacity                                                 Returns the current capacity
Ds\Vector::clear                                                    Removes all values
Ds\Vector::contains                                                 Determines if the vector contains given values
Ds\Vector::copy                                                     Returns a shallow copy of the vector
Ds\Vector::count                                                    Returns the number of values in the collection
Ds\Vector::filter                                                   Creates a new vector using a callable to determine which values to include
Ds\Vector::find                                                     Attempts to find a value's index
Ds\Vector::first                                                    Returns the first value in the vector
Ds\Vector::get                                                      Returns the value at a given index
Ds\Vector::insert                                                   Inserts values at a given index
Ds\Vector::isEmpty                                                  Returns whether the vector is empty
Ds\Vector::join                                                     Joins all values together as a string
Ds\Vector::jsonSerialize                                            Returns a representation that can be converted to JSON
Ds\Vector::last                                                     Returns the last value
Ds\Vector::map                                                      Returns the result of applying a callback to each value
Ds\Vector::merge                                                    Returns the result of adding all given values to the vector
Ds\Vector::pop                                                      Removes and returns the last value
Ds\Vector::push                                                     Adds values to the end of the vector
Ds\Vector::reduce                                                   Reduces the vector to a single value using a callback function
Ds\Vector::remove                                                   Removes and returns a value by index
Ds\Vector::reverse                                                  Reverses the vector in-place
Ds\Vector::reversed                                                 Returns a reversed copy
Ds\Vector::rotate                                                   Rotates the vector by a given number of rotations
Ds\Vector::set                                                      Updates a value at a given index
Ds\Vector::shift                                                    Removes and returns the first value
Ds\Vector::slice                                                    Returns a sub-vector of a given range
Ds\Vector::sort                                                     Sorts the vector in-place
Ds\Vector::sorted                                                   Returns a sorted copy
Ds\Vector::sum                                                      Returns the sum of all values in the vector
Ds\Vector::toArray                                                  Converts the vector to an array
Ds\Vector::unshift                                                  Adds values to the front of the vector
Ds\Vector::__construct                                              Creates a new instance
each                                                                Return the current key and value pair from an array and advance the array cursor
easter_date                                                         Get Unix timestamp for midnight on Easter of a given year
easter_days                                                         Get number of days after March 21 on which Easter falls for a given year
echo                                                                Output one or more strings
eio_busy                                                            Artificially increase load. Could be useful in tests, benchmarking
eio_cancel                                                          Cancels a request
eio_chmod                                                           Change file/directory permissions
eio_chown                                                           Change file/directory permissions
eio_close                                                           Close file
eio_custom                                                          Execute custom request like any other eio_* call
eio_dup2                                                            Duplicate a file descriptor
eio_event_loop                                                      Polls libeio until all requests proceeded
eio_fallocate                                                       Allows the caller to directly manipulate the allocated disk space for a file
eio_fchmod                                                          Change file permissions
eio_fchown                                                          Change file ownership
eio_fdatasync                                                       Synchronize a file's in-core state with storage device
eio_fstat                                                           Get file status
eio_fstatvfs                                                        Get file system statistics
eio_fsync                                                           Synchronize a file's in-core state with storage device
eio_ftruncate                                                       Truncate a file
eio_futime                                                          Change file last access and modification times
eio_get_event_stream                                                Get stream representing a variable used in internal communications with libeio
eio_get_last_error                                                  Returns string describing the last error associated with a request resource
eio_grp                                                             Creates a request group
eio_grp_add                                                         Adds a request to the request group
eio_grp_cancel                                                      Cancels a request group
eio_grp_limit                                                       Set group limit
eio_init                                                            (Re-)initialize Eio
eio_link                                                            Create a hardlink for file
eio_lstat                                                           Get file status
eio_mkdir                                                           Create directory
eio_mknod                                                           Create a special or ordinary file
eio_nop                                                             Does nothing, except go through the whole request cycle
eio_npending                                                        Returns number of finished, but unhandled requests
eio_nready                                                          Returns number of not-yet handled requests
eio_nreqs                                                           Returns number of requests to be processed
eio_nthreads                                                        Returns number of threads currently in use
eio_open                                                            Opens a file
eio_poll                                                            Can be to be called whenever there are pending requests that need finishing
eio_read                                                            Read from a file descriptor at given offset
eio_readahead                                                       Perform file readahead into page cache
eio_readdir                                                         Reads through a whole directory
eio_readlink                                                        Read value of a symbolic link
eio_realpath                                                        Get the canonicalized absolute pathname
eio_rename                                                          Change the name or location of a file
eio_rmdir                                                           Remove a directory
eio_seek                                                            Repositions the offset of the open file associated with the fd argument to the argument offset according to the directive whence
eio_sendfile                                                        Transfer data between file descriptors
eio_set_max_idle                                                    Set maximum number of idle threads
eio_set_max_parallel                                                Set maximum parallel threads
eio_set_max_poll_reqs                                               Set maximum number of requests processed in a poll
eio_set_max_poll_time                                               Set maximum poll time
eio_set_min_parallel                                                Set minimum parallel thread number
eio_stat                                                            Get file status
eio_statvfs                                                         Get file system statistics
eio_symlink                                                         Create a symbolic link
eio_sync                                                            Commit buffer cache to disk
eio_syncfs                                                          Calls Linux' syncfs syscall, if available
eio_sync_file_range                                                 Sync a file segment with disk
eio_truncate                                                        Truncate a file
eio_unlink                                                          Delete a name and possibly the file it refers to
eio_utime                                                           Change file last access and modification times
eio_write                                                           Write to file
empty                                                               Determine whether a variable is empty
EmptyIterator::current                                              The current() method
EmptyIterator::key                                                  The key() method
EmptyIterator::next                                                 The next() method
EmptyIterator::rewind                                               The rewind() method
EmptyIterator::valid                                                The valid() method
enchant_broker_describe                                             Enumerates the Enchant providers
enchant_broker_dict_exists                                          Whether a dictionary exists or not. Using non-empty tag
enchant_broker_free                                                 Free the broker resource and its dictionaries
enchant_broker_free_dict                                            Free a dictionary resource
enchant_broker_get_dict_path                                        Get the directory path for a given backend
enchant_broker_get_error                                            Returns the last error of the broker
enchant_broker_init                                                 Create a new broker object capable of requesting
enchant_broker_list_dicts                                           Returns a list of available dictionaries
enchant_broker_request_dict                                         Create a new dictionary using a tag
enchant_broker_request_pwl_dict                                     Creates a dictionary using a PWL file
enchant_broker_set_dict_path                                        Set the directory path for a given backend
enchant_broker_set_ordering                                         Declares a preference of dictionaries to use for the language
enchant_dict_add                                                    Add a word to personal word list
enchant_dict_add_to_personal                                        Alias of enchant_dict_add
enchant_dict_add_to_session                                         Add 'word' to this spell-checking session
enchant_dict_check                                                  Check whether a word is correctly spelled or not
enchant_dict_describe                                               Describes an individual dictionary
enchant_dict_get_error                                              Returns the last error of the current spelling-session
enchant_dict_is_added                                               Whether or not 'word' exists in this spelling-session
enchant_dict_is_in_session                                          Alias of enchant_dict_is_added
enchant_dict_quick_check                                            Check the word is correctly spelled and provide suggestions
enchant_dict_store_replacement                                      Add a correction for a word
enchant_dict_suggest                                                Will return a list of values if any of those pre-conditions are not met
Error::getCode                                                      Gets the error code
Error::getFile                                                      Gets the file in which the error occurred
Error::getLine                                                      Gets the line in which the error occurred
Error::getMessage                                                   Gets the error message
Error::getPrevious                                                  Returns previous Throwable
Error::getTrace                                                     Gets the stack trace
Error::getTraceAsString                                             Gets the stack trace as a string
Error::__clone                                                      Clone the error
Error::__construct                                                  Construct the error object
Error::__toString                                                   String representation of the error
ErrorException::getSeverity                                         Gets the exception severity
ErrorException::__construct                                         Constructs the exception
error_reporting                                                     Sets which PHP errors are reported
Ev::backend                                                         Returns an integer describing the backend used by libev
Ev::depth                                                           Returns recursion depth
Ev::embeddableBackends                                              Returns the set of backends that are embeddable in other event loops
Ev::feedSignal                                                      Feed a signal event info Ev
Ev::feedSignalEvent                                                 Feed signal event into the default loop
Ev::iteration                                                       Return the number of times the default event loop has polled for new events
Ev::now                                                             Returns the time when the last iteration of the default event loop has started
Ev::nowUpdate                                                       Establishes the current time by querying the kernel, updating the time returned by Ev::now in the progress
Ev::recommendedBackends                                             Returns a bit mask of recommended backends for current platform
Ev::resume                                                          Resume previously suspended default event loop
Ev::run                                                             Begin checking for events and calling callbacks for the default loop
Ev::sleep                                                           Block the process for the given number of seconds
Ev::stop                                                            Stops the default event loop
Ev::supportedBackends                                               Returns the set of backends supported by current libev configuration
Ev::suspend                                                         Suspend the default event loop
Ev::time                                                            Returns the current time in fractional seconds since the epoch
Ev::verify                                                          Performs internal consistency checks(for debugging)
eval                                                                Evaluate a string as PHP code
EvCheck::createStopped                                              Create instance of a stopped EvCheck watcher
EvCheck::__construct                                                Constructs the EvCheck watcher object
EvChild::createStopped                                              Create instance of a stopped EvCheck watcher
EvChild::set                                                        Configures the watcher
EvChild::__construct                                                Constructs the EvChild watcher object
EvEmbed::createStopped                                              Create stopped EvEmbed watcher object
EvEmbed::set                                                        Configures the watcher
EvEmbed::sweep                                                      Make a single, non-blocking sweep over the embedded loop
EvEmbed::__construct                                                Constructs the EvEmbed object
Event::add                                                          Makes event pending
Event::addSignal                                                    Makes signal event pending
Event::addTimer                                                     Makes timer event pending
Event::del                                                          Makes event non-pending
Event::delSignal                                                    Makes signal event non-pending
Event::delTimer                                                     Makes timer event non-pending
Event::free                                                         Make event non-pending and free resources allocated for this event
Event::getSupportedMethods                                          Returns array with of the names of the methods supported in this version of Libevent
Event::pending                                                      Detects whether event is pending or scheduled
Event::set                                                          Re-configures event
Event::setPriority                                                  Set event priority
Event::setTimer                                                     Re-configures timer event
Event::signal                                                       Constructs signal event object
Event::timer                                                        Constructs timer event object
Event::__construct                                                  Constructs Event object
EventBase::dispatch                                                 Dispatch pending events
EventBase::exit                                                     Stop dispatching events
EventBase::free                                                     Free resources allocated for this event base
EventBase::getFeatures                                              Returns bitmask of features supported
EventBase::getMethod                                                Returns event method in use
EventBase::getTimeOfDayCached                                       Returns the current event base time
EventBase::gotExit                                                  Checks if the event loop was told to exit
EventBase::gotStop                                                  Checks if the event loop was told to exit
EventBase::loop                                                     Dispatch pending events
EventBase::priorityInit                                             Sets number of priorities per event base
EventBase::reInit                                                   Re-initialize event base(after a fork)
EventBase::stop                                                     Tells event_base to stop dispatching events
EventBase::__construct                                              Constructs EventBase object
EventBuffer::add                                                    Append data to the end of an event buffer
EventBuffer::addBuffer                                              Move all data from a buffer provided to the current instance of EventBuffer
EventBuffer::appendFrom                                             Moves the specified number of bytes from a source buffer to the end of the current buffer
EventBuffer::copyout                                                Copies out specified number of bytes from the front of the buffer
EventBuffer::drain                                                  Removes specified number of bytes from the front of the buffer without copying it anywhere
EventBuffer::enableLocking                                          Description
EventBuffer::expand                                                 Reserves space in buffer
EventBuffer::freeze                                                 Prevent calls that modify an event buffer from succeeding
EventBuffer::lock                                                   Acquires a lock on buffer
EventBuffer::prepend                                                Prepend data to the front of the buffer
EventBuffer::prependBuffer                                          Moves all data from source buffer to the front of current buffer
EventBuffer::pullup                                                 Linearizes data within buffer and returns it's contents as a string
EventBuffer::read                                                   Read data from an evbuffer and drain the bytes read
EventBuffer::readFrom                                               Read data from a file onto the end of the buffer
EventBuffer::readLine                                               Extracts a line from the front of the buffer
EventBuffer::search                                                 Scans the buffer for an occurrence of a string
EventBuffer::searchEol                                              Scans the buffer for an occurrence of an end of line
EventBuffer::substr                                                 Substracts a portion of the buffer data
EventBuffer::unfreeze                                               Re-enable calls that modify an event buffer
EventBuffer::unlock                                                 Releases lock acquired by EventBuffer::lock
EventBuffer::write                                                  Write contents of the buffer to a file or socket
EventBuffer::__construct                                            Constructs EventBuffer object
EventBufferEvent::close                                             Closes file descriptor associated with the current buffer event
EventBufferEvent::connect                                           Connect buffer event's file descriptor to given address or UNIX socket
EventBufferEvent::connectHost                                       Connects to a hostname with optionally asyncronous DNS resolving
EventBufferEvent::createPair                                        Creates two buffer events connected to each other
EventBufferEvent::disable                                           Disable events read, write, or both on a buffer event
EventBufferEvent::enable                                            Enable events read, write, or both on a buffer event
EventBufferEvent::free                                              Free a buffer event
EventBufferEvent::getDnsErrorString                                 Returns string describing the last failed DNS lookup attempt
EventBufferEvent::getEnabled                                        Returns bitmask of events currently enabled on the buffer event
EventBufferEvent::getInput                                          Returns underlying input buffer associated with current buffer event
EventBufferEvent::getOutput                                         Returns underlying output buffer associated with current buffer event
EventBufferEvent::read                                              Read buffer's data
EventBufferEvent::readBuffer                                        Drains the entire contents of the input buffer and places them into buf
EventBufferEvent::setCallbacks                                      Assigns read, write and event(status) callbacks
EventBufferEvent::setPriority                                       Assign a priority to a bufferevent
EventBufferEvent::setTimeouts                                       Set the read and write timeout for a buffer event
EventBufferEvent::setWatermark                                      Adjusts read and/or write watermarks
EventBufferEvent::sslError                                          Returns most recent OpenSSL error reported on the buffer event
EventBufferEvent::sslFilter                                         Create a new SSL buffer event to send its data over another buffer event
EventBufferEvent::sslGetCipherInfo                                  Returns a textual description of the cipher
EventBufferEvent::sslGetCipherName                                  Returns the current cipher name of the SSL connection
EventBufferEvent::sslGetCipherVersion                               Returns version of cipher used by current SSL connection
EventBufferEvent::sslGetProtocol                                    Returns the name of the protocol used for current SSL connection
EventBufferEvent::sslRenegotiate                                    Tells a bufferevent to begin SSL renegotiation
EventBufferEvent::sslSocket                                         Creates a new SSL buffer event to send its data over an SSL on a socket
EventBufferEvent::write                                             Adds data to a buffer event's output buffer
EventBufferEvent::writeBuffer                                       Adds contents of the entire buffer to a buffer event's output buffer
EventBufferEvent::__construct                                       Constructs EventBufferEvent object
EventConfig::avoidMethod                                            Tells libevent to avoid specific event method
EventConfig::requireFeatures                                        Enters a required event method feature that the application demands
EventConfig::setMaxDispatchInterval                                 Prevents priority inversion
EventConfig::__construct                                            Constructs EventConfig object
EventDnsBase::addNameserverIp                                       Adds a nameserver to the DNS base
EventDnsBase::addSearch                                             Adds a domain to the list of search domains
EventDnsBase::clearSearch                                           Removes all current search suffixes
EventDnsBase::countNameservers                                      Gets the number of configured nameservers
EventDnsBase::loadHosts                                             Loads a hosts file (in the same format as /etc/hosts) from hosts file
EventDnsBase::parseResolvConf                                       Scans the resolv.conf-formatted file
EventDnsBase::setOption                                             Set the value of a configuration option
EventDnsBase::setSearchNdots                                        Set the 'ndots' parameter for searches
EventDnsBase::__construct                                           Constructs EventDnsBase object
EventHttp::accept                                                   Makes an HTTP server accept connections on the specified socket stream or resource
EventHttp::addServerAlias                                           Adds a server alias to the HTTP server object
EventHttp::bind                                                     Binds an HTTP server on the specified address and port
EventHttp::removeServerAlias                                        Removes server alias
EventHttp::setAllowedMethods                                        Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks
EventHttp::setCallback                                              Sets a callback for specified URI
EventHttp::setDefaultCallback                                       Sets default callback to handle requests that are not caught by specific callbacks
EventHttp::setMaxBodySize                                           Sets maximum request body size
EventHttp::setMaxHeadersSize                                        Sets maximum HTTP header size
EventHttp::setTimeout                                               Sets the timeout for an HTTP request
EventHttp::__construct                                              Constructs EventHttp object(the HTTP server)
EventHttpConnection::getBase                                        Returns event base associated with the connection
EventHttpConnection::getPeer                                        Gets the remote address and port associated with the connection
EventHttpConnection::makeRequest                                    Makes an HTTP request over the specified connection
EventHttpConnection::setCloseCallback                               Set callback for connection close
EventHttpConnection::setLocalAddress                                Sets the IP address from which HTTP connections are made
EventHttpConnection::setLocalPort                                   Sets the local port from which connections are made
EventHttpConnection::setMaxBodySize                                 Sets maximum body size for the connection
EventHttpConnection::setMaxHeadersSize                              Sets maximum header size
EventHttpConnection::setRetries                                     Sets the retry limit for the connection
EventHttpConnection::setTimeout                                     Sets the timeout for the connection
EventHttpConnection::__construct                                    Constructs EventHttpConnection object
EventHttpRequest::addHeader                                         Adds an HTTP header to the headers of the request
EventHttpRequest::cancel                                            Cancels a pending HTTP request
EventHttpRequest::clearHeaders                                      Removes all output headers from the header list of the request
EventHttpRequest::closeConnection                                   Closes associated HTTP connection
EventHttpRequest::findHeader                                        Finds the value belonging a header
EventHttpRequest::free                                              Frees the object and removes associated events
EventHttpRequest::getBufferEvent                                    Returns EventBufferEvent object
EventHttpRequest::getCommand                                        Returns the request command(method)
EventHttpRequest::getConnection                                     Returns EventHttpConnection object
EventHttpRequest::getHost                                           Returns the request host
EventHttpRequest::getInputBuffer                                    Returns the input buffer
EventHttpRequest::getInputHeaders                                   Returns associative array of the input headers
EventHttpRequest::getOutputBuffer                                   Returns the output buffer of the request
EventHttpRequest::getOutputHeaders                                  Returns associative array of the output headers
EventHttpRequest::getResponseCode                                   Returns the response code
EventHttpRequest::getUri                                            Returns the request URI
EventHttpRequest::removeHeader                                      Removes an HTTP header from the headers of the request
EventHttpRequest::sendError                                         Send an HTML error message to the client
EventHttpRequest::sendReply                                         Send an HTML reply to the client
EventHttpRequest::sendReplyChunk                                    Send another data chunk as part of an ongoing chunked reply
EventHttpRequest::sendReplyEnd                                      Complete a chunked reply, freeing the request as appropriate
EventHttpRequest::sendReplyStart                                    Initiate a chunked reply
EventHttpRequest::__construct                                       Constructs EventHttpRequest object
EventListener::disable                                              Disables an event connect listener object
EventListener::enable                                               Enables an event connect listener object
EventListener::getBase                                              Returns event base associated with the event listener
EventListener::getSocketName                                        Retreives the current address to which the listener's socket is bound
EventListener::setCallback                                          The setCallback purpose
EventListener::setErrorCallback                                     Set event listener's error callback
EventListener::__construct                                          Creates new connection listener associated with an event base
EventSslContext::__construct                                        Constructs an OpenSSL context for use with Event classes
EventUtil::getLastSocketErrno                                       Returns the most recent socket error number
EventUtil::getLastSocketError                                       Returns the most recent socket error
EventUtil::getSocketFd                                              Returns numeric file descriptor of a socket, or stream
EventUtil::getSocketName                                            Retreives the current address to which the socket is bound
EventUtil::setSocketOption                                          Sets socket options
EventUtil::sslRandPoll                                              Generates entropy by means of OpenSSL's RAND_poll()
EventUtil::__construct                                              The abstract constructor
EvFork::createStopped                                               Creates a stopped instance of EvFork watcher class
EvFork::__construct                                                 Constructs the EvFork watcher object
EvIdle::createStopped                                               Creates instance of a stopped EvIdle watcher object
EvIdle::__construct                                                 Constructs the EvIdle watcher object
EvIo::createStopped                                                 Create stopped EvIo watcher object
EvIo::set                                                           Configures the watcher
EvIo::__construct                                                   Constructs EvIo watcher object
EvLoop::backend                                                     Returns an integer describing the backend used by libev
EvLoop::check                                                       Creates EvCheck object associated with the current event loop instance
EvLoop::child                                                       Creates EvChild object associated with the current event loop
EvLoop::defaultLoop                                                 Returns or creates the default event loop
EvLoop::embed                                                       Creates an instance of EvEmbed watcher associated with the current EvLoop object
EvLoop::fork                                                        Creates EvFork watcher object associated with the current event loop instance
EvLoop::idle                                                        Creates EvIdle watcher object associated with the current event loop instance
EvLoop::invokePending                                               Invoke all pending watchers while resetting their pending state
EvLoop::io                                                          Create EvIo watcher object associated with the current event loop instance
EvLoop::loopFork                                                    Must be called after a fork
EvLoop::now                                                         Returns the current "event loop time"
EvLoop::nowUpdate                                                   Establishes the current time by querying the kernel, updating the time returned by EvLoop::now in the progress
EvLoop::periodic                                                    Creates EvPeriodic watcher object associated with the current event loop instance
EvLoop::prepare                                                     Creates EvPrepare watcher object associated with the current event loop instance
EvLoop::resume                                                      Resume previously suspended default event loop
EvLoop::run                                                         Begin checking for events and calling callbacks for the loop
EvLoop::signal                                                      Creates EvSignal watcher object associated with the current event loop instance
EvLoop::stat                                                        Creates EvStat watcher object associated with the current event loop instance
EvLoop::stop                                                        Stops the event loop
EvLoop::suspend                                                     Suspend the loop
EvLoop::timer                                                       Creates EvTimer watcher object associated with the current event loop instance
EvLoop::verify                                                      Performs internal consistency checks(for debugging)
EvLoop::__construct                                                 Constructs the event loop object
EvPeriodic::again                                                   Simply stops and restarts the periodic watcher again
EvPeriodic::at                                                      Returns the absolute time that this watcher is supposed to trigger next
EvPeriodic::createStopped                                           Create a stopped EvPeriodic watcher
EvPeriodic::set                                                     Configures the watcher
EvPeriodic::__construct                                             Constructs EvPeriodic watcher object
EvPrepare::createStopped                                            Creates a stopped instance of EvPrepare watcher
EvPrepare::__construct                                              Constructs EvPrepare watcher object
EvSignal::createStopped                                             Create stopped EvSignal watcher object
EvSignal::set                                                       Configures the watcher
EvSignal::__construct                                               Constructs EvSignal watcher object
EvStat::attr                                                        Returns the values most recently detected by Ev
EvStat::createStopped                                               Create a stopped EvStat watcher object
EvStat::prev                                                        Returns the previous set of values returned by EvStat::attr
EvStat::set                                                         Configures the watcher
EvStat::stat                                                        Initiates the stat call
EvStat::__construct                                                 Constructs EvStat watcher object
EvTimer::again                                                      Restarts the timer watcher
EvTimer::createStopped                                              Creates EvTimer stopped watcher object
EvTimer::set                                                        Configures the watcher
EvTimer::__construct                                                Constructs an EvTimer watcher object
EvWatcher::clear                                                    Clear watcher pending status
EvWatcher::feed                                                     Feeds the given revents set into the event loop
EvWatcher::getLoop                                                  Returns the loop responsible for the watcher
EvWatcher::invoke                                                   Invokes the watcher callback with the given received events bit mask
EvWatcher::keepalive                                                Configures whether to keep the loop from returning
EvWatcher::setCallback                                              Sets new callback for the watcher
EvWatcher::start                                                    Starts the watcher
EvWatcher::stop                                                     Stops the watcher
EvWatcher::__construct                                              Abstract constructor of a watcher object
Exception::getCode                                                  Gets the Exception code
Exception::getFile                                                  Gets the file in which the exception was created
Exception::getLine                                                  Gets the line in which the exception was created
Exception::getMessage                                               Gets the Exception message
Exception::getPrevious                                              Returns previous Throwable
Exception::getTrace                                                 Gets the stack trace
Exception::getTraceAsString                                         Gets the stack trace as a string
Exception::__clone                                                  Clone the exception
Exception::__construct                                              Construct the exception
Exception::__toString                                               String representation of the exception
Executable::execute                                                 Execute statement
ExecutionStatus::__construct                                        ExecutionStatus constructor
exif_imagetype                                                      Determine the type of an image
exif_read_data                                                      Reads the EXIF headers from an image file
exif_tagname                                                        Get the header name for an index
exif_thumbnail                                                      Retrieve the embedded thumbnail of an image
exit                                                                Output a message and terminate the current script
expect://                                                           Process Interaction Streams
expect_expectl                                                      Waits until the output from a process matches one of the patterns, a specified time period has passed, or an EOF is seen
expect_popen                                                        Execute command via Bourne shell, and open the PTY stream to the process
expression                                                          Bind prepared statement variables as parameters
Expression::__construct                                             Expression constructor
FANNConnection::getFromNeuron                                       Returns the postions of starting neuron
FANNConnection::getToNeuron                                         Returns the postions of terminating neuron
FANNConnection::getWeight                                           Returns the connection weight
FANNConnection::setWeight                                           Sets the connections weight
FANNConnection::__construct                                         The connection constructor
fann_cascadetrain_on_data                                           Trains on an entire dataset, for a period of time using the Cascade2 training algorithm
fann_cascadetrain_on_file                                           Trains on an entire dataset read from file, for a period of time using the Cascade2 training algorithm
fann_clear_scaling_params                                           Clears scaling parameters
fann_copy                                                           Creates a copy of a fann structure
fann_create_from_file                                               Constructs a backpropagation neural network from a configuration file
fann_create_shortcut                                                Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections
fann_create_shortcut_array                                          Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections
fann_create_sparse                                                  Creates a standard backpropagation neural network, which is not fully connected
fann_create_sparse_array                                            Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes
fann_create_standard                                                Creates a standard fully connected backpropagation neural network
fann_create_standard_array                                          Creates a standard fully connected backpropagation neural network using an array of layer sizes
fann_create_train                                                   Creates an empty training data struct
fann_create_train_from_callback                                     Creates the training data struct from a user supplied function
fann_descale_input                                                  Scale data in input vector after get it from ann based on previously calculated parameters
fann_descale_output                                                 Scale data in output vector after get it from ann based on previously calculated parameters
fann_descale_train                                                  Descale input and output data based on previously calculated parameters
fann_destroy                                                        Destroys the entire network and properly freeing all the associated memory
fann_destroy_train                                                  Destructs the training data
fann_duplicate_train_data                                           Returns an exact copy of a fann train data
fann_get_activation_function                                        Returns the activation function
fann_get_activation_steepness                                       Returns the activation steepness for supplied neuron and layer number
fann_get_bias_array                                                 Get the number of bias in each layer in the network
fann_get_bit_fail                                                   The number of fail bits
fann_get_bit_fail_limit                                             Returns the bit fail limit used during training
fann_get_cascade_activation_functions                               Returns the cascade activation functions
fann_get_cascade_activation_functions_count                         Returns the number of cascade activation functions
fann_get_cascade_activation_steepnesses                             Returns the cascade activation steepnesses
fann_get_cascade_activation_steepnesses_count                       The number of activation steepnesses
fann_get_cascade_candidate_change_fraction                          Returns the cascade candidate change fraction
fann_get_cascade_candidate_limit                                    Return the candidate limit
fann_get_cascade_candidate_stagnation_epochs                        Returns the number of cascade candidate stagnation epochs
fann_get_cascade_max_cand_epochs                                    Returns the maximum candidate epochs
fann_get_cascade_max_out_epochs                                     Returns the maximum out epochs
fann_get_cascade_min_cand_epochs                                    Returns the minimum candidate epochs
fann_get_cascade_min_out_epochs                                     Returns the minimum out epochs
fann_get_cascade_num_candidates                                     Returns the number of candidates used during training
fann_get_cascade_num_candidate_groups                               Returns the number of candidate groups
fann_get_cascade_output_change_fraction                             Returns the cascade output change fraction
fann_get_cascade_output_stagnation_epochs                           Returns the number of cascade output stagnation epochs
fann_get_cascade_weight_multiplier                                  Returns the weight multiplier
fann_get_connection_array                                           Get connections in the network
fann_get_connection_rate                                            Get the connection rate used when the network was created
fann_get_errno                                                      Returns the last error number
fann_get_errstr                                                     Returns the last errstr
fann_get_layer_array                                                Get the number of neurons in each layer in the network
fann_get_learning_momentum                                          Returns the learning momentum
fann_get_learning_rate                                              Returns the learning rate
fann_get_MSE                                                        Reads the mean square error from the network
fann_get_network_type                                               Get the type of neural network it was created as
fann_get_num_input                                                  Get the number of input neurons
fann_get_num_layers                                                 Get the number of layers in the neural network
fann_get_num_output                                                 Get the number of output neurons
fann_get_quickprop_decay                                            Returns the decay which is a factor that weights should decrease in each iteration during quickprop training
fann_get_quickprop_mu                                               Returns the mu factor
fann_get_rprop_decrease_factor                                      Returns the increase factor used during RPROP training
fann_get_rprop_delta_max                                            Returns the maximum step-size
fann_get_rprop_delta_min                                            Returns the minimum step-size
fann_get_rprop_delta_zero                                           Returns the initial step-size
fann_get_rprop_increase_factor                                      Returns the increase factor used during RPROP training
fann_get_sarprop_step_error_shift                                   Returns the sarprop step error shift
fann_get_sarprop_step_error_threshold_factor                        Returns the sarprop step error threshold factor
fann_get_sarprop_temperature                                        Returns the sarprop temperature
fann_get_sarprop_weight_decay_shift                                 Returns the sarprop weight decay shift
fann_get_total_connections                                          Get the total number of connections in the entire network
fann_get_total_neurons                                              Get the total number of neurons in the entire network
fann_get_training_algorithm                                         Returns the training algorithm
fann_get_train_error_function                                       Returns the error function used during training
fann_get_train_stop_function                                        Returns the stop function used during training
fann_init_weights                                                   Initialize the weights using Widrow + Nguyen’s algorithm
fann_length_train_data                                              Returns the number of training patterns in the train data
fann_merge_train_data                                               Merges the train data
fann_num_input_train_data                                           Returns the number of inputs in each of the training patterns in the train data
fann_num_output_train_data                                          Returns the number of outputs in each of the training patterns in the train data
fann_print_error                                                    Prints the error string
fann_randomize_weights                                              Give each connection a random weight between min_weight and max_weight
fann_read_train_from_file                                           Reads a file that stores training data
fann_reset_errno                                                    Resets the last error number
fann_reset_errstr                                                   Resets the last error string
fann_reset_MSE                                                      Resets the mean square error from the network
fann_run                                                            Will run input through the neural network
fann_save                                                           Saves the entire network to a configuration file
fann_save_train                                                     Save the training structure to a file
fann_scale_input                                                    Scale data in input vector before feed it to ann based on previously calculated parameters
fann_scale_input_train_data                                         Scales the inputs in the training data to the specified range
fann_scale_output                                                   Scale data in output vector before feed it to ann based on previously calculated parameters
fann_scale_output_train_data                                        Scales the outputs in the training data to the specified range
fann_scale_train                                                    Scale input and output data based on previously calculated parameters
fann_scale_train_data                                               Scales the inputs and outputs in the training data to the specified range
fann_set_activation_function                                        Sets the activation function for supplied neuron and layer
fann_set_activation_function_hidden                                 Sets the activation function for all of the hidden layers
fann_set_activation_function_layer                                  Sets the activation function for all the neurons in the supplied layer
fann_set_activation_function_output                                 Sets the activation function for the output layer
fann_set_activation_steepness                                       Sets the activation steepness for supplied neuron and layer number
fann_set_activation_steepness_hidden                                Sets the steepness of the activation steepness for all neurons in the all hidden layers
fann_set_activation_steepness_layer                                 Sets the activation steepness for all of the neurons in the supplied layer number
fann_set_activation_steepness_output                                Sets the steepness of the activation steepness in the output layer
fann_set_bit_fail_limit                                             Set the bit fail limit used during training
fann_set_callback                                                   Sets the callback function for use during training
fann_set_cascade_activation_functions                               Sets the array of cascade candidate activation functions
fann_set_cascade_activation_steepnesses                             Sets the array of cascade candidate activation steepnesses
fann_set_cascade_candidate_change_fraction                          Sets the cascade candidate change fraction
fann_set_cascade_candidate_limit                                    Sets the candidate limit
fann_set_cascade_candidate_stagnation_epochs                        Sets the number of cascade candidate stagnation epochs
fann_set_cascade_max_cand_epochs                                    Sets the max candidate epochs
fann_set_cascade_max_out_epochs                                     Sets the maximum out epochs
fann_set_cascade_min_cand_epochs                                    Sets the min candidate epochs
fann_set_cascade_min_out_epochs                                     Sets the minimum out epochs
fann_set_cascade_num_candidate_groups                               Sets the number of candidate groups
fann_set_cascade_output_change_fraction                             Sets the cascade output change fraction
fann_set_cascade_output_stagnation_epochs                           Sets the number of cascade output stagnation epochs
fann_set_cascade_weight_multiplier                                  Sets the weight multiplier
fann_set_error_log                                                  Sets where the errors are logged to
fann_set_input_scaling_params                                       Calculate input scaling parameters for future use based on training data
fann_set_learning_momentum                                          Sets the learning momentum
fann_set_learning_rate                                              Sets the learning rate
fann_set_output_scaling_params                                      Calculate output scaling parameters for future use based on training data
fann_set_quickprop_decay                                            Sets the quickprop decay factor
fann_set_quickprop_mu                                               Sets the quickprop mu factor
fann_set_rprop_decrease_factor                                      Sets the decrease factor used during RPROP training
fann_set_rprop_delta_max                                            Sets the maximum step-size
fann_set_rprop_delta_min                                            Sets the minimum step-size
fann_set_rprop_delta_zero                                           Sets the initial step-size
fann_set_rprop_increase_factor                                      Sets the increase factor used during RPROP training
fann_set_sarprop_step_error_shift                                   Sets the sarprop step error shift
fann_set_sarprop_step_error_threshold_factor                        Sets the sarprop step error threshold factor
fann_set_sarprop_temperature                                        Sets the sarprop temperature
fann_set_sarprop_weight_decay_shift                                 Sets the sarprop weight decay shift
fann_set_scaling_params                                             Calculate input and output scaling parameters for future use based on training data
fann_set_training_algorithm                                         Sets the training algorithm
fann_set_train_error_function                                       Sets the error function used during training
fann_set_train_stop_function                                        Sets the stop function used during training
fann_set_weight                                                     Set a connection in the network
fann_set_weight_array                                               Set connections in the network
fann_shuffle_train_data                                             Shuffles training data, randomizing the order
fann_subset_train_data                                              Returns an copy of a subset of the train data
fann_test                                                           Test with a set of inputs, and a set of desired outputs
fann_test_data                                                      Test a set of training data and calculates the MSE for the training data
fann_train                                                          Train one iteration with a set of inputs, and a set of desired outputs
fann_train_epoch                                                    Train one epoch with a set of training data
fann_train_on_data                                                  Trains on an entire dataset for a period of time
fann_train_on_file                                                  Trains on an entire dataset, which is read from file, for a period of time
fastcgi_finish_request                                              Flushes all response data to the client
fbird_add_user                                                      Alias of ibase_add_user
fbird_affected_rows                                                 Alias of ibase_affected_rows
fbird_backup                                                        Alias of ibase_backup
fbird_blob_add                                                      Alias of ibase_blob_add
fbird_blob_cancel                                                   Cancel creating blob
fbird_blob_close                                                    Alias of ibase_blob_close
fbird_blob_create                                                   Alias of ibase_blob_create
fbird_blob_echo                                                     Alias of ibase_blob_echo
fbird_blob_get                                                      Alias of ibase_blob_get
fbird_blob_import                                                   Alias of ibase_blob_import
fbird_blob_info                                                     Alias of ibase_blob_info
fbird_blob_open                                                     Alias of ibase_blob_open
fbird_close                                                         Alias of ibase_close
fbird_commit                                                        Alias of ibase_commit
fbird_commit_ret                                                    Alias of ibase_commit_ret
fbird_connect                                                       Alias of ibase_connect
fbird_db_info                                                       Alias of ibase_db_info
fbird_delete_user                                                   Alias of ibase_delete_user
fbird_drop_db                                                       Alias of ibase_drop_db
fbird_errcode                                                       Alias of ibase_errcode
fbird_errmsg                                                        Alias of ibase_errmsg
fbird_execute                                                       Alias of ibase_execute
fbird_fetch_assoc                                                   Alias of ibase_fetch_assoc
fbird_fetch_object                                                  Alias of ibase_fetch_object
fbird_fetch_row                                                     Alias of ibase_fetch_row
fbird_field_info                                                    Alias of ibase_field_info
fbird_free_event_handler                                            Alias of ibase_free_event_handler
fbird_free_query                                                    Alias of ibase_free_query
fbird_free_result                                                   Alias of ibase_free_result
fbird_gen_id                                                        Alias of ibase_gen_id
fbird_maintain_db                                                   Alias of ibase_maintain_db
fbird_modify_user                                                   Alias of ibase_modify_user
fbird_name_result                                                   Alias of ibase_name_result
fbird_num_fields                                                    Alias of ibase_num_fields
fbird_num_params                                                    Alias of ibase_num_params
fbird_param_info                                                    Alias of ibase_param_info
fbird_pconnect                                                      Alias of ibase_pconnect
fbird_prepare                                                       Alias of ibase_prepare
fbird_query                                                         Alias of ibase_query
fbird_restore                                                       Alias of ibase_restore
fbird_rollback                                                      Alias of ibase_rollback
fbird_rollback_ret                                                  Alias of ibase_rollback_ret
fbird_server_info                                                   Alias of ibase_server_info
fbird_service_attach                                                Alias of ibase_service_attach
fbird_service_detach                                                Alias of ibase_service_detach
fbird_set_event_handler                                             Alias of ibase_set_event_handler
fbird_trans                                                         Alias of ibase_trans
fbird_wait_event                                                    Alias of ibase_wait_event
fbsql_affected_rows                                                 Get number of affected rows in previous FrontBase operation
fbsql_autocommit                                                    Enable or disable autocommit
fbsql_blob_size                                                     Get the size of a BLOB
fbsql_change_user                                                   Change logged in user of the active connection
fbsql_clob_size                                                     Get the size of a CLOB
fbsql_close                                                         Close FrontBase connection
fbsql_commit                                                        Commits a transaction to the database
fbsql_connect                                                       Open a connection to a FrontBase Server
fbsql_create_blob                                                   Create a BLOB
fbsql_create_clob                                                   Create a CLOB
fbsql_create_db                                                     Create a FrontBase database
fbsql_database                                                      Get or set the database name used with a connection
fbsql_database_password                                             Sets or retrieves the password for a FrontBase database
fbsql_data_seek                                                     Move internal result pointer
fbsql_db_query                                                      Send a FrontBase query
fbsql_db_status                                                     Get the status for a given database
fbsql_drop_db                                                       Drop (delete) a FrontBase database
fbsql_errno                                                         Returns the error number from previous operation
fbsql_error                                                         Returns the error message from previous operation
fbsql_fetch_array                                                   Fetch a result row as an associative array, a numeric array, or both
fbsql_fetch_assoc                                                   Fetch a result row as an associative array
fbsql_fetch_field                                                   Get column information from a result and return as an object
fbsql_fetch_lengths                                                 Get the length of each output in a result
fbsql_fetch_object                                                  Fetch a result row as an object
fbsql_fetch_row                                                     Get a result row as an enumerated array
fbsql_field_flags                                                   Get the flags associated with the specified field in a result
fbsql_field_len                                                     Returns the length of the specified field
fbsql_field_name                                                    Get the name of the specified field in a result
fbsql_field_seek                                                    Set result pointer to a specified field offset
fbsql_field_table                                                   Get name of the table the specified field is in
fbsql_field_type                                                    Get the type of the specified field in a result
fbsql_free_result                                                   Free result memory
fbsql_get_autostart_info                                            Description
fbsql_hostname                                                      Get or set the host name used with a connection
fbsql_insert_id                                                     Get the id generated from the previous INSERT operation
fbsql_list_dbs                                                      List databases available on a FrontBase server
fbsql_list_fields                                                   List FrontBase result fields
fbsql_list_tables                                                   List tables in a FrontBase database
fbsql_next_result                                                   Move the internal result pointer to the next result
fbsql_num_fields                                                    Get number of fields in result
fbsql_num_rows                                                      Get number of rows in result
fbsql_password                                                      Get or set the user password used with a connection
fbsql_pconnect                                                      Open a persistent connection to a FrontBase Server
fbsql_query                                                         Send a FrontBase query
fbsql_read_blob                                                     Read a BLOB from the database
fbsql_read_clob                                                     Read a CLOB from the database
fbsql_result                                                        Get result data
fbsql_rollback                                                      Rollback a transaction to the database
fbsql_rows_fetched                                                  Get the number of rows affected by the last statement
fbsql_select_db                                                     Select a FrontBase database
fbsql_set_characterset                                              Change input/output character set
fbsql_set_lob_mode                                                  Set the LOB retrieve mode for a FrontBase result set
fbsql_set_password                                                  Change the password for a given user
fbsql_set_transaction                                               Set the transaction locking and isolation
fbsql_start_db                                                      Start a database on local or remote server
fbsql_stop_db                                                       Stop a database on local or remote server
fbsql_tablename                                                     Alias of fbsql_table_name
fbsql_table_name                                                    Get table name of field
fbsql_username                                                      Get or set the username for the connection
fbsql_warnings                                                      Enable or disable FrontBase warnings
fdf_add_doc_javascript                                              Adds javascript code to the FDF document
fdf_add_template                                                    Adds a template into the FDF document
fdf_close                                                           Close an FDF document
fdf_create                                                          Create a new FDF document
fdf_enum_values                                                     Call a user defined function for each document value
fdf_errno                                                           Return error code for last fdf operation
fdf_error                                                           Return error description for FDF error code
fdf_get_ap                                                          Get the appearance of a field
fdf_get_attachment                                                  Extracts uploaded file embedded in the FDF
fdf_get_encoding                                                    Get the value of the /Encoding key
fdf_get_file                                                        Get the value of the /F key
fdf_get_flags                                                       Gets the flags of a field
fdf_get_opt                                                         Gets a value from the opt array of a field
fdf_get_status                                                      Get the value of the /STATUS key
fdf_get_value                                                       Get the value of a field
fdf_get_version                                                     Gets version number for FDF API or file
fdf_header                                                          Sets FDF-specific output headers
fdf_next_field_name                                                 Get the next field name
fdf_open                                                            Open a FDF document
fdf_open_string                                                     Read a FDF document from a string
fdf_remove_item                                                     Sets target frame for form
fdf_save                                                            Save a FDF document
fdf_save_string                                                     Returns the FDF document as a string
fdf_set_ap                                                          Set the appearance of a field
fdf_set_encoding                                                    Sets FDF character encoding
fdf_set_file                                                        Set PDF document to display FDF data in
fdf_set_flags                                                       Sets a flag of a field
fdf_set_javascript_action                                           Sets an javascript action of a field
fdf_set_on_import_javascript                                        Adds javascript code to be executed when Acrobat opens the FDF
fdf_set_opt                                                         Sets an option of a field
fdf_set_status                                                      Set the value of the /STATUS key
fdf_set_submit_form_action                                          Sets a submit form action of a field
fdf_set_target_frame                                                Set target frame for form display
fdf_set_value                                                       Set the value of a field
fdf_set_version                                                     Sets version number for a FDF file
fdiv                                                                Divides two numbers, according to IEEE 754
FFI::addr                                                           Creates an unmanaged pointer to C data
FFI::alignof                                                        Gets the alignment
FFI::arrayType                                                      Dynamically constructs a new C array type
FFI::cast                                                           Performs a C type cast
FFI::cdef                                                           Creates a new FFI object
FFI::free                                                           Releases an unmanaged data structure
FFI::isNull                                                         Checks whether a FFI\CData is a null pointer
FFI::load                                                           Loads C declarations from a C header file
FFI::memcmp                                                         Compares memory areas
FFI::memcpy                                                         Copies one memory area to another
FFI::memset                                                         Fills a memory area
FFI::new                                                            Creates a C data structure
FFI::scope                                                          Instantiates an FFI object with C declarations parsed during preloading
FFI::sizeof                                                         Gets the size of C data or types
FFI::string                                                         Creates a PHP string from a memory area
FFI::type                                                           Creates an FFI\CType object from a C declaration
FFI::typeof                                                         Gets the FFI\CType of FFI\CData
file://                                                             Accessing local filesystem
filepro                                                             Read and verify the map file
filepro_fieldcount                                                  Find out how many fields are in a filePro database
filepro_fieldname                                                   Gets the name of a field
filepro_fieldtype                                                   Gets the type of a field
filepro_fieldwidth                                                  Gets the width of a field
filepro_retrieve                                                    Retrieves data from a filePro database
filepro_rowcount                                                    Find out how many rows are in a filePro database
FilesystemIterator::current                                         The current file
FilesystemIterator::getFlags                                        Get the handling flags
FilesystemIterator::key                                             Retrieve the key for the current file
FilesystemIterator::next                                            Move to the next file
FilesystemIterator::rewind                                          Rewinds back to the beginning
FilesystemIterator::setFlags                                        Sets handling flags
FilesystemIterator::__construct                                     Constructs a new filesystem iterator
file_get_contents                                                   Reads entire file into a string
FilterIterator::accept                                              Check whether the current element of the iterator is acceptable
FilterIterator::current                                             Get the current element value
FilterIterator::getInnerIterator                                    Get the inner iterator
FilterIterator::key                                                 Get the current key
FilterIterator::next                                                Move the iterator forward
FilterIterator::rewind                                              Rewind the iterator
FilterIterator::valid                                               Check whether the current element is valid
FilterIterator::__construct                                         Construct a filterIterator
finfo::buffer                                                       Alias of finfo_buffer()
finfo::file                                                         Alias of finfo_file()
finfo::set_flags                                                    Alias of finfo_set_flags()
finfo::__construct                                                  Alias of finfo_open
frenchtojd                                                          Converts a date from the French Republican Calendar to a Julian Day Count
ftp://                                                              Accessing FTP(s) URLs
FTP context options                                                 FTP context option listing
gc_status                                                           Gets information about the garbage collector
gd_info                                                             Retrieve information about the currently installed GD library
GearmanClient::addOptions                                           Add client options
GearmanClient::addServer                                            Add a job server to the client
GearmanClient::addServers                                           Add a list of job servers to the client
GearmanClient::addTask                                              Add a task to be run in parallel
GearmanClient::addTaskBackground                                    Add a background task to be run in parallel
GearmanClient::addTaskHigh                                          Add a high priority task to run in parallel
GearmanClient::addTaskHighBackground                                Add a high priority background task to be run in parallel
GearmanClient::addTaskLow                                           Add a low priority task to run in parallel
GearmanClient::addTaskLowBackground                                 Add a low priority background task to be run in parallel
GearmanClient::addTaskStatus                                        Add a task to get status
GearmanClient::clearCallbacks                                       Clear all task callback functions
GearmanClient::clone                                                Create a copy of a GearmanClient object
GearmanClient::context                                              Get the application context
GearmanClient::data                                                 Get the application data (deprecated)
GearmanClient::do                                                   Run a single task and return a result [deprecated]
GearmanClient::doBackground                                         Run a task in the background
GearmanClient::doHigh                                               Run a single high priority task
GearmanClient::doHighBackground                                     Run a high priority task in the background
GearmanClient::doJobHandle                                          Get the job handle for the running task
GearmanClient::doLow                                                Run a single low priority task
GearmanClient::doLowBackground                                      Run a low priority task in the background
GearmanClient::doNormal                                             Run a single task and return a result
GearmanClient::doStatus                                             Get the status for the running task
GearmanClient::echo                                                 Send data to all job servers to see if they echo it back [deprecated]
GearmanClient::error                                                Returns an error string for the last error encountered
GearmanClient::getErrno                                             Get an errno value
GearmanClient::jobStatus                                            Get the status of a background job
GearmanClient::ping                                                 Send data to all job servers to see if they echo it back
GearmanClient::removeOptions                                        Remove client options
GearmanClient::returnCode                                           Get the last Gearman return code
GearmanClient::runTasks                                             Run a list of tasks in parallel
GearmanClient::setClientCallback                                    Callback function when there is a data packet for a task (deprecated)
GearmanClient::setCompleteCallback                                  Set a function to be called on task completion
GearmanClient::setContext                                           Set application context
GearmanClient::setCreatedCallback                                   Set a callback for when a task is queued
GearmanClient::setData                                              Set application data (deprecated)
GearmanClient::setDataCallback                                      Callback function when there is a data packet for a task
GearmanClient::setExceptionCallback                                 Set a callback for worker exceptions
GearmanClient::setFailCallback                                      Set callback for job failure
GearmanClient::setOptions                                           Set client options
GearmanClient::setStatusCallback                                    Set a callback for collecting task status
GearmanClient::setTimeout                                           Set socket I/O activity timeout
GearmanClient::setWarningCallback                                   Set a callback for worker warnings
GearmanClient::setWorkloadCallback                                  Set a callback for accepting incremental data updates
GearmanClient::timeout                                              Get current socket I/O activity timeout value
GearmanClient::wait                                                 Wait for I/O activity on all connections in a client
GearmanClient::__construct                                          Create a GearmanClient instance
GearmanJob::complete                                                Send the result and complete status (deprecated)
GearmanJob::data                                                    Send data for a running job (deprecated)
GearmanJob::exception                                               Send exception for running job (deprecated)
GearmanJob::fail                                                    Send fail status (deprecated)
GearmanJob::functionName                                            Get function name
GearmanJob::handle                                                  Get the job handle
GearmanJob::returnCode                                              Get last return code
GearmanJob::sendComplete                                            Send the result and complete status
GearmanJob::sendData                                                Send data for a running job
GearmanJob::sendException                                           Send exception for running job (exception)
GearmanJob::sendFail                                                Send fail status
GearmanJob::sendStatus                                              Send status
GearmanJob::sendWarning                                             Send a warning
GearmanJob::setReturn                                               Set a return value
GearmanJob::status                                                  Send status (deprecated)
GearmanJob::unique                                                  Get the unique identifier
GearmanJob::warning                                                 Send a warning (deprecated)
GearmanJob::workload                                                Get workload
GearmanJob::workloadSize                                            Get size of work load
GearmanJob::__construct                                             Create a GearmanJob instance
GearmanTask::create                                                 Create a task (deprecated)
GearmanTask::data                                                   Get data returned for a task
GearmanTask::dataSize                                               Get the size of returned data
GearmanTask::function                                               Get associated function name (deprecated)
GearmanTask::functionName                                           Get associated function name
GearmanTask::isKnown                                                Determine if task is known
GearmanTask::isRunning                                              Test whether the task is currently running
GearmanTask::jobHandle                                              Get the job handle
GearmanTask::recvData                                               Read work or result data into a buffer for a task
GearmanTask::returnCode                                             Get the last return code
GearmanTask::sendData                                               Send data for a task (deprecated)
GearmanTask::sendWorkload                                           Send data for a task
GearmanTask::taskDenominator                                        Get completion percentage denominator
GearmanTask::taskNumerator                                          Get completion percentage numerator
GearmanTask::unique                                                 Get the unique identifier for a task
GearmanTask::uuid                                                   Get the unique identifier for a task (deprecated)
GearmanTask::__construct                                            Create a GearmanTask instance
GearmanWorker::addFunction                                          Register and add callback function
GearmanWorker::addOptions                                           Add worker options
GearmanWorker::addServer                                            Add a job server
GearmanWorker::addServers                                           Add job servers
GearmanWorker::clone                                                Create a copy of the worker
GearmanWorker::echo                                                 Test job server response
GearmanWorker::error                                                Get the last error encountered
GearmanWorker::getErrno                                             Get errno
GearmanWorker::options                                              Get worker options
GearmanWorker::register                                             Register a function with the job server
GearmanWorker::removeOptions                                        Remove worker options
GearmanWorker::returnCode                                           Get last Gearman return code
GearmanWorker::setId                                                Give the worker an identifier so it can be tracked when asking gearmand for the list of available workers
GearmanWorker::setOptions                                           Set worker options
GearmanWorker::setTimeout                                           Set socket I/O activity timeout
GearmanWorker::timeout                                              Get socket I/O activity timeout
GearmanWorker::unregister                                           Unregister a function name with the job servers
GearmanWorker::unregisterAll                                        Unregister all function names with the job servers
GearmanWorker::wait                                                 Wait for activity from one of the job servers
GearmanWorker::work                                                 Wait for and perform jobs
GearmanWorker::__construct                                          Create a GearmanWorker instance
Gender\Gender::connect                                              Connect to an external name dictionary
Gender\Gender::country                                              Get textual country representation
Gender\Gender::get                                                  Get gender of a name
Gender\Gender::isNick                                               Check if the name0 is an alias of the name1
Gender\Gender::similarNames                                         Get similar names
Gender\Gender::__construct                                          Construct the Gender object
Generator::current                                                  Get the yielded value
Generator::getReturn                                                Get the return value of a generator
Generator::key                                                      Get the yielded key
Generator::next                                                     Resume execution of the generator
Generator::rewind                                                   Rewind the iterator
Generator::send                                                     Send a value to the generator
Generator::throw                                                    Throw an exception into the generator
Generator::valid                                                    Check if the iterator has been closed
Generator::__wakeup                                                 Serialize callback
geoip_asnum_by_name                                                 Get the Autonomous System Numbers (ASN)
geoip_continent_code_by_name                                        Get the two letter continent code
geoip_country_code3_by_name                                         Get the three letter country code
geoip_country_code_by_name                                          Get the two letter country code
geoip_country_name_by_name                                          Get the full country name
geoip_database_info                                                 Get GeoIP Database information
geoip_db_avail                                                      Determine if GeoIP Database is available
geoip_db_filename                                                   Returns the filename of the corresponding GeoIP Database
geoip_db_get_all_info                                               Returns detailed information about all GeoIP database types
geoip_domain_by_name                                                Get the second level domain name
geoip_id_by_name                                                    Get the Internet connection type
geoip_isp_by_name                                                   Get the Internet Service Provider (ISP) name
geoip_netspeedcell_by_name                                          Get the Internet connection speed
geoip_org_by_name                                                   Get the organization name
geoip_record_by_name                                                Returns the detailed City information found in the GeoIP Database
geoip_region_by_name                                                Get the country code and region
geoip_region_name_by_code                                           Returns the region name for some country and region code combo
geoip_setup_custom_directory                                        Set a custom directory for the GeoIP database
geoip_time_zone_by_country_and_region                               Returns the time zone for some country and region code combo
getallheaders                                                       Fetch all HTTP request headers
getSession                                                          Connect to a MySQL server
gettext                                                             Lookup a message in the current domain
get_debug_type                                                      Gets the type name of a variable in a way that is suitable for debugging
get_declared_classes                                                Returns an array with the name of the defined classes
get_resource_id                                                     Returns an integer identifier for the given resource
glob://                                                             Find pathnames matching pattern
GlobIterator::count                                                 Get the number of directories and files
GlobIterator::__construct                                           Construct a directory using glob
Gmagick::addimage                                                   Adds new image to Gmagick object image list
Gmagick::addnoiseimage                                              Adds random noise to the image
Gmagick::annotateimage                                              Annotates an image with text
Gmagick::blurimage                                                  Adds blur filter to image
Gmagick::borderimage                                                Surrounds the image with a border
Gmagick::charcoalimage                                              Simulates a charcoal drawing
Gmagick::chopimage                                                  Removes a region of an image and trims
Gmagick::clear                                                      Clears all resources associated to Gmagick object
Gmagick::commentimage                                               Adds a comment to your image
Gmagick::compositeimage                                             Composite one image onto another
Gmagick::cropimage                                                  Extracts a region of the image
Gmagick::cropthumbnailimage                                         Creates a crop thumbnail
Gmagick::current                                                    The current purpose
Gmagick::cyclecolormapimage                                         Displaces an image's colormap
Gmagick::deconstructimages                                          Returns certain pixel differences between images
Gmagick::despeckleimage                                             The despeckleimage purpose
Gmagick::destroy                                                    The destroy purpose
Gmagick::drawimage                                                  Renders the GmagickDraw object on the current image
Gmagick::edgeimage                                                  Enhance edges within the image
Gmagick::embossimage                                                Returns a grayscale image with a three-dimensional effect
Gmagick::enhanceimage                                               Improves the quality of a noisy image
Gmagick::equalizeimage                                              Equalizes the image histogram
Gmagick::flipimage                                                  Creates a vertical mirror image
Gmagick::flopimage                                                  The flopimage purpose
Gmagick::frameimage                                                 Adds a simulated three-dimensional border
Gmagick::gammaimage                                                 Gamma-corrects an image
Gmagick::getcopyright                                               Returns the GraphicsMagick API copyright as a string
Gmagick::getfilename                                                The filename associated with an image sequence
Gmagick::getimagebackgroundcolor                                    Returns the image background color
Gmagick::getimageblueprimary                                        Returns the chromaticy blue primary point
Gmagick::getimagebordercolor                                        Returns the image border color
Gmagick::getimagechanneldepth                                       Gets the depth for a particular image channel
Gmagick::getimagecolors                                             Returns the color of the specified colormap index
Gmagick::getimagecolorspace                                         Gets the image colorspace
Gmagick::getimagecompose                                            Returns the composite operator associated with the image
Gmagick::getimagedelay                                              Gets the image delay
Gmagick::getimagedepth                                              Gets the depth of the image
Gmagick::getimagedispose                                            Gets the image disposal method
Gmagick::getimageextrema                                            Gets the extrema for the image
Gmagick::getimagefilename                                           Returns the filename of a particular image in a sequence
Gmagick::getimageformat                                             Returns the format of a particular image in a sequence
Gmagick::getimagegamma                                              Gets the image gamma
Gmagick::getimagegreenprimary                                       Returns the chromaticy green primary point
Gmagick::getimageheight                                             Returns the image height
Gmagick::getimagehistogram                                          Gets the image histogram
Gmagick::getimageindex                                              Gets the index of the current active image
Gmagick::getimageinterlacescheme                                    Gets the image interlace scheme
Gmagick::getimageiterations                                         Gets the image iterations
Gmagick::getimagematte                                              Check if the image has a matte channel
Gmagick::getimagemattecolor                                         Returns the image matte color
Gmagick::getimageprofile                                            Returns the named image profile
Gmagick::getimageredprimary                                         Returns the chromaticity red primary point
Gmagick::getimagerenderingintent                                    Gets the image rendering intent
Gmagick::getimageresolution                                         Gets the image X and Y resolution
Gmagick::getimagescene                                              Gets the image scene
Gmagick::getimagesignature                                          Generates an SHA-256 message digest
Gmagick::getimagetype                                               Gets the potential image type
Gmagick::getimageunits                                              Gets the image units of resolution
Gmagick::getimagewhitepoint                                         Returns the chromaticity white point
Gmagick::getimagewidth                                              Returns the width of the image
Gmagick::getpackagename                                             Returns the GraphicsMagick package name
Gmagick::getquantumdepth                                            Returns the Gmagick quantum depth as a string
Gmagick::getreleasedate                                             Returns the GraphicsMagick release date as a string
Gmagick::getsamplingfactors                                         Gets the horizontal and vertical sampling factor
Gmagick::getsize                                                    Returns the size associated with the Gmagick object
Gmagick::getversion                                                 Returns the GraphicsMagick API version
Gmagick::hasnextimage                                               Checks if the object has more images
Gmagick::haspreviousimage                                           Checks if the object has a previous image
Gmagick::implodeimage                                               Creates a new image as a copy
Gmagick::labelimage                                                 Adds a label to an image
Gmagick::levelimage                                                 Adjusts the levels of an image
Gmagick::magnifyimage                                               Scales an image proportionally 2x
Gmagick::mapimage                                                   Replaces the colors of an image with the closest color from a reference image
Gmagick::medianfilterimage                                          Applies a digital filter
Gmagick::minifyimage                                                Scales an image proportionally to half its size
Gmagick::modulateimage                                              Control the brightness, saturation, and hue
Gmagick::motionblurimage                                            Simulates motion blur
Gmagick::newimage                                                   Creates a new image
Gmagick::nextimage                                                  Moves to the next image
Gmagick::normalizeimage                                             Enhances the contrast of a color image
Gmagick::oilpaintimage                                              Simulates an oil painting
Gmagick::previousimage                                              Move to the previous image in the object
Gmagick::profileimage                                               Adds or removes a profile from an image
Gmagick::quantizeimage                                              Analyzes the colors within a reference image
Gmagick::quantizeimages                                             The quantizeimages purpose
Gmagick::queryfontmetrics                                           Returns an array representing the font metrics
Gmagick::queryfonts                                                 Returns the configured fonts
Gmagick::queryformats                                               Returns formats supported by Gmagick
Gmagick::radialblurimage                                            Radial blurs an image
Gmagick::raiseimage                                                 Creates a simulated 3d button-like effect
Gmagick::read                                                       Reads image from filename
Gmagick::readimage                                                  Reads image from filename
Gmagick::readimageblob                                              Reads image from a binary string
Gmagick::readimagefile                                              The readimagefile purpose
Gmagick::reducenoiseimage                                           Smooths the contours of an image
Gmagick::removeimage                                                Removes an image from the image list
Gmagick::removeimageprofile                                         Removes the named image profile and returns it
Gmagick::resampleimage                                              Resample image to desired resolution
Gmagick::resizeimage                                                Scales an image
Gmagick::rollimage                                                  Offsets an image
Gmagick::rotateimage                                                Rotates an image
Gmagick::scaleimage                                                 Scales the size of an image
Gmagick::separateimagechannel                                       Separates a channel from the image
Gmagick::setCompressionQuality                                      Sets the object's default compression quality
Gmagick::setfilename                                                Sets the filename before you read or write the image
Gmagick::setimagebackgroundcolor                                    Sets the image background color
Gmagick::setimageblueprimary                                        Sets the image chromaticity blue primary point
Gmagick::setimagebordercolor                                        Sets the image border color
Gmagick::setimagechanneldepth                                       Sets the depth of a particular image channel
Gmagick::setimagecolorspace                                         Sets the image colorspace
Gmagick::setimagecompose                                            Sets the image composite operator
Gmagick::setimagedelay                                              Sets the image delay
Gmagick::setimagedepth                                              Sets the image depth
Gmagick::setimagedispose                                            Sets the image disposal method
Gmagick::setimagefilename                                           Sets the filename of a particular image in a sequence
Gmagick::setimageformat                                             Sets the format of a particular image
Gmagick::setimagegamma                                              Sets the image gamma
Gmagick::setimagegreenprimary                                       Sets the image chromaticity green primary point
Gmagick::setimageindex                                              Set the iterator to the position in the image list specified with the index parameter
Gmagick::setimageinterlacescheme                                    Sets the interlace scheme of the image
Gmagick::setimageiterations                                         Sets the image iterations
Gmagick::setimageprofile                                            Adds a named profile to the Gmagick object
Gmagick::setimageredprimary                                         Sets the image chromaticity red primary point
Gmagick::setimagerenderingintent                                    Sets the image rendering intent
Gmagick::setimageresolution                                         Sets the image resolution
Gmagick::setimagescene                                              Sets the image scene
Gmagick::setimagetype                                               Sets the image type
Gmagick::setimageunits                                              Sets the image units of resolution
Gmagick::setimagewhitepoint                                         Sets the image chromaticity white point
Gmagick::setsamplingfactors                                         Sets the image sampling factors
Gmagick::setsize                                                    Sets the size of the Gmagick object
Gmagick::shearimage                                                 Creating a parallelogram
Gmagick::solarizeimage                                              Applies a solarizing effect to the image
Gmagick::spreadimage                                                Randomly displaces each pixel in a block
Gmagick::stripimage                                                 Strips an image of all profiles and comments
Gmagick::swirlimage                                                 Swirls the pixels about the center of the image
Gmagick::thumbnailimage                                             Changes the size of an image
Gmagick::trimimage                                                  Remove edges from the image
Gmagick::write                                                      Alias of Gmagick::writeimage
Gmagick::writeimage                                                 Writes an image to the specified filename
Gmagick::__construct                                                The Gmagick constructor
GmagickDraw::annotate                                               Draws text on the image
GmagickDraw::arc                                                    Draws an arc
GmagickDraw::bezier                                                 Draws a bezier curve
GmagickDraw::ellipse                                                Draws an ellipse on the image
GmagickDraw::getfillcolor                                           Returns the fill color
GmagickDraw::getfillopacity                                         Returns the opacity used when drawing
GmagickDraw::getfont                                                Returns the font
GmagickDraw::getfontsize                                            Returns the font pointsize
GmagickDraw::getfontstyle                                           Returns the font style
GmagickDraw::getfontweight                                          Returns the font weight
GmagickDraw::getstrokecolor                                         Returns the color used for stroking object outlines
GmagickDraw::getstrokeopacity                                       Returns the opacity of stroked object outlines
GmagickDraw::getstrokewidth                                         Returns the width of the stroke used to draw object outlines
GmagickDraw::gettextdecoration                                      Returns the text decoration
GmagickDraw::gettextencoding                                        Returns the code set used for text annotations
GmagickDraw::line                                                   The line purpose
GmagickDraw::point                                                  Draws a point
GmagickDraw::polygon                                                Draws a polygon
GmagickDraw::polyline                                               Draws a polyline
GmagickDraw::rectangle                                              Draws a rectangle
GmagickDraw::rotate                                                 Applies the specified rotation to the current coordinate space
GmagickDraw::roundrectangle                                         Draws a rounded rectangle
GmagickDraw::scale                                                  Adjusts the scaling factor
GmagickDraw::setfillcolor                                           Sets the fill color to be used for drawing filled objects
GmagickDraw::setfillopacity                                         The setfillopacity purpose
GmagickDraw::setfont                                                Sets the fully-specified font to use when annotating with text
GmagickDraw::setfontsize                                            Sets the font pointsize to use when annotating with text
GmagickDraw::setfontstyle                                           Sets the font style to use when annotating with text
GmagickDraw::setfontweight                                          Sets the font weight
GmagickDraw::setstrokecolor                                         Sets the color used for stroking object outlines
GmagickDraw::setstrokeopacity                                       Specifies the opacity of stroked object outlines
GmagickDraw::setstrokewidth                                         Sets the width of the stroke used to draw object outlines
GmagickDraw::settextdecoration                                      Specifies a decoration
GmagickDraw::settextencoding                                        Specifies the text code set
GmagickPixel::getcolor                                              Returns the color
GmagickPixel::getcolorcount                                         Returns the color count associated with this color
GmagickPixel::getcolorvalue                                         Gets the normalized value of the provided color channel
GmagickPixel::setcolor                                              Sets the color
GmagickPixel::setcolorvalue                                         Sets the normalized value of one of the channels
GmagickPixel::__construct                                           The GmagickPixel constructor
gmp_abs                                                             Absolute value
gmp_add                                                             Add numbers
gmp_and                                                             Bitwise AND
gmp_binomial                                                        Calculates binomial coefficient
gmp_clrbit                                                          Clear bit
gmp_cmp                                                             Compare numbers
gmp_com                                                             Calculates one's complement
gmp_div                                                             Alias of gmp_div_q
gmp_divexact                                                        Exact division of numbers
gmp_div_q                                                           Divide numbers
gmp_div_qr                                                          Divide numbers and get quotient and remainder
gmp_div_r                                                           Remainder of the division of numbers
gmp_export                                                          Export to a binary string
gmp_fact                                                            Factorial
gmp_gcd                                                             Calculate GCD
gmp_gcdext                                                          Calculate GCD and multipliers
gmp_hamdist                                                         Hamming distance
gmp_import                                                          Import from a binary string
gmp_init                                                            Create GMP number
gmp_intval                                                          Convert GMP number to integer
gmp_invert                                                          Inverse by modulo
gmp_jacobi                                                          Jacobi symbol
gmp_kronecker                                                       Kronecker symbol
gmp_lcm                                                             Calculate LCM
gmp_legendre                                                        Legendre symbol
gmp_mod                                                             Modulo operation
gmp_mul                                                             Multiply numbers
gmp_neg                                                             Negate number
gmp_nextprime                                                       Find next prime number
gmp_or                                                              Bitwise OR
gmp_perfect_power                                                   Perfect power check
gmp_perfect_square                                                  Perfect square check
gmp_popcount                                                        Population count
gmp_pow                                                             Raise number into power
gmp_powm                                                            Raise number into power with modulo
gmp_prob_prime                                                      Check if number is "probably prime"
gmp_random                                                          Random number
gmp_random_bits                                                     Random number
gmp_random_range                                                    Random number
gmp_random_seed                                                     Sets the RNG seed
gmp_root                                                            Take the integer part of nth root
gmp_rootrem                                                         Take the integer part and remainder of nth root
gmp_scan0                                                           Scan for 0
gmp_scan1                                                           Scan for 1
gmp_setbit                                                          Set bit
gmp_sign                                                            Sign of number
gmp_sqrt                                                            Calculate square root
gmp_sqrtrem                                                         Square root with remainder
gmp_strval                                                          Convert GMP number to string
gmp_sub                                                             Subtract numbers
gmp_testbit                                                         Tests if a bit is set
gmp_xor                                                             Bitwise XOR
gnupg_adddecryptkey                                                 Add a key for decryption
gnupg_addencryptkey                                                 Add a key for encryption
gnupg_addsignkey                                                    Add a key for signing
gnupg_cleardecryptkeys                                              Removes all keys which were set for decryption before
gnupg_clearencryptkeys                                              Removes all keys which were set for encryption before
gnupg_clearsignkeys                                                 Removes all keys which were set for signing before
gnupg_decrypt                                                       Decrypts a given text
gnupg_decryptverify                                                 Decrypts and verifies a given text
gnupg_encrypt                                                       Encrypts a given text
gnupg_encryptsign                                                   Encrypts and signs a given text
gnupg_export                                                        Exports a key
gnupg_geterror                                                      Returns the errortext, if a function fails
gnupg_getprotocol                                                   Returns the currently active protocol for all operations
gnupg_import                                                        Imports a key
gnupg_init                                                          Initialize a connection
gnupg_keyinfo                                                       Returns an array with information about all keys that matches the given pattern
gnupg_setarmor                                                      Toggle armored output
gnupg_seterrormode                                                  Sets the mode for error_reporting
gnupg_setsignmode                                                   Sets the mode for signing
gnupg_sign                                                          Signs a given text
gnupg_verify                                                        Verifies a signed text
grapheme_extract                                                    Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8
grapheme_stripos                                                    Find position (in grapheme units) of first occurrence of a case-insensitive string
grapheme_stristr                                                    Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack
grapheme_strlen                                                     Get string length in grapheme units
grapheme_strpos                                                     Find position (in grapheme units) of first occurrence of a string
grapheme_strripos                                                   Find position (in grapheme units) of last occurrence of a case-insensitive string
grapheme_strrpos                                                    Find position (in grapheme units) of last occurrence of a string
grapheme_strstr                                                     Returns part of haystack string from the first occurrence of needle to the end of haystack
grapheme_substr                                                     Return part of a string
gregoriantojd                                                       Converts a Gregorian date to Julian Day Count
HashContext::__construct                                            Private constructor to disallow direct instantiation
header                                                              Send a raw HTTP header
highlight_file                                                      Syntax highlighting of a file
hrtime                                                              Get the system's high resolution time
HRTime\PerformanceCounter::getFrequency                             Timer frequency in ticks per second
HRTime\PerformanceCounter::getTicks                                 Current ticks from the system
HRTime\PerformanceCounter::getTicksSince                            Ticks elapsed since the given value
HRTime\StopWatch::getElapsedTicks                                   Get elapsed ticks for all intervals
HRTime\StopWatch::getElapsedTime                                    Get elapsed time for all intervals
HRTime\StopWatch::getLastElapsedTicks                               Get elapsed ticks for the last interval
HRTime\StopWatch::getLastElapsedTime                                Get elapsed time for the last interval
HRTime\StopWatch::isRunning                                         Whether the measurement is running
HRTime\StopWatch::start                                             Start time measurement
HRTime\StopWatch::stop                                              Stop time measurement
http://                                                             Accessing HTTP(s) URLs
HTTP context options                                                HTTP context option listing
ibase_add_user                                                      Add a user to a security database
ibase_affected_rows                                                 Return the number of rows that were affected by the previous query
ibase_backup                                                        Initiates a backup task in the service manager and returns immediately
ibase_blob_add                                                      Add data into a newly created blob
ibase_blob_cancel                                                   Cancel creating blob
ibase_blob_close                                                    Close blob
ibase_blob_create                                                   Create a new blob for adding data
ibase_blob_echo                                                     Output blob contents to browser
ibase_blob_get                                                      Get len bytes data from open blob
ibase_blob_import                                                   Create blob, copy file in it, and close it
ibase_blob_info                                                     Return blob length and other useful info
ibase_blob_open                                                     Open blob for retrieving data parts
ibase_close                                                         Close a connection to an InterBase database
ibase_commit                                                        Commit a transaction
ibase_commit_ret                                                    Commit a transaction without closing it
ibase_connect                                                       Open a connection to a database
ibase_db_info                                                       Request statistics about a database
ibase_delete_user                                                   Delete a user from a security database
ibase_drop_db                                                       Drops a database
ibase_errcode                                                       Return an error code
ibase_errmsg                                                        Return error messages
ibase_execute                                                       Execute a previously prepared query
ibase_fetch_assoc                                                   Fetch a result row from a query as an associative array
ibase_fetch_object                                                  Get an object from a InterBase database
ibase_fetch_row                                                     Fetch a row from an InterBase database
ibase_field_info                                                    Get information about a field
ibase_free_event_handler                                            Cancels a registered event handler
ibase_free_query                                                    Free memory allocated by a prepared query
ibase_free_result                                                   Free a result set
ibase_gen_id                                                        Increments the named generator and returns its new value
ibase_maintain_db                                                   Execute a maintenance command on the database server
ibase_modify_user                                                   Modify a user to a security database
ibase_name_result                                                   Assigns a name to a result set
ibase_num_fields                                                    Get the number of fields in a result set
ibase_num_params                                                    Return the number of parameters in a prepared query
ibase_param_info                                                    Return information about a parameter in a prepared query
ibase_pconnect                                                      Open a persistent connection to an InterBase database
ibase_prepare                                                       Prepare a query for later binding of parameter placeholders and execution
ibase_query                                                         Execute a query on an InterBase database
ibase_restore                                                       Initiates a restore task in the service manager and returns immediately
ibase_rollback                                                      Roll back a transaction
ibase_rollback_ret                                                  Roll back a transaction without closing it
ibase_server_info                                                   Request information about a database server
ibase_service_attach                                                Connect to the service manager
ibase_service_detach                                                Disconnect from the service manager
ibase_set_event_handler                                             Register a callback function to be called when events are posted
ibase_trans                                                         Begin a transaction
ibase_wait_event                                                    Wait for an event to be posted by the database
idn_to_ascii                                                        Convert domain name to IDNA ASCII form
idn_to_utf8                                                         Convert domain name from IDNA ASCII to Unicode
image2wbmp                                                          Output image to browser or file
imageaffine                                                         Return an image containing the affine transformed src image, using an optional clipping area
imageaffinematrixconcat                                             Concatenate two affine transformation matrices
imageaffinematrixget                                                Get an affine transformation matrix
imagealphablending                                                  Set the blending mode for an image
imageantialias                                                      Should antialias functions be used or not
imagearc                                                            Draws an arc
imagebmp                                                            Output a BMP image to browser or file
imagechar                                                           Draw a character horizontally
imagecharup                                                         Draw a character vertically
imagecolorallocate                                                  Allocate a color for an image
imagecolorallocatealpha                                             Allocate a color for an image
imagecolorat                                                        Get the index of the color of a pixel
imagecolorclosest                                                   Get the index of the closest color to the specified color
imagecolorclosestalpha                                              Get the index of the closest color to the specified color + alpha
imagecolorclosesthwb                                                Get the index of the color which has the hue, white and blackness
imagecolordeallocate                                                De-allocate a color for an image
imagecolorexact                                                     Get the index of the specified color
imagecolorexactalpha                                                Get the index of the specified color + alpha
imagecolormatch                                                     Makes the colors of the palette version of an image more closely match the true color version
imagecolorresolve                                                   Get the index of the specified color or its closest possible alternative
imagecolorresolvealpha                                              Get the index of the specified color + alpha or its closest possible alternative
imagecolorset                                                       Set the color for the specified palette index
imagecolorsforindex                                                 Get the colors for an index
imagecolorstotal                                                    Find out the number of colors in an image's palette
imagecolortransparent                                               Define a color as transparent
imageconvolution                                                    Apply a 3x3 convolution matrix, using coefficient and offset
imagecopy                                                           Copy part of an image
imagecopymerge                                                      Copy and merge part of an image
imagecopymergegray                                                  Copy and merge part of an image with gray scale
imagecopyresampled                                                  Copy and resize part of an image with resampling
imagecopyresized                                                    Copy and resize part of an image
imagecreate                                                         Create a new palette based image
imagecreatefrombmp                                                  Create a new image from file or URL
imagecreatefromgd                                                   Create a new image from GD file or URL
imagecreatefromgd2                                                  Create a new image from GD2 file or URL
imagecreatefromgd2part                                              Create a new image from a given part of GD2 file or URL
imagecreatefromgif                                                  Create a new image from file or URL
imagecreatefromjpeg                                                 Create a new image from file or URL
imagecreatefrompng                                                  Create a new image from file or URL
imagecreatefromstring                                               Create a new image from the image stream in the string
imagecreatefromwbmp                                                 Create a new image from file or URL
imagecreatefromwebp                                                 Create a new image from file or URL
imagecreatefromxbm                                                  Create a new image from file or URL
imagecreatefromxpm                                                  Create a new image from file or URL
imagecreatetruecolor                                                Create a new true color image
imagecrop                                                           Crop an image to the given rectangle
imagecropauto                                                       Crop an image automatically using one of the available modes
imagedashedline                                                     Draw a dashed line
imagedestroy                                                        Destroy an image
imageellipse                                                        Draw an ellipse
imagefill                                                           Flood fill
imagefilledarc                                                      Draw a partial arc and fill it
imagefilledellipse                                                  Draw a filled ellipse
imagefilledpolygon                                                  Draw a filled polygon
imagefilledrectangle                                                Draw a filled rectangle
imagefilltoborder                                                   Flood fill to specific color
imagefilter                                                         Applies a filter to an image
imageflip                                                           Flips an image using a given mode
imagefontheight                                                     Get font height
imagefontwidth                                                      Get font width
imageftbbox                                                         Give the bounding box of a text using fonts via freetype2
imagefttext                                                         Write text to the image using fonts using FreeType 2
imagegammacorrect                                                   Apply a gamma correction to a GD image
imagegd                                                             Output GD image to browser or file
imagegd2                                                            Output GD2 image to browser or file
imagegetclip                                                        Get the clipping rectangle
imagegetinterpolation                                               Get the interpolation method
imagegif                                                            Output image to browser or file
imagegrabscreen                                                     Captures the whole screen
imagegrabwindow                                                     Captures a window
imageinterlace                                                      Enable or disable interlace
imageistruecolor                                                    Finds whether an image is a truecolor image
imagejpeg                                                           Output image to browser or file
imagelayereffect                                                    Set the alpha blending flag to use layering effects
imageline                                                           Draw a line
imageloadfont                                                       Load a new font
imageopenpolygon                                                    Draws an open polygon
imagepalettecopy                                                    Copy the palette from one image to another
imagepalettetotruecolor                                             Converts a palette based image to true color
imagepng                                                            Output a PNG image to either the browser or a file
imagepolygon                                                        Draws a polygon
imagerectangle                                                      Draw a rectangle
imageresolution                                                     Get or set the resolution of the image
imagerotate                                                         Rotate an image with a given angle
imagesavealpha                                                      Whether to retain full alpha channel information when saving PNG images
imagescale                                                          Scale an image using the given new width and height
imagesetbrush                                                       Set the brush image for line drawing
imagesetclip                                                        Set the clipping rectangle
imagesetinterpolation                                               Set the interpolation method
imagesetpixel                                                       Set a single pixel
imagesetstyle                                                       Set the style for line drawing
imagesetthickness                                                   Set the thickness for line drawing
imagesettile                                                        Set the tile image for filling
imagestring                                                         Draw a string horizontally
imagestringup                                                       Draw a string vertically
imagesx                                                             Get image width
imagesy                                                             Get image height
imagetruecolortopalette                                             Convert a true color image to a palette image
imagettfbbox                                                        Give the bounding box of a text using TrueType fonts
imagettftext                                                        Write text to the image using TrueType fonts
imagetypes                                                          Return the image types supported by this PHP build
imagewbmp                                                           Output image to browser or file
imagewebp                                                           Output a WebP image to browser or file
imagexbm                                                            Output an XBM image to browser or file
Imagick::adaptiveBlurImage                                          Adds adaptive blur filter to image
Imagick::adaptiveResizeImage                                        Adaptively resize image with data dependent triangulation
Imagick::adaptiveSharpenImage                                       Adaptively sharpen the image
Imagick::adaptiveThresholdImage                                     Selects a threshold for each pixel based on a range of intensity
Imagick::addImage                                                   Adds new image to Imagick object image list
Imagick::addNoiseImage                                              Adds random noise to the image
Imagick::affineTransformImage                                       Transforms an image
Imagick::animateImages                                              Animates an image or images
Imagick::annotateImage                                              Annotates an image with text
Imagick::appendImages                                               Append a set of images
Imagick::autoLevelImage                                             Description
Imagick::averageImages                                              Average a set of images
Imagick::blackThresholdImage                                        Forces all pixels below the threshold into black
Imagick::blueShiftImage                                             Description
Imagick::blurImage                                                  Adds blur filter to image
Imagick::borderImage                                                Surrounds the image with a border
Imagick::brightnessContrastImage                                    Description
Imagick::charcoalImage                                              Simulates a charcoal drawing
Imagick::chopImage                                                  Removes a region of an image and trims
Imagick::clampImage                                                 Description
Imagick::clear                                                      Clears all resources associated to Imagick object
Imagick::clipImage                                                  Clips along the first path from the 8BIM profile
Imagick::clipImagePath                                              Description
Imagick::clipPathImage                                              Clips along the named paths from the 8BIM profile
Imagick::clone                                                      Makes an exact copy of the Imagick object
Imagick::clutImage                                                  Replaces colors in the image
Imagick::coalesceImages                                             Composites a set of images
Imagick::colorFloodfillImage                                        Changes the color value of any pixel that matches target
Imagick::colorizeImage                                              Blends the fill color with the image
Imagick::colorMatrixImage                                           Description
Imagick::combineImages                                              Combines one or more images into a single image
Imagick::commentImage                                               Adds a comment to your image
Imagick::compareImageChannels                                       Returns the difference in one or more images
Imagick::compareImageLayers                                         Returns the maximum bounding region between images
Imagick::compareImages                                              Compares an image to a reconstructed image
Imagick::compositeImage                                             Composite one image onto another
Imagick::contrastImage                                              Change the contrast of the image
Imagick::contrastStretchImage                                       Enhances the contrast of a color image
Imagick::convolveImage                                              Applies a custom convolution kernel to the image
Imagick::count                                                      Get the number of images
Imagick::cropImage                                                  Extracts a region of the image
Imagick::cropThumbnailImage                                         Creates a crop thumbnail
Imagick::current                                                    Returns a reference to the current Imagick object
Imagick::cycleColormapImage                                         Displaces an image's colormap
Imagick::decipherImage                                              Deciphers an image
Imagick::deconstructImages                                          Returns certain pixel differences between images
Imagick::deleteImageArtifact                                        Delete image artifact
Imagick::deleteImageProperty                                        Description
Imagick::deskewImage                                                Removes skew from the image
Imagick::despeckleImage                                             Reduces the speckle noise in an image
Imagick::destroy                                                    Destroys the Imagick object
Imagick::displayImage                                               Displays an image
Imagick::displayImages                                              Displays an image or image sequence
Imagick::distortImage                                               Distorts an image using various distortion methods
Imagick::drawImage                                                  Renders the ImagickDraw object on the current image
Imagick::edgeImage                                                  Enhance edges within the image
Imagick::embossImage                                                Returns a grayscale image with a three-dimensional effect
Imagick::encipherImage                                              Enciphers an image
Imagick::enhanceImage                                               Improves the quality of a noisy image
Imagick::equalizeImage                                              Equalizes the image histogram
Imagick::evaluateImage                                              Applies an expression to an image
Imagick::exportImagePixels                                          Exports raw image pixels
Imagick::extentImage                                                Set image size
Imagick::filter                                                     Description
Imagick::flattenImages                                              Merges a sequence of images
Imagick::flipImage                                                  Creates a vertical mirror image
Imagick::floodFillPaintImage                                        Changes the color value of any pixel that matches target
Imagick::flopImage                                                  Creates a vertical mirror image
Imagick::forwardFourierTransformImage                               Description
Imagick::frameImage                                                 Adds a simulated three-dimensional border
Imagick::functionImage                                              Applies a function on the image
Imagick::fxImage                                                    Evaluate expression for each pixel in the image
Imagick::gammaImage                                                 Gamma-corrects an image
Imagick::gaussianBlurImage                                          Blurs an image
Imagick::getColorspace                                              Gets the colorspace
Imagick::getCompression                                             Gets the object compression type
Imagick::getCompressionQuality                                      Gets the object compression quality
Imagick::getCopyright                                               Returns the ImageMagick API copyright as a string
Imagick::getFilename                                                The filename associated with an image sequence
Imagick::getFont                                                    Gets font
Imagick::getFormat                                                  Returns the format of the Imagick object
Imagick::getGravity                                                 Gets the gravity
Imagick::getHomeURL                                                 Returns the ImageMagick home URL
Imagick::getImage                                                   Returns a new Imagick object
Imagick::getImageAlphaChannel                                       Gets the image alpha channel
Imagick::getImageArtifact                                           Get image artifact
Imagick::getImageAttribute                                          Description
Imagick::getImageBackgroundColor                                    Returns the image background color
Imagick::getImageBlob                                               Returns the image sequence as a blob
Imagick::getImageBluePrimary                                        Returns the chromaticy blue primary point
Imagick::getImageBorderColor                                        Returns the image border color
Imagick::getImageChannelDepth                                       Gets the depth for a particular image channel
Imagick::getImageChannelDistortion                                  Compares image channels of an image to a reconstructed image
Imagick::getImageChannelDistortions                                 Gets channel distortions
Imagick::getImageChannelExtrema                                     Gets the extrema for one or more image channels
Imagick::getImageChannelKurtosis                                    The getImageChannelKurtosis purpose
Imagick::getImageChannelMean                                        Gets the mean and standard deviation
Imagick::getImageChannelRange                                       Gets channel range
Imagick::getImageChannelStatistics                                  Returns statistics for each channel in the image
Imagick::getImageClipMask                                           Gets image clip mask
Imagick::getImageColormapColor                                      Returns the color of the specified colormap index
Imagick::getImageColors                                             Gets the number of unique colors in the image
Imagick::getImageColorspace                                         Gets the image colorspace
Imagick::getImageCompose                                            Returns the composite operator associated with the image
Imagick::getImageCompression                                        Gets the current image's compression type
Imagick::getImageCompressionQuality                                 Gets the current image's compression quality
Imagick::getImageDelay                                              Gets the image delay
Imagick::getImageDepth                                              Gets the image depth
Imagick::getImageDispose                                            Gets the image disposal method
Imagick::getImageDistortion                                         Compares an image to a reconstructed image
Imagick::getImageExtrema                                            Gets the extrema for the image
Imagick::getImageFilename                                           Returns the filename of a particular image in a sequence
Imagick::getImageFormat                                             Returns the format of a particular image in a sequence
Imagick::getImageGamma                                              Gets the image gamma
Imagick::getImageGeometry                                           Gets the width and height as an associative array
Imagick::getImageGravity                                            Gets the image gravity
Imagick::getImageGreenPrimary                                       Returns the chromaticy green primary point
Imagick::getImageHeight                                             Returns the image height
Imagick::getImageHistogram                                          Gets the image histogram
Imagick::getImageIndex                                              Gets the index of the current active image
Imagick::getImageInterlaceScheme                                    Gets the image interlace scheme
Imagick::getImageInterpolateMethod                                  Returns the interpolation method
Imagick::getImageIterations                                         Gets the image iterations
Imagick::getImageLength                                             Returns the image length in bytes
Imagick::getImageMatte                                              Return if the image has a matte channel
Imagick::getImageMatteColor                                         Returns the image matte color
Imagick::getImageMimeType                                           Description
Imagick::getImageOrientation                                        Gets the image orientation
Imagick::getImagePage                                               Returns the page geometry
Imagick::getImagePixelColor                                         Returns the color of the specified pixel
Imagick::getImageProfile                                            Returns the named image profile
Imagick::getImageProfiles                                           Returns the image profiles
Imagick::getImageProperties                                         Returns the image properties
Imagick::getImageProperty                                           Returns the named image property
Imagick::getImageRedPrimary                                         Returns the chromaticity red primary point
Imagick::getImageRegion                                             Extracts a region of the image
Imagick::getImageRenderingIntent                                    Gets the image rendering intent
Imagick::getImageResolution                                         Gets the image X and Y resolution
Imagick::getImagesBlob                                              Returns all image sequences as a blob
Imagick::getImageScene                                              Gets the image scene
Imagick::getImageSignature                                          Generates an SHA-256 message digest
Imagick::getImageSize                                               Returns the image length in bytes
Imagick::getImageTicksPerSecond                                     Gets the image ticks-per-second
Imagick::getImageTotalInkDensity                                    Gets the image total ink density
Imagick::getImageType                                               Gets the potential image type
Imagick::getImageUnits                                              Gets the image units of resolution
Imagick::getImageVirtualPixelMethod                                 Returns the virtual pixel method
Imagick::getImageWhitePoint                                         Returns the chromaticity white point
Imagick::getImageWidth                                              Returns the image width
Imagick::getInterlaceScheme                                         Gets the object interlace scheme
Imagick::getIteratorIndex                                           Gets the index of the current active image
Imagick::getNumberImages                                            Returns the number of images in the object
Imagick::getOption                                                  Returns a value associated with the specified key
Imagick::getPackageName                                             Returns the ImageMagick package name
Imagick::getPage                                                    Returns the page geometry
Imagick::getPixelIterator                                           Returns a MagickPixelIterator
Imagick::getPixelRegionIterator                                     Get an ImagickPixelIterator for an image section
Imagick::getPointSize                                               Gets point size
Imagick::getQuantum                                                 Description
Imagick::getQuantumDepth                                            Gets the quantum depth
Imagick::getQuantumRange                                            Returns the Imagick quantum range
Imagick::getRegistry                                                Description
Imagick::getReleaseDate                                             Returns the ImageMagick release date
Imagick::getResource                                                Returns the specified resource's memory usage
Imagick::getResourceLimit                                           Returns the specified resource limit
Imagick::getSamplingFactors                                         Gets the horizontal and vertical sampling factor
Imagick::getSize                                                    Returns the size associated with the Imagick object
Imagick::getSizeOffset                                              Returns the size offset
Imagick::getVersion                                                 Returns the ImageMagick API version
Imagick::haldClutImage                                              Replaces colors in the image
Imagick::hasNextImage                                               Checks if the object has more images
Imagick::hasPreviousImage                                           Checks if the object has a previous image
Imagick::identifyFormat                                             Description
Imagick::identifyImage                                              Identifies an image and fetches attributes
Imagick::implodeImage                                               Creates a new image as a copy
Imagick::importImagePixels                                          Imports image pixels
Imagick::inverseFourierTransformImage                               Description
Imagick::labelImage                                                 Adds a label to an image
Imagick::levelImage                                                 Adjusts the levels of an image
Imagick::linearStretchImage                                         Stretches with saturation the image intensity
Imagick::liquidRescaleImage                                         Animates an image or images
Imagick::listRegistry                                               Description
Imagick::magnifyImage                                               Scales an image proportionally 2x
Imagick::mapImage                                                   Replaces the colors of an image with the closest color from a reference image
Imagick::matteFloodfillImage                                        Changes the transparency value of a color
Imagick::medianFilterImage                                          Applies a digital filter
Imagick::mergeImageLayers                                           Merges image layers
Imagick::minifyImage                                                Scales an image proportionally to half its size
Imagick::modulateImage                                              Control the brightness, saturation, and hue
Imagick::montageImage                                               Creates a composite image
Imagick::morphImages                                                Method morphs a set of images
Imagick::morphology                                                 Description
Imagick::mosaicImages                                               Forms a mosaic from images
Imagick::motionBlurImage                                            Simulates motion blur
Imagick::negateImage                                                Negates the colors in the reference image
Imagick::newImage                                                   Creates a new image
Imagick::newPseudoImage                                             Creates a new image
Imagick::nextImage                                                  Moves to the next image
Imagick::normalizeImage                                             Enhances the contrast of a color image
Imagick::oilPaintImage                                              Simulates an oil painting
Imagick::opaquePaintImage                                           Changes the color value of any pixel that matches target
Imagick::optimizeImageLayers                                        Removes repeated portions of images to optimize
Imagick::orderedPosterizeImage                                      Performs an ordered dither
Imagick::paintFloodfillImage                                        Changes the color value of any pixel that matches target
Imagick::paintOpaqueImage                                           Change any pixel that matches color
Imagick::paintTransparentImage                                      Changes any pixel that matches color with the color defined by fill
Imagick::pingImage                                                  Fetch basic attributes about the image
Imagick::pingImageBlob                                              Quickly fetch attributes
Imagick::pingImageFile                                              Get basic image attributes in a lightweight manner
Imagick::polaroidImage                                              Simulates a Polaroid picture
Imagick::posterizeImage                                             Reduces the image to a limited number of color level
Imagick::previewImages                                              Quickly pin-point appropriate parameters for image processing
Imagick::previousImage                                              Move to the previous image in the object
Imagick::profileImage                                               Adds or removes a profile from an image
Imagick::quantizeImage                                              Analyzes the colors within a reference image
Imagick::quantizeImages                                             Analyzes the colors within a sequence of images
Imagick::queryFontMetrics                                           Returns an array representing the font metrics
Imagick::queryFonts                                                 Returns the configured fonts
Imagick::queryFormats                                               Returns formats supported by Imagick
Imagick::radialBlurImage                                            Radial blurs an image
Imagick::raiseImage                                                 Creates a simulated 3d button-like effect
Imagick::randomThresholdImage                                       Creates a high-contrast, two-color image
Imagick::readImage                                                  Reads image from filename
Imagick::readImageBlob                                              Reads image from a binary string
Imagick::readImageFile                                              Reads image from open filehandle
Imagick::readimages                                                 Description
Imagick::recolorImage                                               Recolors image
Imagick::reduceNoiseImage                                           Smooths the contours of an image
Imagick::remapImage                                                 Remaps image colors
Imagick::removeImage                                                Removes an image from the image list
Imagick::removeImageProfile                                         Removes the named image profile and returns it
Imagick::render                                                     Renders all preceding drawing commands
Imagick::resampleImage                                              Resample image to desired resolution
Imagick::resetImagePage                                             Reset image page
Imagick::resizeImage                                                Scales an image
Imagick::rollImage                                                  Offsets an image
Imagick::rotateImage                                                Rotates an image
Imagick::rotationalBlurImage                                        Description
Imagick::roundCorners                                               Rounds image corners
Imagick::sampleImage                                                Scales an image with pixel sampling
Imagick::scaleImage                                                 Scales the size of an image
Imagick::segmentImage                                               Segments an image
Imagick::selectiveBlurImage                                         Description
Imagick::separateImageChannel                                       Separates a channel from the image
Imagick::sepiaToneImage                                             Sepia tones an image
Imagick::setBackgroundColor                                         Sets the object's default background color
Imagick::setColorspace                                              Set colorspace
Imagick::setCompression                                             Sets the object's default compression type
Imagick::setCompressionQuality                                      Sets the object's default compression quality
Imagick::setFilename                                                Sets the filename before you read or write the image
Imagick::setFirstIterator                                           Sets the Imagick iterator to the first image
Imagick::setFont                                                    Sets font
Imagick::setFormat                                                  Sets the format of the Imagick object
Imagick::setGravity                                                 Sets the gravity
Imagick::setImage                                                   Replaces image in the object
Imagick::setImageAlphaChannel                                       Sets image alpha channel
Imagick::setImageArtifact                                           Set image artifact
Imagick::setImageAttribute                                          Description
Imagick::setImageBackgroundColor                                    Sets the image background color
Imagick::setImageBias                                               Sets the image bias for any method that convolves an image
Imagick::setImageBiasQuantum                                        Description
Imagick::setImageBluePrimary                                        Sets the image chromaticity blue primary point
Imagick::setImageBorderColor                                        Sets the image border color
Imagick::setImageChannelDepth                                       Sets the depth of a particular image channel
Imagick::setImageClipMask                                           Sets image clip mask
Imagick::setImageColormapColor                                      Sets the color of the specified colormap index
Imagick::setImageColorspace                                         Sets the image colorspace
Imagick::setImageCompose                                            Sets the image composite operator
Imagick::setImageCompression                                        Sets the image compression
Imagick::setImageCompressionQuality                                 Sets the image compression quality
Imagick::setImageDelay                                              Sets the image delay
Imagick::setImageDepth                                              Sets the image depth
Imagick::setImageDispose                                            Sets the image disposal method
Imagick::setImageExtent                                             Sets the image size
Imagick::setImageFilename                                           Sets the filename of a particular image
Imagick::setImageFormat                                             Sets the format of a particular image
Imagick::setImageGamma                                              Sets the image gamma
Imagick::setImageGravity                                            Sets the image gravity
Imagick::setImageGreenPrimary                                       Sets the image chromaticity green primary point
Imagick::setImageIndex                                              Set the iterator position
Imagick::setImageInterlaceScheme                                    Sets the image compression
Imagick::setImageInterpolateMethod                                  Sets the image interpolate pixel method
Imagick::setImageIterations                                         Sets the image iterations
Imagick::setImageMatte                                              Sets the image matte channel
Imagick::setImageMatteColor                                         Sets the image matte color
Imagick::setImageOpacity                                            Sets the image opacity level
Imagick::setImageOrientation                                        Sets the image orientation
Imagick::setImagePage                                               Sets the page geometry of the image
Imagick::setImageProfile                                            Adds a named profile to the Imagick object
Imagick::setImageProperty                                           Sets an image property
Imagick::setImageRedPrimary                                         Sets the image chromaticity red primary point
Imagick::setImageRenderingIntent                                    Sets the image rendering intent
Imagick::setImageResolution                                         Sets the image resolution
Imagick::setImageScene                                              Sets the image scene
Imagick::setImageTicksPerSecond                                     Sets the image ticks-per-second
Imagick::setImageType                                               Sets the image type
Imagick::setImageUnits                                              Sets the image units of resolution
Imagick::setImageVirtualPixelMethod                                 Sets the image virtual pixel method
Imagick::setImageWhitePoint                                         Sets the image chromaticity white point
Imagick::setInterlaceScheme                                         Sets the image compression
Imagick::setIteratorIndex                                           Set the iterator position
Imagick::setLastIterator                                            Sets the Imagick iterator to the last image
Imagick::setOption                                                  Set an option
Imagick::setPage                                                    Sets the page geometry of the Imagick object
Imagick::setPointSize                                               Sets point size
Imagick::setProgressMonitor                                         Description
Imagick::setRegistry                                                Description
Imagick::setResolution                                              Sets the image resolution
Imagick::setResourceLimit                                           Sets the limit for a particular resource
Imagick::setSamplingFactors                                         Sets the image sampling factors
Imagick::setSize                                                    Sets the size of the Imagick object
Imagick::setSizeOffset                                              Sets the size and offset of the Imagick object
Imagick::setType                                                    Sets the image type attribute
Imagick::shadeImage                                                 Creates a 3D effect
Imagick::shadowImage                                                Simulates an image shadow
Imagick::sharpenImage                                               Sharpens an image
Imagick::shaveImage                                                 Shaves pixels from the image edges
Imagick::shearImage                                                 Creating a parallelogram
Imagick::sigmoidalContrastImage                                     Adjusts the contrast of an image
Imagick::sketchImage                                                Simulates a pencil sketch
Imagick::smushImages                                                Description
Imagick::solarizeImage                                              Applies a solarizing effect to the image
Imagick::sparseColorImage                                           Interpolates colors
Imagick::spliceImage                                                Splices a solid color into the image
Imagick::spreadImage                                                Randomly displaces each pixel in a block
Imagick::statisticImage                                             Description
Imagick::steganoImage                                               Hides a digital watermark within the image
Imagick::stereoImage                                                Composites two images
Imagick::stripImage                                                 Strips an image of all profiles and comments
Imagick::subImageMatch                                              Description
Imagick::swirlImage                                                 Swirls the pixels about the center of the image
Imagick::textureImage                                               Repeatedly tiles the texture image
Imagick::thresholdImage                                             Changes the value of individual pixels based on a threshold
Imagick::thumbnailImage                                             Changes the size of an image
Imagick::tintImage                                                  Applies a color vector to each pixel in the image
Imagick::transformImage                                             Convenience method for setting crop size and the image geometry
Imagick::transformImageColorspace                                   Transforms an image to a new colorspace
Imagick::transparentPaintImage                                      Paints pixels transparent
Imagick::transposeImage                                             Creates a vertical mirror image
Imagick::transverseImage                                            Creates a horizontal mirror image
Imagick::trimImage                                                  Remove edges from the image
Imagick::uniqueImageColors                                          Discards all but one of any pixel color
Imagick::unsharpMaskImage                                           Sharpens an image
Imagick::valid                                                      Checks if the current item is valid
Imagick::vignetteImage                                              Adds vignette filter to the image
Imagick::waveImage                                                  Applies wave filter to the image
Imagick::whiteThresholdImage                                        Force all pixels above the threshold into white
Imagick::writeImage                                                 Writes an image to the specified filename
Imagick::writeImageFile                                             Writes an image to a filehandle
Imagick::writeImages                                                Writes an image or image sequence
Imagick::writeImagesFile                                            Writes frames to a filehandle
Imagick::__construct                                                The Imagick constructor
Imagick::__toString                                                 Returns the image as a string
ImagickDraw::affine                                                 Adjusts the current affine transformation matrix
ImagickDraw::annotation                                             Draws text on the image
ImagickDraw::arc                                                    Draws an arc
ImagickDraw::bezier                                                 Draws a bezier curve
ImagickDraw::circle                                                 Draws a circle
ImagickDraw::clear                                                  Clears the ImagickDraw
ImagickDraw::clone                                                  Makes an exact copy of the specified ImagickDraw object
ImagickDraw::color                                                  Draws color on image
ImagickDraw::comment                                                Adds a comment
ImagickDraw::composite                                              Composites an image onto the current image
ImagickDraw::destroy                                                Frees all associated resources
ImagickDraw::ellipse                                                Draws an ellipse on the image
ImagickDraw::getClipPath                                            Obtains the current clipping path ID
ImagickDraw::getClipRule                                            Returns the current polygon fill rule
ImagickDraw::getClipUnits                                           Returns the interpretation of clip path units
ImagickDraw::getFillColor                                           Returns the fill color
ImagickDraw::getFillOpacity                                         Returns the opacity used when drawing
ImagickDraw::getFillRule                                            Returns the fill rule
ImagickDraw::getFont                                                Returns the font
ImagickDraw::getFontFamily                                          Returns the font family
ImagickDraw::getFontSize                                            Returns the font pointsize
ImagickDraw::getFontStretch                                         Description
ImagickDraw::getFontStyle                                           Returns the font style
ImagickDraw::getFontWeight                                          Returns the font weight
ImagickDraw::getGravity                                             Returns the text placement gravity
ImagickDraw::getStrokeAntialias                                     Returns the current stroke antialias setting
ImagickDraw::getStrokeColor                                         Returns the color used for stroking object outlines
ImagickDraw::getStrokeDashArray                                     Returns an array representing the pattern of dashes and gaps used to stroke paths
ImagickDraw::getStrokeDashOffset                                    Returns the offset into the dash pattern to start the dash
ImagickDraw::getStrokeLineCap                                       Returns the shape to be used at the end of open subpaths when they are stroked
ImagickDraw::getStrokeLineJoin                                      Returns the shape to be used at the corners of paths when they are stroked
ImagickDraw::getStrokeMiterLimit                                    Returns the stroke miter limit
ImagickDraw::getStrokeOpacity                                       Returns the opacity of stroked object outlines
ImagickDraw::getStrokeWidth                                         Returns the width of the stroke used to draw object outlines
ImagickDraw::getTextAlignment                                       Returns the text alignment
ImagickDraw::getTextAntialias                                       Returns the current text antialias setting
ImagickDraw::getTextDecoration                                      Returns the text decoration
ImagickDraw::getTextEncoding                                        Returns the code set used for text annotations
ImagickDraw::getTextInterlineSpacing                                Description
ImagickDraw::getTextInterwordSpacing                                Description
ImagickDraw::getTextKerning                                         Description
ImagickDraw::getTextUnderColor                                      Returns the text under color
ImagickDraw::getVectorGraphics                                      Returns a string containing vector graphics
ImagickDraw::line                                                   Draws a line
ImagickDraw::matte                                                  Paints on the image's opacity channel
ImagickDraw::pathClose                                              Adds a path element to the current path
ImagickDraw::pathCurveToAbsolute                                    Draws a cubic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierAbsolute                     Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierRelative                     Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute               Draws a quadratic Bezier curve
ImagickDraw::pathCurveToQuadraticBezierSmoothRelative               Draws a quadratic Bezier curve
ImagickDraw::pathCurveToRelative                                    Draws a cubic Bezier curve
ImagickDraw::pathCurveToSmoothAbsolute                              Draws a cubic Bezier curve
ImagickDraw::pathCurveToSmoothRelative                              Draws a cubic Bezier curve
ImagickDraw::pathEllipticArcAbsolute                                Draws an elliptical arc
ImagickDraw::pathEllipticArcRelative                                Draws an elliptical arc
ImagickDraw::pathFinish                                             Terminates the current path
ImagickDraw::pathLineToAbsolute                                     Draws a line path
ImagickDraw::pathLineToHorizontalAbsolute                           Draws a horizontal line path
ImagickDraw::pathLineToHorizontalRelative                           Draws a horizontal line
ImagickDraw::pathLineToRelative                                     Draws a line path
ImagickDraw::pathLineToVerticalAbsolute                             Draws a vertical line
ImagickDraw::pathLineToVerticalRelative                             Draws a vertical line path
ImagickDraw::pathMoveToAbsolute                                     Starts a new sub-path
ImagickDraw::pathMoveToRelative                                     Starts a new sub-path
ImagickDraw::pathStart                                              Declares the start of a path drawing list
ImagickDraw::point                                                  Draws a point
ImagickDraw::polygon                                                Draws a polygon
ImagickDraw::polyline                                               Draws a polyline
ImagickDraw::pop                                                    Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw
ImagickDraw::popClipPath                                            Terminates a clip path definition
ImagickDraw::popDefs                                                Terminates a definition list
ImagickDraw::popPattern                                             Terminates a pattern definition
ImagickDraw::push                                                   Clones the current ImagickDraw and pushes it to the stack
ImagickDraw::pushClipPath                                           Starts a clip path definition
ImagickDraw::pushDefs                                               Indicates that following commands create named elements for early processing
ImagickDraw::pushPattern                                            Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern
ImagickDraw::rectangle                                              Draws a rectangle
ImagickDraw::render                                                 Renders all preceding drawing commands onto the image
ImagickDraw::resetVectorGraphics                                    Description
ImagickDraw::rotate                                                 Applies the specified rotation to the current coordinate space
ImagickDraw::roundRectangle                                         Draws a rounded rectangle
ImagickDraw::scale                                                  Adjusts the scaling factor
ImagickDraw::setClipPath                                            Associates a named clipping path with the image
ImagickDraw::setClipRule                                            Set the polygon fill rule to be used by the clipping path
ImagickDraw::setClipUnits                                           Sets the interpretation of clip path units
ImagickDraw::setFillAlpha                                           Sets the opacity to use when drawing using the fill color or fill texture
ImagickDraw::setFillColor                                           Sets the fill color to be used for drawing filled objects
ImagickDraw::setFillOpacity                                         Sets the opacity to use when drawing using the fill color or fill texture
ImagickDraw::setFillPatternURL                                      Sets the URL to use as a fill pattern for filling objects
ImagickDraw::setFillRule                                            Sets the fill rule to use while drawing polygons
ImagickDraw::setFont                                                Sets the fully-specified font to use when annotating with text
ImagickDraw::setFontFamily                                          Sets the font family to use when annotating with text
ImagickDraw::setFontSize                                            Sets the font pointsize to use when annotating with text
ImagickDraw::setFontStretch                                         Sets the font stretch to use when annotating with text
ImagickDraw::setFontStyle                                           Sets the font style to use when annotating with text
ImagickDraw::setFontWeight                                          Sets the font weight
ImagickDraw::setGravity                                             Sets the text placement gravity
ImagickDraw::setResolution                                          Description
ImagickDraw::setStrokeAlpha                                         Specifies the opacity of stroked object outlines
ImagickDraw::setStrokeAntialias                                     Controls whether stroked outlines are antialiased
ImagickDraw::setStrokeColor                                         Sets the color used for stroking object outlines
ImagickDraw::setStrokeDashArray                                     Specifies the pattern of dashes and gaps used to stroke paths
ImagickDraw::setStrokeDashOffset                                    Specifies the offset into the dash pattern to start the dash
ImagickDraw::setStrokeLineCap                                       Specifies the shape to be used at the end of open subpaths when they are stroked
ImagickDraw::setStrokeLineJoin                                      Specifies the shape to be used at the corners of paths when they are stroked
ImagickDraw::setStrokeMiterLimit                                    Specifies the miter limit
ImagickDraw::setStrokeOpacity                                       Specifies the opacity of stroked object outlines
ImagickDraw::setStrokePatternURL                                    Sets the pattern used for stroking object outlines
ImagickDraw::setStrokeWidth                                         Sets the width of the stroke used to draw object outlines
ImagickDraw::setTextAlignment                                       Specifies a text alignment
ImagickDraw::setTextAntialias                                       Controls whether text is antialiased
ImagickDraw::setTextDecoration                                      Specifies a decoration
ImagickDraw::setTextEncoding                                        Specifies the text code set
ImagickDraw::setTextInterlineSpacing                                Description
ImagickDraw::setTextInterwordSpacing                                Description
ImagickDraw::setTextKerning                                         Description
ImagickDraw::setTextUnderColor                                      Specifies the color of a background rectangle
ImagickDraw::setVectorGraphics                                      Sets the vector graphics
ImagickDraw::setViewbox                                             Sets the overall canvas size
ImagickDraw::skewX                                                  Skews the current coordinate system in the horizontal direction
ImagickDraw::skewY                                                  Skews the current coordinate system in the vertical direction
ImagickDraw::translate                                              Applies a translation to the current coordinate system
ImagickDraw::__construct                                            The ImagickDraw constructor
ImagickKernel::addKernel                                            Description
ImagickKernel::addUnityKernel                                       Description
ImagickKernel::fromBuiltIn                                          Description
ImagickKernel::fromMatrix                                           Description
ImagickKernel::getMatrix                                            Description
ImagickKernel::scale                                                Description
ImagickKernel::separate                                             Description
ImagickPixel::clear                                                 Clears resources associated with this object
ImagickPixel::destroy                                               Deallocates resources associated with this object
ImagickPixel::getColor                                              Returns the color
ImagickPixel::getColorAsString                                      Returns the color as a string
ImagickPixel::getColorCount                                         Returns the color count associated with this color
ImagickPixel::getColorQuantum                                       Description
ImagickPixel::getColorValue                                         Gets the normalized value of the provided color channel
ImagickPixel::getColorValueQuantum                                  Description
ImagickPixel::getHSL                                                Returns the normalized HSL color of the ImagickPixel object
ImagickPixel::getIndex                                              Description
ImagickPixel::isPixelSimilar                                        Check the distance between this color and another
ImagickPixel::isPixelSimilarQuantum                                 Description
ImagickPixel::isSimilar                                             Check the distance between this color and another
ImagickPixel::setColor                                              Sets the color
ImagickPixel::setColorCount                                         Description
ImagickPixel::setColorValue                                         Sets the normalized value of one of the channels
ImagickPixel::setColorValueQuantum                                  Description
ImagickPixel::setHSL                                                Sets the normalized HSL color
ImagickPixel::setIndex                                              Description
ImagickPixel::__construct                                           The ImagickPixel constructor
ImagickPixelIterator::clear                                         Clear resources associated with a PixelIterator
ImagickPixelIterator::destroy                                       Deallocates resources associated with a PixelIterator
ImagickPixelIterator::getCurrentIteratorRow                         Returns the current row of ImagickPixel objects
ImagickPixelIterator::getIteratorRow                                Returns the current pixel iterator row
ImagickPixelIterator::getNextIteratorRow                            Returns the next row of the pixel iterator
ImagickPixelIterator::getPreviousIteratorRow                        Returns the previous row
ImagickPixelIterator::newPixelIterator                              Returns a new pixel iterator
ImagickPixelIterator::newPixelRegionIterator                        Returns a new pixel iterator
ImagickPixelIterator::resetIterator                                 Resets the pixel iterator
ImagickPixelIterator::setIteratorFirstRow                           Sets the pixel iterator to the first pixel row
ImagickPixelIterator::setIteratorLastRow                            Sets the pixel iterator to the last pixel row
ImagickPixelIterator::setIteratorRow                                Set the pixel iterator row
ImagickPixelIterator::syncIterator                                  Syncs the pixel iterator
ImagickPixelIterator::__construct                                   The ImagickPixelIterator constructor
imap_8bit                                                           Convert an 8bit string to a quoted-printable string
imap_alerts                                                         Returns all IMAP alert messages that have occurred
imap_append                                                         Append a string message to a specified mailbox
imap_base64                                                         Decode BASE64 encoded text
imap_binary                                                         Convert an 8bit string to a base64 string
imap_body                                                           Read the message body
imap_bodystruct                                                     Read the structure of a specified body section of a specific message
imap_check                                                          Check current mailbox
imap_clearflag_full                                                 Clears flags on messages
imap_close                                                          Close an IMAP stream
imap_create                                                         Alias of imap_createmailbox
imap_createmailbox                                                  Create a new mailbox
imap_delete                                                         Mark a message for deletion from current mailbox
imap_deletemailbox                                                  Delete a mailbox
imap_errors                                                         Returns all of the IMAP errors that have occurred
imap_expunge                                                        Delete all messages marked for deletion
imap_fetchbody                                                      Fetch a particular section of the body of the message
imap_fetchheader                                                    Returns header for a message
imap_fetchmime                                                      Fetch MIME headers for a particular section of the message
imap_fetchstructure                                                 Read the structure of a particular message
imap_fetchtext                                                      Alias of imap_body
imap_fetch_overview                                                 Read an overview of the information in the headers of the given message
imap_gc                                                             Clears IMAP cache
imap_getacl                                                         Gets the ACL for a given mailbox
imap_getmailboxes                                                   Read the list of mailboxes, returning detailed information on each one
imap_getsubscribed                                                  List all the subscribed mailboxes
imap_get_quota                                                      Retrieve the quota level settings, and usage statics per mailbox
imap_get_quotaroot                                                  Retrieve the quota settings per user
imap_header                                                         Alias of imap_headerinfo
imap_headerinfo                                                     Read the header of the message
imap_headers                                                        Returns headers for all messages in a mailbox
imap_last_error                                                     Gets the last IMAP error that occurred during this page request
imap_list                                                           Read the list of mailboxes
imap_listmailbox                                                    Alias of imap_list
imap_listscan                                                       Returns the list of mailboxes that matches the given text
imap_listsubscribed                                                 Alias of imap_lsub
imap_lsub                                                           List all the subscribed mailboxes
imap_mail                                                           Send an email message
imap_mailboxmsginfo                                                 Get information about the current mailbox
imap_mail_compose                                                   Create a MIME message based on given envelope and body sections
imap_mail_copy                                                      Copy specified messages to a mailbox
imap_mail_move                                                      Move specified messages to a mailbox
imap_mime_header_decode                                             Decode MIME header elements
imap_msgno                                                          Gets the message sequence number for the given UID
imap_mutf7_to_utf8                                                  Decode a modified UTF-7 string to UTF-8
imap_num_msg                                                        Gets the number of messages in the current mailbox
imap_num_recent                                                     Gets the number of recent messages in current mailbox
imap_open                                                           Open an IMAP stream to a mailbox
imap_ping                                                           Check if the IMAP stream is still active
imap_qprint                                                         Convert a quoted-printable string to an 8 bit string
imap_rename                                                         Alias of imap_renamemailbox
imap_renamemailbox                                                  Rename an old mailbox to new mailbox
imap_reopen                                                         Reopen IMAP stream to new mailbox
imap_rfc822_parse_adrlist                                           Parses an address string
imap_rfc822_parse_headers                                           Parse mail headers from a string
imap_rfc822_write_address                                           Returns a properly formatted email address given the mailbox, host, and personal info
imap_savebody                                                       Save a specific body section to a file
imap_scan                                                           Alias of imap_listscan
imap_scanmailbox                                                    Alias of imap_listscan
imap_search                                                         This function returns an array of messages matching the given search criteria
imap_setacl                                                         Sets the ACL for a given mailbox
imap_setflag_full                                                   Sets flags on messages
imap_set_quota                                                      Sets a quota for a given mailbox
imap_sort                                                           Gets and sort messages
imap_status                                                         Returns status information on a mailbox
imap_subscribe                                                      Subscribe to a mailbox
imap_thread                                                         Returns a tree of threaded message
imap_timeout                                                        Set or fetch imap timeout
imap_uid                                                            This function returns the UID for the given message sequence number
imap_undelete                                                       Unmark the message which is marked deleted
imap_unsubscribe                                                    Unsubscribe from a mailbox
imap_utf7_decode                                                    Decodes a modified UTF-7 encoded string
imap_utf7_encode                                                    Converts ISO-8859-1 string to modified UTF-7 text
imap_utf8                                                           Converts MIME-encoded text to UTF-8
imap_utf8_to_mutf7                                                  Encode a UTF-8 string to modified UTF-7
InfiniteIterator::next                                              Moves the inner Iterator forward or rewinds it
InfiniteIterator::__construct                                       Constructs an InfiniteIterator
ingres_autocommit                                                   Switch autocommit on or off
ingres_autocommit_state                                             Test if the connection is using autocommit
ingres_charset                                                      Returns the installation character set
ingres_close                                                        Close an Ingres database connection
ingres_commit                                                       Commit a transaction
ingres_connect                                                      Open a connection to an Ingres database
ingres_cursor                                                       Get a cursor name for a given result resource
ingres_errno                                                        Get the last Ingres error number generated
ingres_error                                                        Get a meaningful error message for the last error generated
ingres_errsqlstate                                                  Get the last SQLSTATE error code generated
ingres_escape_string                                                Escape special characters for use in a query
ingres_execute                                                      Execute a prepared query
ingres_fetch_array                                                  Fetch a row of result into an array
ingres_fetch_assoc                                                  Fetch a row of result into an associative array
ingres_fetch_object                                                 Fetch a row of result into an object
ingres_fetch_proc_return                                            Get the return value from a procedure call
ingres_fetch_row                                                    Fetch a row of result into an enumerated array
ingres_field_length                                                 Get the length of a field
ingres_field_name                                                   Get the name of a field in a query result
ingres_field_nullable                                               Test if a field is nullable
ingres_field_precision                                              Get the precision of a field
ingres_field_scale                                                  Get the scale of a field
ingres_field_type                                                   Get the type of a field in a query result
ingres_free_result                                                  Free the resources associated with a result identifier
ingres_next_error                                                   Get the next Ingres error
ingres_num_fields                                                   Get the number of fields returned by the last query
ingres_num_rows                                                     Get the number of rows affected or returned by a query
ingres_pconnect                                                     Open a persistent connection to an Ingres database
ingres_prepare                                                      Prepare a query for later execution
ingres_query                                                        Send an SQL query to Ingres
ingres_result_seek                                                  Set the row position before fetching data
ingres_rollback                                                     Roll back a transaction
ingres_set_environment                                              Set environment features controlling output options
ingres_unbuffered_query                                             Send an unbuffered SQL query to Ingres
inotify_add_watch                                                   Add a watch to an initialized inotify instance
inotify_init                                                        Initialize an inotify instance
inotify_queue_len                                                   Return a number upper than zero if there are pending events
inotify_read                                                        Read events from an inotify instance
inotify_rm_watch                                                    Remove an existing watch from an inotify instance
IntlBreakIterator::createCharacterInstance                          Create break iterator for boundaries of combining character sequences
IntlBreakIterator::createCodePointInstance                          Create break iterator for boundaries of code points
IntlBreakIterator::createLineInstance                               Create break iterator for logically possible line breaks
IntlBreakIterator::createSentenceInstance                           Create break iterator for sentence breaks
IntlBreakIterator::createTitleInstance                              Create break iterator for title-casing breaks
IntlBreakIterator::createWordInstance                               Create break iterator for word breaks
IntlBreakIterator::current                                          Get index of current position
IntlBreakIterator::first                                            Set position to the first character in the text
IntlBreakIterator::following                                        Advance the iterator to the first boundary following specified offset
IntlBreakIterator::getErrorCode                                     Get last error code on the object
IntlBreakIterator::getErrorMessage                                  Get last error message on the object
IntlBreakIterator::getLocale                                        Get the locale associated with the object
IntlBreakIterator::getPartsIterator                                 Create iterator for navigating fragments between boundaries
IntlBreakIterator::getText                                          Get the text being scanned
IntlBreakIterator::isBoundary                                       Tell whether an offset is a boundaryʼs offset
IntlBreakIterator::last                                             Set the iterator position to index beyond the last character
IntlBreakIterator::next                                             Advance the iterator the next boundary
IntlBreakIterator::preceding                                        Set the iterator position to the first boundary before an offset
IntlBreakIterator::previous                                         Set the iterator position to the boundary immediately before the current
IntlBreakIterator::setText                                          Set the text being scanned
IntlBreakIterator::__construct                                      Private constructor for disallowing instantiation
IntlCalendar::add                                                   Add a (signed) amount of time to a field
IntlCalendar::after                                                 Whether this objectʼs time is after that of the passed object
IntlCalendar::before                                                Whether this objectʼs time is before that of the passed object
IntlCalendar::clear                                                 Clear a field or all fields
IntlCalendar::createInstance                                        Create a new IntlCalendar
IntlCalendar::equals                                                Compare time of two IntlCalendar objects for equality
IntlCalendar::fieldDifference                                       Calculate difference between given time and this objectʼs time
IntlCalendar::fromDateTime                                          Create an IntlCalendar from a DateTime object or string
IntlCalendar::get                                                   Get the value for a field
IntlCalendar::getActualMaximum                                      The maximum value for a field, considering the objectʼs current time
IntlCalendar::getActualMinimum                                      The minimum value for a field, considering the objectʼs current time
IntlCalendar::getAvailableLocales                                   Get array of locales for which there is data
IntlCalendar::getDayOfWeekType                                      Tell whether a day is a weekday, weekend or a day that has a transition between the two
IntlCalendar::getErrorCode                                          Get last error code on the object
IntlCalendar::getErrorMessage                                       Get last error message on the object
IntlCalendar::getFirstDayOfWeek                                     Get the first day of the week for the calendarʼs locale
IntlCalendar::getGreatestMinimum                                    Get the largest local minimum value for a field
IntlCalendar::getKeywordValuesForLocale                             Get set of locale keyword values
IntlCalendar::getLeastMaximum                                       Get the smallest local maximum for a field
IntlCalendar::getLocale                                             Get the locale associated with the object
IntlCalendar::getMaximum                                            Get the global maximum value for a field
IntlCalendar::getMinimalDaysInFirstWeek                             Get minimal number of days the first week in a year or month can have
IntlCalendar::getMinimum                                            Get the global minimum value for a field
IntlCalendar::getNow                                                Get number representing the current time
IntlCalendar::getRepeatedWallTimeOption                             Get behavior for handling repeating wall time
IntlCalendar::getSkippedWallTimeOption                              Get behavior for handling skipped wall time
IntlCalendar::getTime                                               Get time currently represented by the object
IntlCalendar::getTimeZone                                           Get the objectʼs timezone
IntlCalendar::getType                                               Get the calendar type
IntlCalendar::getWeekendTransition                                  Get time of the day at which weekend begins or ends
IntlCalendar::inDaylightTime                                        Whether the objectʼs time is in Daylight Savings Time
IntlCalendar::isEquivalentTo                                        Whether another calendar is equal but for a different time
IntlCalendar::isLenient                                             Whether date/time interpretation is in lenient mode
IntlCalendar::isSet                                                 Whether a field is set
IntlCalendar::isWeekend                                             Whether a certain date/time is in the weekend
IntlCalendar::roll                                                  Add value to field without carrying into more significant fields
IntlCalendar::set                                                   Set a time field or several common fields at once
IntlCalendar::setFirstDayOfWeek                                     Set the day on which the week is deemed to start
IntlCalendar::setLenient                                            Set whether date/time interpretation is to be lenient
IntlCalendar::setMinimalDaysInFirstWeek                             Set minimal number of days the first week in a year or month can have
IntlCalendar::setRepeatedWallTimeOption                             Set behavior for handling repeating wall times at negative timezone offset transitions
IntlCalendar::setSkippedWallTimeOption                              Set behavior for handling skipped wall times at positive timezone offset transitions
IntlCalendar::setTime                                               Set the calendar time in milliseconds since the epoch
IntlCalendar::setTimeZone                                           Set the timezone used by this calendar
IntlCalendar::toDateTime                                            Convert an IntlCalendar into a DateTime object
IntlCalendar::__construct                                           Private constructor for disallowing instantiation
IntlChar::charAge                                                   Get the "age" of the code point
IntlChar::charDigitValue                                            Get the decimal digit value of a decimal digit character
IntlChar::charDirection                                             Get bidirectional category value for a code point
IntlChar::charFromName                                              Find Unicode character by name and return its code point value
IntlChar::charMirror                                                Get the "mirror-image" character for a code point
IntlChar::charName                                                  Retrieve the name of a Unicode character
IntlChar::charType                                                  Get the general category value for a code point
IntlChar::chr                                                       Return Unicode character by code point value
IntlChar::digit                                                     Get the decimal digit value of a code point for a given radix
IntlChar::enumCharNames                                             Enumerate all assigned Unicode characters within a range
IntlChar::enumCharTypes                                             Enumerate all code points with their Unicode general categories
IntlChar::foldCase                                                  Perform case folding on a code point
IntlChar::forDigit                                                  Get character representation for a given digit and radix
IntlChar::getBidiPairedBracket                                      Get the paired bracket character for a code point
IntlChar::getBlockCode                                              Get the Unicode allocation block containing a code point
IntlChar::getCombiningClass                                         Get the combining class of a code point
IntlChar::getFC_NFKC_Closure                                        Get the FC_NFKC_Closure property for a code point
IntlChar::getIntPropertyMaxValue                                    Get the max value for a Unicode property
IntlChar::getIntPropertyMinValue                                    Get the min value for a Unicode property
IntlChar::getIntPropertyValue                                       Get the value for a Unicode property for a code point
IntlChar::getNumericValue                                           Get the numeric value for a Unicode code point
IntlChar::getPropertyEnum                                           Get the property constant value for a given property name
IntlChar::getPropertyName                                           Get the Unicode name for a property
IntlChar::getPropertyValueEnum                                      Get the property value for a given value name
IntlChar::getPropertyValueName                                      Get the Unicode name for a property value
IntlChar::getUnicodeVersion                                         Get the Unicode version
IntlChar::hasBinaryProperty                                         Check a binary Unicode property for a code point
IntlChar::isalnum                                                   Check if code point is an alphanumeric character
IntlChar::isalpha                                                   Check if code point is a letter character
IntlChar::isbase                                                    Check if code point is a base character
IntlChar::isblank                                                   Check if code point is a "blank" or "horizontal space" character
IntlChar::iscntrl                                                   Check if code point is a control character
IntlChar::isdefined                                                 Check whether the code point is defined
IntlChar::isdigit                                                   Check if code point is a digit character
IntlChar::isgraph                                                   Check if code point is a graphic character
IntlChar::isIDIgnorable                                             Check if code point is an ignorable character
IntlChar::isIDPart                                                  Check if code point is permissible in an identifier
IntlChar::isIDStart                                                 Check if code point is permissible as the first character in an identifier
IntlChar::isISOControl                                              Check if code point is an ISO control code
IntlChar::isJavaIDPart                                              Check if code point is permissible in a Java identifier
IntlChar::isJavaIDStart                                             Check if code point is permissible as the first character in a Java identifier
IntlChar::isJavaSpaceChar                                           Check if code point is a space character according to Java
IntlChar::islower                                                   Check if code point is a lowercase letter
IntlChar::isMirrored                                                Check if code point has the Bidi_Mirrored property
IntlChar::isprint                                                   Check if code point is a printable character
IntlChar::ispunct                                                   Check if code point is punctuation character
IntlChar::isspace                                                   Check if code point is a space character
IntlChar::istitle                                                   Check if code point is a titlecase letter
IntlChar::isUAlphabetic                                             Check if code point has the Alphabetic Unicode property
IntlChar::isULowercase                                              Check if code point has the Lowercase Unicode property
IntlChar::isupper                                                   Check if code point has the general category "Lu" (uppercase letter)
IntlChar::isUUppercase                                              Check if code point has the Uppercase Unicode property
IntlChar::isUWhiteSpace                                             Check if code point has the White_Space Unicode property
IntlChar::isWhitespace                                              Check if code point is a whitespace character according to ICU
IntlChar::isxdigit                                                  Check if code point is a hexadecimal digit
IntlChar::ord                                                       Return Unicode code point value of character
IntlChar::tolower                                                   Make Unicode character lowercase
IntlChar::totitle                                                   Make Unicode character titlecase
IntlChar::toupper                                                   Make Unicode character uppercase
IntlCodePointBreakIterator::getLastCodePoint                        Get last code point passed over after advancing or receding the iterator
IntlDateFormatter::create                                           Create a date formatter
IntlDateFormatter::format                                           Format the date/time value as a string
IntlDateFormatter::formatObject                                     Formats an object
IntlDateFormatter::getCalendar                                      Get the calendar type used for the IntlDateFormatter
IntlDateFormatter::getCalendarObject                                Get copy of formatterʼs calendar object
IntlDateFormatter::getDateType                                      Get the datetype used for the IntlDateFormatter
IntlDateFormatter::getErrorCode                                     Get the error code from last operation
IntlDateFormatter::getErrorMessage                                  Get the error text from the last operation
IntlDateFormatter::getLocale                                        Get the locale used by formatter
IntlDateFormatter::getPattern                                       Get the pattern used for the IntlDateFormatter
IntlDateFormatter::getTimeType                                      Get the timetype used for the IntlDateFormatter
IntlDateFormatter::getTimeZone                                      Get formatterʼs timezone
IntlDateFormatter::getTimeZoneId                                    Get the timezone-id used for the IntlDateFormatter
IntlDateFormatter::isLenient                                        Get the lenient used for the IntlDateFormatter
IntlDateFormatter::localtime                                        Parse string to a field-based time value
IntlDateFormatter::parse                                            Parse string to a timestamp value
IntlDateFormatter::setCalendar                                      Sets the calendar type used by the formatter
IntlDateFormatter::setLenient                                       Set the leniency of the parser
IntlDateFormatter::setPattern                                       Set the pattern used for the IntlDateFormatter
IntlDateFormatter::setTimeZone                                      Sets formatterʼs timezone
IntlGregorianCalendar::getGregorianChange                           Get the Gregorian Calendar change date
IntlGregorianCalendar::isLeapYear                                   Determine if the given year is a leap year
IntlGregorianCalendar::setGregorianChange                           Set the Gregorian Calendar the change date
IntlGregorianCalendar::__construct                                  Create the Gregorian Calendar class
IntlIterator::current                                               Get the current element
IntlIterator::key                                                   Get the current key
IntlIterator::next                                                  Move forward to the next element
IntlIterator::rewind                                                Rewind the iterator to the first element
IntlIterator::valid                                                 Check if current position is valid
IntlPartsIterator::getBreakIterator                                 Get IntlBreakIterator backing this parts iterator
IntlRuleBasedBreakIterator::getBinaryRules                          Get the binary form of compiled rules
IntlRuleBasedBreakIterator::getRules                                Get the rule set used to create this object
IntlRuleBasedBreakIterator::getRuleStatus                           Get the largest status value from the break rules that determined the current break position
IntlRuleBasedBreakIterator::getRuleStatusVec                        Get the status values from the break rules that determined the current break position
IntlRuleBasedBreakIterator::__construct                             Create iterator from ruleset
IntlTimeZone::countEquivalentIDs                                    Get the number of IDs in the equivalency group that includes the given ID
IntlTimeZone::createDefault                                         Create a new copy of the default timezone for this host
IntlTimeZone::createEnumeration                                     Get an enumeration over time zone IDs associated with the given country or offset
IntlTimeZone::createTimeZone                                        Create a timezone object for the given ID
IntlTimeZone::createTimeZoneIDEnumeration                           Get an enumeration over system time zone IDs with the given filter conditions
IntlTimeZone::fromDateTimeZone                                      Create a timezone object from DateTimeZone
IntlTimeZone::getCanonicalID                                        Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID
IntlTimeZone::getDisplayName                                        Get a name of this time zone suitable for presentation to the user
IntlTimeZone::getDSTSavings                                         Get the amount of time to be added to local standard time to get local wall clock time
IntlTimeZone::getEquivalentID                                       Get an ID in the equivalency group that includes the given ID
IntlTimeZone::getErrorCode                                          Get last error code on the object
IntlTimeZone::getErrorMessage                                       Get last error message on the object
IntlTimeZone::getGMT                                                Create GMT (UTC) timezone
IntlTimeZone::getID                                                 Get timezone ID
IntlTimeZone::getIDForWindowsID                                     Translate a Windows timezone into a system timezone
IntlTimeZone::getOffset                                             Get the time zone raw and GMT offset for the given moment in time
IntlTimeZone::getRawOffset                                          Get the raw GMT offset (before taking daylight savings time into account
IntlTimeZone::getRegion                                             Get the region code associated with the given system time zone ID
IntlTimeZone::getTZDataVersion                                      Get the timezone data version currently used by ICU
IntlTimeZone::getUnknown                                            Get the "unknown" time zone
IntlTimeZone::getWindowsID                                          Translate a system timezone into a Windows timezone
IntlTimeZone::hasSameRules                                          Check if this zone has the same rules and offset as another zone
IntlTimeZone::toDateTimeZone                                        Convert to DateTimeZone object
IntlTimeZone::useDaylightTime                                       Check if this time zone uses daylight savings time
intl_error_name                                                     Get symbolic name for a given error code
intl_get_error_code                                                 Get the last error code
intl_get_error_message                                              Get description of the last error
intl_is_failure                                                     Check whether the given error code indicates failure
isset                                                               Determine if a variable is declared and is different than null
is_countable                                                        Verify that the contents of a variable is a countable value
is_soap_fault                                                       Checks if a SOAP call has failed
is_tainted                                                          Checks whether a string is tainted
Iterator::current                                                   Return the current element
Iterator::key                                                       Return the key of the current element
Iterator::next                                                      Move forward to next element
Iterator::rewind                                                    Rewind the Iterator to the first element
Iterator::valid                                                     Checks if current position is valid
IteratorAggregate::getIterator                                      Retrieve an external iterator
IteratorIterator::current                                           Get the current value
IteratorIterator::getInnerIterator                                  Get the inner iterator
IteratorIterator::key                                               Get the key of the current element
IteratorIterator::next                                              Forward to the next element
IteratorIterator::rewind                                            Rewind to the first element
IteratorIterator::valid                                             Checks if the iterator is valid
IteratorIterator::__construct                                       Create an iterator from anything that is traversable
jddayofweek                                                         Returns the day of the week
jdmonthname                                                         Returns a month name
jdtofrench                                                          Converts a Julian Day Count to the French Republican Calendar
jdtogregorian                                                       Converts Julian Day Count to Gregorian date
jdtojewish                                                          Converts a Julian day count to a Jewish calendar date
jdtojulian                                                          Converts a Julian Day Count to a Julian Calendar Date
jdtounix                                                            Convert Julian Day to Unix timestamp
jewishtojd                                                          Converts a date in the Jewish Calendar to Julian Day Count
jpeg2wbmp                                                           Convert JPEG image file to WBMP image file
JsonSerializable::jsonSerialize                                     Specify data which should be serialized to JSON
juliantojd                                                          Converts a Julian Calendar date to Julian Day Count
ldap_8859_to_t61                                                    Translate 8859 characters to t61 characters
ldap_add                                                            Add entries to LDAP directory
ldap_add_ext                                                        Add entries to LDAP directory
ldap_bind                                                           Bind to LDAP directory
ldap_bind_ext                                                       Bind to LDAP directory
ldap_close                                                          Alias of ldap_unbind
ldap_compare                                                        Compare value of attribute found in entry specified with DN
ldap_connect                                                        Connect to an LDAP server
ldap_control_paged_result                                           Send LDAP pagination control
ldap_control_paged_result_response                                  Retrieve the LDAP pagination cookie
ldap_count_entries                                                  Count the number of entries in a search
ldap_delete                                                         Delete an entry from a directory
ldap_delete_ext                                                     Delete an entry from a directory
ldap_dn2ufn                                                         Convert DN to User Friendly Naming format
ldap_err2str                                                        Convert LDAP error number into string error message
ldap_errno                                                          Return the LDAP error number of the last LDAP command
ldap_error                                                          Return the LDAP error message of the last LDAP command
ldap_escape                                                         Escape a string for use in an LDAP filter or DN
ldap_exop                                                           Performs an extended operation
ldap_exop_passwd                                                    PASSWD extended operation helper
ldap_exop_refresh                                                   Refresh extended operation helper
ldap_exop_whoami                                                    WHOAMI extended operation helper
ldap_explode_dn                                                     Splits DN into its component parts
ldap_first_attribute                                                Return first attribute
ldap_first_entry                                                    Return first result id
ldap_first_reference                                                Return first reference
ldap_free_result                                                    Free result memory
ldap_get_attributes                                                 Get attributes from a search result entry
ldap_get_dn                                                         Get the DN of a result entry
ldap_get_entries                                                    Get all result entries
ldap_get_option                                                     Get the current value for given option
ldap_get_values                                                     Get all values from a result entry
ldap_get_values_len                                                 Get all binary values from a result entry
ldap_list                                                           Single-level search
ldap_modify                                                         Alias of ldap_mod_replace
ldap_modify_batch                                                   Batch and execute modifications on an LDAP entry
ldap_mod_add                                                        Add attribute values to current attributes
ldap_mod_add_ext                                                    Add attribute values to current attributes
ldap_mod_del                                                        Delete attribute values from current attributes
ldap_mod_del_ext                                                    Delete attribute values from current attributes
ldap_mod_replace                                                    Replace attribute values with new ones
ldap_mod_replace_ext                                                Replace attribute values with new ones
ldap_next_attribute                                                 Get the next attribute in result
ldap_next_entry                                                     Get next result entry
ldap_next_reference                                                 Get next reference
ldap_parse_exop                                                     Parse result object from an LDAP extended operation
ldap_parse_reference                                                Extract information from reference entry
ldap_parse_result                                                   Extract information from result
ldap_read                                                           Read an entry
ldap_rename                                                         Modify the name of an entry
ldap_rename_ext                                                     Modify the name of an entry
ldap_sasl_bind                                                      Bind to LDAP directory using SASL
ldap_search                                                         Search LDAP tree
ldap_set_option                                                     Set the value of the given option
ldap_set_rebind_proc                                                Set a callback function to do re-binds on referral chasing
ldap_sort                                                           Sort LDAP result entries on the client side
ldap_start_tls                                                      Start TLS
ldap_t61_to_8859                                                    Translate t61 characters to 8859 characters
ldap_unbind                                                         Unbind from LDAP directory
LimitIterator::current                                              Get current element
LimitIterator::getInnerIterator                                     Get inner iterator
LimitIterator::getPosition                                          Return the current position
LimitIterator::key                                                  Get current key
LimitIterator::next                                                 Move the iterator forward
LimitIterator::rewind                                               Rewind the iterator to the specified starting offset
LimitIterator::seek                                                 Seek to the given position
LimitIterator::valid                                                Check whether the current element is valid
LimitIterator::__construct                                          Construct a LimitIterator
list                                                                Assign variables as if they were an array
Locale::acceptFromHttp                                              Tries to find out best available locale based on HTTP "Accept-Language" header
Locale::canonicalize                                                Canonicalize the locale string
Locale::composeLocale                                               Returns a correctly ordered and delimited locale ID
Locale::filterMatches                                               Checks if a language tag filter matches with locale
Locale::getAllVariants                                              Gets the variants for the input locale
Locale::getDefault                                                  Gets the default locale value from the INTL global 'default_locale'
Locale::getDisplayLanguage                                          Returns an appropriately localized display name for language of the inputlocale
Locale::getDisplayName                                              Returns an appropriately localized display name for the input locale
Locale::getDisplayRegion                                            Returns an appropriately localized display name for region of the input locale
Locale::getDisplayScript                                            Returns an appropriately localized display name for script of the input locale
Locale::getDisplayVariant                                           Returns an appropriately localized display name for variants of the input locale
Locale::getKeywords                                                 Gets the keywords for the input locale
Locale::getPrimaryLanguage                                          Gets the primary language for the input locale
Locale::getRegion                                                   Gets the region for the input locale
Locale::getScript                                                   Gets the script for the input locale
Locale::lookup                                                      Searches the language tag list for the best match to the language
Locale::parseLocale                                                 Returns a key-value array of locale ID subtag elements
Locale::setDefault                                                  Sets the default runtime locale
log_cmd_delete                                                      Callback When Deleting Documents
log_cmd_insert                                                      Callback When Inserting Documents
log_cmd_update                                                      Callback When Updating Documents
log_getmore                                                         Callback When Retrieving Next Cursor Batch
log_killcursor                                                      Callback When Executing KILLCURSOR operations
log_reply                                                           Callback When Reading the MongoDB reply
log_write_batch                                                     Callback When Writing Batches
Lua::assign                                                         Assign a PHP variable to Lua
Lua::call                                                           Call Lua functions
Lua::eval                                                           Evaluate a string as Lua code
Lua::getVersion                                                     The getversion purpose
Lua::include                                                        Parse a Lua script file
Lua::registerCallback                                               Register a PHP function to Lua
Lua::__construct                                                    Lua constructor
LuaClosure::__invoke                                                Invoke luaclosure
LuaSandbox::callFunction                                            Call a function in a Lua global variable
LuaSandbox::disableProfiler                                         Disable the profiler
LuaSandbox::enableProfiler                                          Enable the profiler.
LuaSandbox::getCPUUsage                                             Fetch the current CPU time usage of the Lua environment
LuaSandbox::getMemoryUsage                                          Fetch the current memory usage of the Lua environment
LuaSandbox::getPeakMemoryUsage                                      Fetch the peak memory usage of the Lua environment
LuaSandbox::getProfilerFunctionReport                               Fetch profiler data
LuaSandbox::getVersionInfo                                          Return the versions of LuaSandbox and Lua
LuaSandbox::loadBinary                                              Load a precompiled binary chunk into the Lua environment
LuaSandbox::loadString                                              Load Lua code into the Lua environment
LuaSandbox::pauseUsageTimer                                         Pause the CPU usage timer
LuaSandbox::registerLibrary                                         Register a set of PHP functions as a Lua library
LuaSandbox::setCPULimit                                             Set the CPU time limit for the Lua environment
LuaSandbox::setMemoryLimit                                          Set the memory limit for the Lua environment
LuaSandbox::unpauseUsageTimer                                       Unpause the timer paused by LuaSandbox::pauseUsageTimer
LuaSandbox::wrapPhpFunction                                         Wrap a PHP callable in a LuaSandboxFunction
LuaSandboxFunction::call                                            Call a Lua function
LuaSandboxFunction::dump                                            Dump the function as a binary blob
LuaSandboxFunction::__construct                                     Unused
lzf_compress                                                        LZF compression
lzf_decompress                                                      LZF decompression
lzf_optimized_for                                                   Determines what LZF extension was optimized for
mailparse_determine_best_xfer_encoding                              Gets the best way of encoding
mailparse_msg_create                                                Create a mime mail resource
mailparse_msg_extract_part                                          Extracts/decodes a message section
mailparse_msg_extract_part_file                                     Extracts/decodes a message section
mailparse_msg_extract_whole_part_file                               Extracts a message section including headers without decoding the transfer encoding
mailparse_msg_free                                                  Frees a MIME resource
mailparse_msg_get_part                                              Returns a handle on a given section in a mimemessage
mailparse_msg_get_part_data                                         Returns an associative array of info about the message
mailparse_msg_get_structure                                         Returns an array of mime section names in the supplied message
mailparse_msg_parse                                                 Incrementally parse data into buffer
mailparse_msg_parse_file                                            Parses a file
mailparse_rfc822_parse_addresses                                    Parse RFC 822 compliant addresses
mailparse_stream_encode                                             Streams data from source file pointer, apply encoding and write to destfp
mailparse_uudecode_all                                              Scans the data from fp and extract each embedded uuencoded file
main                                                                Dummy for main
mb_str_split                                                        Given a multibyte string, return an array of its characters
mcrypt_cbc                                                          Encrypts/decrypts data in CBC mode
mcrypt_cfb                                                          Encrypts/decrypts data in CFB mode
mcrypt_create_iv                                                    Creates an initialization vector (IV) from a random source
mcrypt_decrypt                                                      Decrypts crypttext with given parameters
mcrypt_ecb                                                          Deprecated: Encrypts/decrypts data in ECB mode
mcrypt_encrypt                                                      Encrypts plaintext with given parameters
mcrypt_enc_get_algorithms_name                                      Returns the name of the opened algorithm
mcrypt_enc_get_block_size                                           Returns the blocksize of the opened algorithm
mcrypt_enc_get_iv_size                                              Returns the size of the IV of the opened algorithm
mcrypt_enc_get_key_size                                             Returns the maximum supported keysize of the opened mode
mcrypt_enc_get_modes_name                                           Returns the name of the opened mode
mcrypt_enc_get_supported_key_sizes                                  Returns an array with the supported keysizes of the opened algorithm
mcrypt_enc_is_block_algorithm                                       Checks whether the algorithm of the opened mode is a block algorithm
mcrypt_enc_is_block_algorithm_mode                                  Checks whether the encryption of the opened mode works on blocks
mcrypt_enc_is_block_mode                                            Checks whether the opened mode outputs blocks
mcrypt_enc_self_test                                                Runs a self test on the opened module
mcrypt_generic                                                      This function encrypts data
mcrypt_generic_deinit                                               This function deinitializes an encryption module
mcrypt_generic_end                                                  This function terminates encryption
mcrypt_generic_init                                                 This function initializes all buffers needed for encryption
mcrypt_get_block_size                                               Gets the block size of the specified cipher
mcrypt_get_cipher_name                                              Gets the name of the specified cipher
mcrypt_get_iv_size                                                  Returns the size of the IV belonging to a specific cipher/mode combination
mcrypt_get_key_size                                                 Gets the key size of the specified cipher
mcrypt_list_algorithms                                              Gets an array of all supported ciphers
mcrypt_list_modes                                                   Gets an array of all supported modes
mcrypt_module_close                                                 Closes the mcrypt module
mcrypt_module_get_algo_block_size                                   Returns the blocksize of the specified algorithm
mcrypt_module_get_algo_key_size                                     Returns the maximum supported keysize of the opened mode
mcrypt_module_get_supported_key_sizes                               Returns an array with the supported keysizes of the opened algorithm
mcrypt_module_is_block_algorithm                                    This function checks whether the specified algorithm is a block algorithm
mcrypt_module_is_block_algorithm_mode                               Returns if the specified module is a block algorithm or not
mcrypt_module_is_block_mode                                         Returns if the specified mode outputs blocks or not
mcrypt_module_open                                                  Opens the module of the algorithm and the mode to be used
mcrypt_module_self_test                                             This function runs a self test on the specified module
mcrypt_ofb                                                          Encrypts/decrypts data in OFB mode
mdecrypt_generic                                                    Decrypts data
Memcache::add                                                       Add an item to the server
Memcache::addServer                                                 Add a memcached server to connection pool
Memcache::close                                                     Close memcached server connection
Memcache::connect                                                   Open memcached server connection
Memcache::decrement                                                 Decrement item's value
Memcache::delete                                                    Delete item from the server
Memcache::flush                                                     Flush all existing items at the server
Memcache::get                                                       Retrieve item from the server
Memcache::getExtendedStats                                          Get statistics from all servers in pool
Memcache::getServerStatus                                           Returns server status
Memcache::getStats                                                  Get statistics of the server
Memcache::getVersion                                                Return version of the server
Memcache::increment                                                 Increment item's value
Memcache::pconnect                                                  Open memcached server persistent connection
Memcache::replace                                                   Replace value of the existing item
Memcache::set                                                       Store data at the server
Memcache::setCompressThreshold                                      Enable automatic compression of large values
Memcache::setServerParams                                           Changes server parameters and status at runtime
Memcached::add                                                      Add an item under a new key
Memcached::addByKey                                                 Add an item under a new key on a specific server
Memcached::addServer                                                Add a server to the server pool
Memcached::addServers                                               Add multiple servers to the server pool
Memcached::append                                                   Append data to an existing item
Memcached::appendByKey                                              Append data to an existing item on a specific server
Memcached::cas                                                      Compare and swap an item
Memcached::casByKey                                                 Compare and swap an item on a specific server
Memcached::decrement                                                Decrement numeric item's value
Memcached::decrementByKey                                           Decrement numeric item's value, stored on a specific server
Memcached::delete                                                   Delete an item
Memcached::deleteByKey                                              Delete an item from a specific server
Memcached::deleteMulti                                              Delete multiple items
Memcached::deleteMultiByKey                                         Delete multiple items from a specific server
Memcached::fetch                                                    Fetch the next result
Memcached::fetchAll                                                 Fetch all the remaining results
Memcached::flush                                                    Invalidate all items in the cache
Memcached::get                                                      Retrieve an item
Memcached::getAllKeys                                               Gets the keys stored on all the servers
Memcached::getByKey                                                 Retrieve an item from a specific server
Memcached::getDelayed                                               Request multiple items
Memcached::getDelayedByKey                                          Request multiple items from a specific server
Memcached::getMulti                                                 Retrieve multiple items
Memcached::getMultiByKey                                            Retrieve multiple items from a specific server
Memcached::getOption                                                Retrieve a Memcached option value
Memcached::getResultCode                                            Return the result code of the last operation
Memcached::getResultMessage                                         Return the message describing the result of the last operation
Memcached::getServerByKey                                           Map a key to a server
Memcached::getServerList                                            Get the list of the servers in the pool
Memcached::getStats                                                 Get server pool statistics
Memcached::getVersion                                               Get server pool version info
Memcached::increment                                                Increment numeric item's value
Memcached::incrementByKey                                           Increment numeric item's value, stored on a specific server
Memcached::isPersistent                                             Check if a persitent connection to memcache is being used
Memcached::isPristine                                               Check if the instance was recently created
Memcached::prepend                                                  Prepend data to an existing item
Memcached::prependByKey                                             Prepend data to an existing item on a specific server
Memcached::quit                                                     Close any open connections
Memcached::replace                                                  Replace the item under an existing key
Memcached::replaceByKey                                             Replace the item under an existing key on a specific server
Memcached::resetServerList                                          Clears all servers from the server list
Memcached::set                                                      Store an item
Memcached::setByKey                                                 Store an item on a specific server
Memcached::setMulti                                                 Store multiple items
Memcached::setMultiByKey                                            Store multiple items on a specific server
Memcached::setOption                                                Set a Memcached option
Memcached::setOptions                                               Set Memcached options
Memcached::setSaslAuthData                                          Set the credentials to use for authentication
Memcached::touch                                                    Set a new expiration on an item
Memcached::touchByKey                                               Set a new expiration on an item on a specific server
Memcached::__construct                                              Create a Memcached instance
memcache_debug                                                      Turn debug output on/off
MessageFormatter::create                                            Constructs a new Message Formatter
MessageFormatter::format                                            Format the message
MessageFormatter::formatMessage                                     Quick format message
MessageFormatter::getErrorCode                                      Get the error code from last operation
MessageFormatter::getErrorMessage                                   Get the error text from the last operation
MessageFormatter::getLocale                                         Get the locale for which the formatter was created
MessageFormatter::getPattern                                        Get the pattern used by the formatter
MessageFormatter::parse                                             Parse input string according to pattern
MessageFormatter::parseMessage                                      Quick parse input string
MessageFormatter::setPattern                                        Set the pattern used by the formatter
Mongo::connectUtil                                                  Connects with a database server
Mongo::getPoolSize                                                  Get pool size for connection pools
Mongo::getSlave                                                     Returns the address being used by this for slaveOkay reads
Mongo::getSlaveOkay                                                 Get slaveOkay setting for this connection
Mongo::poolDebug                                                    Returns information about all connection pools
Mongo::setPoolSize                                                  Set the size for future connection pools
Mongo::setSlaveOkay                                                 Change slaveOkay setting for this connection
Mongo::switchSlave                                                  Choose a new secondary for slaveOkay reads
Mongo::__construct                                                  The __construct purpose
MongoBinData::__construct                                           Creates a new binary data object
MongoBinData::__toString                                            The string representation of this binary data object
MongoClient::close                                                  Closes this connection
MongoClient::connect                                                Connects to a database server
MongoClient::dropDB                                                 Drops a database [deprecated]
MongoClient::getConnections                                         Return info about all open connections
MongoClient::getHosts                                               Updates status for all associated hosts
MongoClient::getReadPreference                                      Get the read preference for this connection
MongoClient::getWriteConcern                                        Get the write concern for this connection
MongoClient::killCursor                                             Kills a specific cursor on the server
MongoClient::listDBs                                                Lists all of the databases available
MongoClient::selectCollection                                       Gets a database collection
MongoClient::selectDB                                               Gets a database
MongoClient::setReadPreference                                      Set the read preference for this connection
MongoClient::setWriteConcern                                        Set the write concern for this connection
MongoClient::__construct                                            Creates a new database connection object
MongoClient::__get                                                  Gets a database
MongoClient::__toString                                             String representation of this connection
MongoCode::__construct                                              Creates a new code object
MongoCode::__toString                                               Returns this code as a string
MongoCollection::aggregate                                          Perform an aggregation using the aggregation framework
MongoCollection::aggregateCursor                                    Execute an aggregation pipeline command and retrieve results through a cursor
MongoCollection::batchInsert                                        Inserts multiple documents into this collection
MongoCollection::count                                              Counts the number of documents in this collection
MongoCollection::createDBRef                                        Creates a database reference
MongoCollection::createIndex                                        Creates an index on the specified field(s) if it does not already exist
MongoCollection::deleteIndex                                        Deletes an index from this collection
MongoCollection::deleteIndexes                                      Delete all indices for this collection
MongoCollection::distinct                                           Retrieve a list of distinct values for the given key across a collection
MongoCollection::drop                                               Drops this collection
MongoCollection::ensureIndex                                        Creates an index on the specified field(s) if it does not already exist
MongoCollection::find                                               Queries this collection, returning a MongoCursor for the result set
MongoCollection::findAndModify                                      Update a document and return it
MongoCollection::findOne                                            Queries this collection, returning a single element
MongoCollection::getDBRef                                           Fetches the document pointed to by a database reference
MongoCollection::getIndexInfo                                       Returns information about indexes on this collection
MongoCollection::getName                                            Returns this collection's name
MongoCollection::getReadPreference                                  Get the read preference for this collection
MongoCollection::getSlaveOkay                                       Get slaveOkay setting for this collection
MongoCollection::getWriteConcern                                    Get the write concern for this collection
MongoCollection::group                                              Performs an operation similar to SQL's GROUP BY command
MongoCollection::insert                                             Inserts a document into the collection
MongoCollection::parallelCollectionScan                             Returns an array of cursors to iterator over a full collection in parallel
MongoCollection::remove                                             Remove records from this collection
MongoCollection::save                                               Saves a document to this collection
MongoCollection::setReadPreference                                  Set the read preference for this collection
MongoCollection::setSlaveOkay                                       Change slaveOkay setting for this collection
MongoCollection::setWriteConcern                                    Set the write concern for this database
MongoCollection::toIndexString                                      Converts keys specifying an index to its identifying string
MongoCollection::update                                             Update records based on a given criteria
MongoCollection::validate                                           Validates this collection
MongoCollection::__construct                                        Creates a new collection
MongoCollection::__get                                              Gets a collection
MongoCollection::__toString                                         String representation of this collection
MongoCommandCursor::batchSize                                       Limits the number of elements returned in one batch
MongoCommandCursor::createFromDocument                              Create a new command cursor from an existing command response document
MongoCommandCursor::current                                         Returns the current element
MongoCommandCursor::dead                                            Checks if there are results that have not yet been sent from the database
MongoCommandCursor::getReadPreference                               Get the read preference for this command
MongoCommandCursor::info                                            Gets information about the cursor's creation and iteration
MongoCommandCursor::key                                             Returns the current result's index within the result set
MongoCommandCursor::next                                            Advances the cursor to the next result
MongoCommandCursor::rewind                                          Executes the command and resets the cursor to the start of the result set
MongoCommandCursor::setReadPreference                               Set the read preference for this command
MongoCommandCursor::timeout                                         Sets a client-side timeout for this command
MongoCommandCursor::valid                                           Checks if the cursor is reading a valid result
MongoCommandCursor::__construct                                     Create a new command cursor
MongoCursor::addOption                                              Adds a top-level key/value pair to a query
MongoCursor::awaitData                                              Sets whether this cursor will wait for a while for a tailable cursor to return more data
MongoCursor::batchSize                                              Limits the number of elements returned in one batch
MongoCursor::count                                                  Counts the number of results for this query
MongoCursor::current                                                Returns the current element
MongoCursor::dead                                                   Checks if there are results that have not yet been sent from the database
MongoCursor::doQuery                                                Execute the query
MongoCursor::explain                                                Return an explanation of the query, often useful for optimization and debugging
MongoCursor::fields                                                 Sets the fields for a query
MongoCursor::getNext                                                Advances the cursor to the next result, and returns that result
MongoCursor::getReadPreference                                      Get the read preference for this query
MongoCursor::hasNext                                                Checks if there are any more elements in this cursor
MongoCursor::hint                                                   Gives the database a hint about the query
MongoCursor::immortal                                               Sets whether this cursor will timeout
MongoCursor::info                                                   Gets information about the cursor's creation and iteration
MongoCursor::key                                                    Returns the current result's _id, or its index within the result set
MongoCursor::limit                                                  Limits the number of results returned
MongoCursor::maxTimeMS                                              Sets a server-side timeout for this query
MongoCursor::next                                                   Advances the cursor to the next result, and returns that result
MongoCursor::partial                                                If this query should fetch partial results from mongos if a shard is down
MongoCursor::reset                                                  Clears the cursor
MongoCursor::rewind                                                 Returns the cursor to the beginning of the result set
MongoCursor::setFlag                                                Sets arbitrary flags in case there is no method available the specific flag
MongoCursor::setReadPreference                                      Set the read preference for this query
MongoCursor::skip                                                   Skips a number of results
MongoCursor::slaveOkay                                              Sets whether this query can be done on a secondary [deprecated]
MongoCursor::snapshot                                               Use snapshot mode for the query
MongoCursor::sort                                                   Sorts the results by given fields
MongoCursor::tailable                                               Sets whether this cursor will be left open after fetching the last results
MongoCursor::timeout                                                Sets a client-side timeout for this query
MongoCursor::valid                                                  Checks if the cursor is reading a valid result
MongoCursor::__construct                                            Create a new cursor
MongoCursorException::getHost                                       The hostname of the server that encountered the error
MongoCursorInterface::batchSize                                     Limits the number of elements returned in one batch
MongoCursorInterface::dead                                          Checks if there are results that have not yet been sent from the database
MongoCursorInterface::getReadPreference                             Get the read preference for this query
MongoCursorInterface::info                                          Gets information about the cursor's creation and iteration
MongoCursorInterface::setReadPreference                             Set the read preference for this query
MongoCursorInterface::timeout                                       Sets a client-side timeout for this query
MongoDate::toDateTime                                               Returns a DateTime object representing this date
MongoDate::__construct                                              Creates a new date
MongoDate::__toString                                               Returns a string representation of this date
MongoDB::authenticate                                               Log in to this database
MongoDB::command                                                    Execute a database command
MongoDB::createCollection                                           Creates a collection
MongoDB::createDBRef                                                Creates a database reference
MongoDB::drop                                                       Drops this database
MongoDB::dropCollection                                             Drops a collection [deprecated]
MongoDB::execute                                                    Runs JavaScript code on the database server [deprecated]
MongoDB::forceError                                                 Creates a database error
MongoDB::getCollectionInfo                                          Returns information about collections in this database
MongoDB::getCollectionNames                                         Gets an array of names for all collections in this database
MongoDB::getDBRef                                                   Fetches the document pointed to by a database reference
MongoDB::getGridFS                                                  Fetches toolkit for dealing with files stored in this database
MongoDB::getProfilingLevel                                          Gets this database's profiling level
MongoDB::getReadPreference                                          Get the read preference for this database
MongoDB::getSlaveOkay                                               Get slaveOkay setting for this database
MongoDB::getWriteConcern                                            Get the write concern for this database
MongoDB::lastError                                                  Check if there was an error on the most recent db operation performed
MongoDB::listCollections                                            Gets an array of MongoCollection objects for all collections in this database
MongoDB::prevError                                                  Checks for the last error thrown during a database operation
MongoDB::repair                                                     Repairs and compacts this database
MongoDB::resetError                                                 Clears any flagged errors on the database
MongoDB::selectCollection                                           Gets a collection
MongoDB::setProfilingLevel                                          Sets this database's profiling level
MongoDB::setReadPreference                                          Set the read preference for this database
MongoDB::setSlaveOkay                                               Change slaveOkay setting for this database
MongoDB::setWriteConcern                                            Set the write concern for this database
MongoDB::__construct                                                Creates a new database
MongoDB::__get                                                      Gets a collection
MongoDB::__toString                                                 The name of this database
MongoDB context options                                             MongoDB context option listing
MongoDBRef::create                                                  Creates a new database reference
MongoDBRef::get                                                     Fetches the object pointed to by a reference
MongoDBRef::isRef                                                   Checks if an array is a database reference
MongoDB\BSON\Binary::getData                                        Returns the Binary's data
MongoDB\BSON\Binary::getType                                        Returns the Binary's type
MongoDB\BSON\Binary::jsonSerialize                                  Returns a representation that can be converted to JSON
MongoDB\BSON\Binary::serialize                                      Serialize a Binary
MongoDB\BSON\Binary::unserialize                                    Unserialize a Binary
MongoDB\BSON\Binary::__construct                                    Construct a new Binary
MongoDB\BSON\Binary::__toString                                     Returns the Binary's data
MongoDB\BSON\BinaryInterface::getData                               Returns the BinaryInterface's data
MongoDB\BSON\BinaryInterface::getType                               Returns the BinaryInterface's type
MongoDB\BSON\BinaryInterface::__toString                            Returns the BinaryInterface's data
MongoDB\BSON\DBPointer::jsonSerialize                               Returns a representation that can be converted to JSON
MongoDB\BSON\DBPointer::serialize                                   Serialize a DBPointer
MongoDB\BSON\DBPointer::unserialize                                 Unserialize a DBPointer
MongoDB\BSON\DBPointer::__construct                                 Construct a new DBPointer (unused)
MongoDB\BSON\DBPointer::__toString                                  Returns an empty string
MongoDB\BSON\Decimal128::jsonSerialize                              Returns a representation that can be converted to JSON
MongoDB\BSON\Decimal128::serialize                                  Serialize a Decimal128
MongoDB\BSON\Decimal128::unserialize                                Unserialize a Decimal128
MongoDB\BSON\Decimal128::__construct                                Construct a new Decimal128
MongoDB\BSON\Decimal128::__toString                                 Returns the string representation of this Decimal128
MongoDB\BSON\Decimal128Interface::__toString                        Returns the string representation of this Decimal128Interface
MongoDB\BSON\fromJSON                                               Returns the BSON representation of a JSON value
MongoDB\BSON\fromPHP                                                Returns the BSON representation of a PHP value
MongoDB\BSON\Int64::jsonSerialize                                   Returns a representation that can be converted to JSON
MongoDB\BSON\Int64::serialize                                       Serialize an Int64
MongoDB\BSON\Int64::unserialize                                     Unserialize an Int64
MongoDB\BSON\Int64::__construct                                     Construct a new Int64 (unused)
MongoDB\BSON\Int64::__toString                                      Returns the string representation of this Int64
MongoDB\BSON\Javascript::getCode                                    Returns the Javascript's code
MongoDB\BSON\Javascript::getScope                                   Returns the Javascript's scope document
MongoDB\BSON\Javascript::jsonSerialize                              Returns a representation that can be converted to JSON
MongoDB\BSON\Javascript::serialize                                  Serialize a Javascript
MongoDB\BSON\Javascript::unserialize                                Unserialize a Javascript
MongoDB\BSON\Javascript::__construct                                Construct a new Javascript
MongoDB\BSON\Javascript::__toString                                 Returns the Javascript's code
MongoDB\BSON\JavascriptInterface::getCode                           Returns the JavascriptInterface's code
MongoDB\BSON\JavascriptInterface::getScope                          Returns the JavascriptInterface's scope document
MongoDB\BSON\JavascriptInterface::__toString                        Returns the JavascriptInterface's code
MongoDB\BSON\MaxKey::jsonSerialize                                  Returns a representation that can be converted to JSON
MongoDB\BSON\MaxKey::serialize                                      Serialize a MaxKey
MongoDB\BSON\MaxKey::unserialize                                    Unserialize a MaxKey
MongoDB\BSON\MaxKey::__construct                                    Construct a new MaxKey
MongoDB\BSON\MinKey::jsonSerialize                                  Returns a representation that can be converted to JSON
MongoDB\BSON\MinKey::serialize                                      Serialize a MinKey
MongoDB\BSON\MinKey::unserialize                                    Unserialize a MinKey
MongoDB\BSON\MinKey::__construct                                    Construct a new MinKey
MongoDB\BSON\ObjectId::getTimestamp                                 Returns the timestamp component of this ObjectId
MongoDB\BSON\ObjectId::jsonSerialize                                Returns a representation that can be converted to JSON
MongoDB\BSON\ObjectId::serialize                                    Serialize an ObjectId
MongoDB\BSON\ObjectId::unserialize                                  Unserialize an ObjectId
MongoDB\BSON\ObjectId::__construct                                  Construct a new ObjectId
MongoDB\BSON\ObjectId::__toString                                   Returns the hexidecimal representation of this ObjectId
MongoDB\BSON\ObjectIdInterface::getTimestamp                        Returns the timestamp component of this ObjectIdInterface
MongoDB\BSON\ObjectIdInterface::__toString                          Returns the hexidecimal representation of this ObjectIdInterface
MongoDB\BSON\Regex::getFlags                                        Returns the Regex's flags
MongoDB\BSON\Regex::getPattern                                      Returns the Regex's pattern
MongoDB\BSON\Regex::jsonSerialize                                   Returns a representation that can be converted to JSON
MongoDB\BSON\Regex::serialize                                       Serialize a Regex
MongoDB\BSON\Regex::unserialize                                     Unserialize a Regex
MongoDB\BSON\Regex::__construct                                     Construct a new Regex
MongoDB\BSON\Regex::__toString                                      Returns the string representation of this Regex
MongoDB\BSON\RegexInterface::getFlags                               Returns the RegexInterface's flags
MongoDB\BSON\RegexInterface::getPattern                             Returns the RegexInterface's pattern
MongoDB\BSON\RegexInterface::__toString                             Returns the string representation of this RegexInterface
MongoDB\BSON\Serializable::bsonSerialize                            Provides an array or document to serialize as BSON
MongoDB\BSON\Symbol::jsonSerialize                                  Returns a representation that can be converted to JSON
MongoDB\BSON\Symbol::serialize                                      Serialize a Symbol
MongoDB\BSON\Symbol::unserialize                                    Unserialize a Symbol
MongoDB\BSON\Symbol::__construct                                    Construct a new Symbol (unused)
MongoDB\BSON\Symbol::__toString                                     Returns the Symbol as a string
MongoDB\BSON\Timestamp::getIncrement                                Returns the increment component of this Timestamp
MongoDB\BSON\Timestamp::getTimestamp                                Returns the timestamp component of this Timestamp
MongoDB\BSON\Timestamp::jsonSerialize                               Returns a representation that can be converted to JSON
MongoDB\BSON\Timestamp::serialize                                   Serialize a Timestamp
MongoDB\BSON\Timestamp::unserialize                                 Unserialize a Timestamp
MongoDB\BSON\Timestamp::__construct                                 Construct a new Timestamp
MongoDB\BSON\Timestamp::__toString                                  Returns the string representation of this Timestamp
MongoDB\BSON\TimestampInterface::getIncrement                       Returns the increment component of this TimestampInterface
MongoDB\BSON\TimestampInterface::getTimestamp                       Returns the timestamp component of this TimestampInterface
MongoDB\BSON\TimestampInterface::__toString                         Returns the string representation of this TimestampInterface
MongoDB\BSON\toCanonicalExtendedJSON                                Returns the Canonical Extended JSON representation of a BSON value
MongoDB\BSON\toJSON                                                 Returns the Legacy Extended JSON representation of a BSON value
MongoDB\BSON\toPHP                                                  Returns the PHP representation of a BSON value
MongoDB\BSON\toRelaxedExtendedJSON                                  Returns the Relaxed Extended JSON representation of a BSON value
MongoDB\BSON\Undefined::jsonSerialize                               Returns a representation that can be converted to JSON
MongoDB\BSON\Undefined::serialize                                   Serialize a Undefined
MongoDB\BSON\Undefined::unserialize                                 Unserialize a Undefined
MongoDB\BSON\Undefined::__construct                                 Construct a new Undefined (unused)
MongoDB\BSON\Undefined::__toString                                  Returns an empty string
MongoDB\BSON\Unserializable::bsonUnserialize                        Constructs the object from a BSON array or document
MongoDB\BSON\UTCDateTime::jsonSerialize                             Returns a representation that can be converted to JSON
MongoDB\BSON\UTCDateTime::serialize                                 Serialize a UTCDateTime
MongoDB\BSON\UTCDateTime::toDateTime                                Returns the DateTime representation of this UTCDateTime
MongoDB\BSON\UTCDateTime::unserialize                               Unserialize a UTCDateTime
MongoDB\BSON\UTCDateTime::__construct                               Construct a new UTCDateTime
MongoDB\BSON\UTCDateTime::__toString                                Returns the string representation of this UTCDateTime
MongoDB\BSON\UTCDateTimeInterface::toDateTime                       Returns the DateTime representation of this UTCDateTimeInterface
MongoDB\BSON\UTCDateTimeInterface::__toString                       Returns the string representation of this UTCDateTimeInterface
MongoDB\Driver\BulkWrite::count                                     Count number of write operations in the bulk
MongoDB\Driver\BulkWrite::delete                                    Add a delete operation to the bulk
MongoDB\Driver\BulkWrite::insert                                    Add an insert operation to the bulk
MongoDB\Driver\BulkWrite::update                                    Add an update operation to the bulk
MongoDB\Driver\BulkWrite::__construct                               Create a new BulkWrite
MongoDB\Driver\ClientEncryption::createDataKey                      Create a new encryption data key
MongoDB\Driver\ClientEncryption::decrypt                            Decrypt a value
MongoDB\Driver\ClientEncryption::encrypt                            Encrypt a value
MongoDB\Driver\Command::__construct                                 Create a new Command
MongoDB\Driver\Cursor::current                                      Returns the current element
MongoDB\Driver\Cursor::getId                                        Returns the ID for this cursor
MongoDB\Driver\Cursor::getServer                                    Returns the server associated with this cursor
MongoDB\Driver\Cursor::isDead                                       Checks if the cursor is exhausted or may have additional results
MongoDB\Driver\Cursor::key                                          Returns the current result's index within the cursor
MongoDB\Driver\Cursor::next                                         Advances the cursor to the next result
MongoDB\Driver\Cursor::rewind                                       Rewind the cursor to the first result
MongoDB\Driver\Cursor::setTypeMap                                   Sets a type map to use for BSON unserialization
MongoDB\Driver\Cursor::toArray                                      Returns an array containing all results for this cursor
MongoDB\Driver\Cursor::valid                                        Checks if the current position in the cursor is valid
MongoDB\Driver\Cursor::__construct                                  Create a new Cursor (not used)
MongoDB\Driver\CursorId::serialize                                  Serialize a CursorId
MongoDB\Driver\CursorId::unserialize                                Unserialize a CursorId
MongoDB\Driver\CursorId::__construct                                Create a new CursorId (not used)
MongoDB\Driver\CursorId::__toString                                 String representation of the cursor ID
MongoDB\Driver\CursorInterface::getId                               Returns the ID for this cursor
MongoDB\Driver\CursorInterface::getServer                           Returns the server associated with this cursor
MongoDB\Driver\CursorInterface::isDead                              Checks if the cursor may have additional results
MongoDB\Driver\CursorInterface::setTypeMap                          Sets a type map to use for BSON unserialization
MongoDB\Driver\CursorInterface::toArray                             Returns an array containing all results for this cursor
MongoDB\Driver\Exception\CommandException::getResultDocument        Returns the result document for the failed command
MongoDB\Driver\Exception\RuntimeException::hasErrorLabel            Returns whether an error label is associated with an exception
MongoDB\Driver\Exception\WriteException::getWriteResult             Returns the WriteResult for the failed write operation
MongoDB\Driver\Manager::createClientEncryption                      Create a new ClientEncryption object
MongoDB\Driver\Manager::executeBulkWrite                            Execute one or more write operations
MongoDB\Driver\Manager::executeCommand                              Execute a database command
MongoDB\Driver\Manager::executeQuery                                Execute a database query
MongoDB\Driver\Manager::executeReadCommand                          Execute a database command that reads
MongoDB\Driver\Manager::executeReadWriteCommand                     Execute a database command that reads and writes
MongoDB\Driver\Manager::executeWriteCommand                         Execute a database command that writes
MongoDB\Driver\Manager::getReadConcern                              Return the ReadConcern for the Manager
MongoDB\Driver\Manager::getReadPreference                           Return the ReadPreference for the Manager
MongoDB\Driver\Manager::getServers                                  Return the servers to which this manager is connected
MongoDB\Driver\Manager::getWriteConcern                             Return the WriteConcern for the Manager
MongoDB\Driver\Manager::selectServer                                Select a server matching a read preference
MongoDB\Driver\Manager::startSession                                Start a new client session for use with this client
MongoDB\Driver\Manager::__construct                                 Create new MongoDB Manager
MongoDB\Driver\Monitoring\addSubscriber                             Registers a new monitoring event subscriber
MongoDB\Driver\Monitoring\CommandFailedEvent::getCommandName        Returns the command name
MongoDB\Driver\Monitoring\CommandFailedEvent::getDurationMicros     Returns the command's duration in microseconds
MongoDB\Driver\Monitoring\CommandFailedEvent::getError              Returns the Exception associated with the failed command
MongoDB\Driver\Monitoring\CommandFailedEvent::getOperationId        Returns the command's operation ID
MongoDB\Driver\Monitoring\CommandFailedEvent::getReply              Returns the command reply document
MongoDB\Driver\Monitoring\CommandFailedEvent::getRequestId          Returns the command's request ID
MongoDB\Driver\Monitoring\CommandFailedEvent::getServer             Returns the Server on which the command was executed
MongoDB\Driver\Monitoring\CommandStartedEvent::getCommand           Returns the command document
MongoDB\Driver\Monitoring\CommandStartedEvent::getCommandName       Returns the command name
MongoDB\Driver\Monitoring\CommandStartedEvent::getDatabaseName      Returns the database on which the command was executed
MongoDB\Driver\Monitoring\CommandStartedEvent::getOperationId       Returns the command's operation ID
MongoDB\Driver\Monitoring\CommandStartedEvent::getRequestId         Returns the command's request ID
MongoDB\Driver\Monitoring\CommandStartedEvent::getServer            Returns the Server on which the command was executed
MongoDB\Driver\Monitoring\CommandSubscriber::commandFailed          Notification method for a failed command
MongoDB\Driver\Monitoring\CommandSubscriber::commandStarted         Notification method for a started command
MongoDB\Driver\Monitoring\CommandSubscriber::commandSucceeded       Notification method for a successful command
MongoDB\Driver\Monitoring\CommandSucceededEvent::getCommandName     Returns the command name
MongoDB\Driver\Monitoring\CommandSucceededEvent::getDurationMicros  Returns the command's duration in microseconds
MongoDB\Driver\Monitoring\CommandSucceededEvent::getOperationId     Returns the command's operation ID
MongoDB\Driver\Monitoring\CommandSucceededEvent::getReply           Returns the command reply document
MongoDB\Driver\Monitoring\CommandSucceededEvent::getRequestId       Returns the command's request ID
MongoDB\Driver\Monitoring\CommandSucceededEvent::getServer          Returns the Server on which the command was executed
MongoDB\Driver\Monitoring\removeSubscriber                          Unregisters an existing monitoring event subscriber
MongoDB\Driver\Query::__construct                                   Create a new Query
MongoDB\Driver\ReadConcern::bsonSerialize                           Returns an object for BSON serialization
MongoDB\Driver\ReadConcern::getLevel                                Returns the ReadConcern's "level" option
MongoDB\Driver\ReadConcern::isDefault                               Checks if this is the default read concern
MongoDB\Driver\ReadConcern::serialize                               Serialize a ReadConcern
MongoDB\Driver\ReadConcern::unserialize                             Unserialize a ReadConcern
MongoDB\Driver\ReadConcern::__construct                             Create a new ReadConcern
MongoDB\Driver\ReadPreference::bsonSerialize                        Returns an object for BSON serialization
MongoDB\Driver\ReadPreference::getHedge                             Returns the ReadPreference's "hedge" option
MongoDB\Driver\ReadPreference::getMaxStalenessSeconds               Returns the ReadPreference's "maxStalenessSeconds" option
MongoDB\Driver\ReadPreference::getMode                              Returns the ReadPreference's "mode" option
MongoDB\Driver\ReadPreference::getModeString                        Returns the ReadPreference's "mode" option as a string
MongoDB\Driver\ReadPreference::getTagSets                           Returns the ReadPreference's "tagSets" option
MongoDB\Driver\ReadPreference::serialize                            Serialize a ReadPreference
MongoDB\Driver\ReadPreference::unserialize                          Unserialize a ReadPreference
MongoDB\Driver\ReadPreference::__construct                          Create a new ReadPreference
MongoDB\Driver\Server::executeBulkWrite                             Execute one or more write operations on this server
MongoDB\Driver\Server::executeCommand                               Execute a database command on this server
MongoDB\Driver\Server::executeQuery                                 Execute a database query on this server
MongoDB\Driver\Server::executeReadCommand                           Execute a database command that reads on this server
MongoDB\Driver\Server::executeReadWriteCommand                      Execute a database command that reads and writes on this server
MongoDB\Driver\Server::executeWriteCommand                          Execute a database command that writes on this server
MongoDB\Driver\Server::getHost                                      Returns the hostname of this server
MongoDB\Driver\Server::getInfo                                      Returns an array of information about this server
MongoDB\Driver\Server::getLatency                                   Returns the latency of this server
MongoDB\Driver\Server::getPort                                      Returns the port on which this server is listening
MongoDB\Driver\Server::getTags                                      Returns an array of tags describing this server in a replica set
MongoDB\Driver\Server::getType                                      Returns an integer denoting the type of this server
MongoDB\Driver\Server::isArbiter                                    Checks if this server is an arbiter member of a replica set
MongoDB\Driver\Server::isHidden                                     Checks if this server is a hidden member of a replica set
MongoDB\Driver\Server::isPassive                                    Checks if this server is a passive member of a replica set
MongoDB\Driver\Server::isPrimary                                    Checks if this server is a primary member of a replica set
MongoDB\Driver\Server::isSecondary                                  Checks if this server is a secondary member of a replica set
MongoDB\Driver\Server::__construct                                  Create a new Server (not used)
MongoDB\Driver\ServerApi::bsonSerialize                             Returns an object for BSON serialization
MongoDB\Driver\ServerApi::serialize                                 Serialize a ServerApi
MongoDB\Driver\ServerApi::unserialize                               Unserialize a ServerApi
MongoDB\Driver\ServerApi::__construct                               Create a new ServerApi instance
MongoDB\Driver\Session::abortTransaction                            Aborts a transaction
MongoDB\Driver\Session::advanceClusterTime                          Advances the cluster time for this session
MongoDB\Driver\Session::advanceOperationTime                        Advances the operation time for this session
MongoDB\Driver\Session::commitTransaction                           Commits a transaction
MongoDB\Driver\Session::endSession                                  Terminates a session
MongoDB\Driver\Session::getClusterTime                              Returns the cluster time for this session
MongoDB\Driver\Session::getLogicalSessionId                         Returns the logical session ID for this session
MongoDB\Driver\Session::getOperationTime                            Returns the operation time for this session
MongoDB\Driver\Session::getServer                                   Returns the server to which this session is pinned
MongoDB\Driver\Session::getTransactionOptions                       Returns options for the currently running transaction
MongoDB\Driver\Session::getTransactionState                         Returns the current transaction state for this session
MongoDB\Driver\Session::isInTransaction                             Returns whether a multi-document transaction is in progress
MongoDB\Driver\Session::startTransaction                            Starts a transaction
MongoDB\Driver\Session::__construct                                 Create a new Session (not used)
MongoDB\Driver\WriteConcern::bsonSerialize                          Returns an object for BSON serialization
MongoDB\Driver\WriteConcern::getJournal                             Returns the WriteConcern's "journal" option
MongoDB\Driver\WriteConcern::getW                                   Returns the WriteConcern's "w" option
MongoDB\Driver\WriteConcern::getWtimeout                            Returns the WriteConcern's "wtimeout" option
MongoDB\Driver\WriteConcern::isDefault                              Checks if this is the default write concern
MongoDB\Driver\WriteConcern::serialize                              Serialize a WriteConcern
MongoDB\Driver\WriteConcern::unserialize                            Unserialize a WriteConcern
MongoDB\Driver\WriteConcern::__construct                            Create a new WriteConcern
MongoDB\Driver\WriteConcernError::getCode                           Returns the WriteConcernError's error code
MongoDB\Driver\WriteConcernError::getInfo                           Returns metadata document for the WriteConcernError
MongoDB\Driver\WriteConcernError::getMessage                        Returns the WriteConcernError's error message
MongoDB\Driver\WriteError::getCode                                  Returns the WriteError's error code
MongoDB\Driver\WriteError::getIndex                                 Returns the index of the write operation corresponding to this WriteError
MongoDB\Driver\WriteError::getInfo                                  Returns metadata document for the WriteError
MongoDB\Driver\WriteError::getMessage                               Returns the WriteError's error message
MongoDB\Driver\WriteResult::getDeletedCount                         Returns the number of documents deleted
MongoDB\Driver\WriteResult::getInsertedCount                        Returns the number of documents inserted (excluding upserts)
MongoDB\Driver\WriteResult::getMatchedCount                         Returns the number of documents selected for update
MongoDB\Driver\WriteResult::getModifiedCount                        Returns the number of existing documents updated
MongoDB\Driver\WriteResult::getServer                               Returns the server associated with this write result
MongoDB\Driver\WriteResult::getUpsertedCount                        Returns the number of documents inserted by an upsert
MongoDB\Driver\WriteResult::getUpsertedIds                          Returns an array of identifiers for upserted documents
MongoDB\Driver\WriteResult::getWriteConcernError                    Returns any write concern error that occurred
MongoDB\Driver\WriteResult::getWriteErrors                          Returns any write errors that occurred
MongoDB\Driver\WriteResult::isAcknowledged                          Returns whether the write was acknowledged
MongoDeleteBatch::__construct                                       Description
MongoGridFS::delete                                                 Remove a file and its chunks from the database
MongoGridFS::drop                                                   Drops the files and chunks collections
MongoGridFS::find                                                   Queries for files
MongoGridFS::findOne                                                Returns a single file matching the criteria
MongoGridFS::get                                                    Retrieve a file from the database
MongoGridFS::put                                                    Stores a file in the database
MongoGridFS::remove                                                 Remove files and their chunks from the database
MongoGridFS::storeBytes                                             Stores a string of bytes in the database
MongoGridFS::storeFile                                              Stores a file in the database
MongoGridFS::storeUpload                                            Stores an uploaded file in the database
MongoGridFS::__construct                                            Creates new file collections
MongoGridFSCursor::current                                          Returns the current file
MongoGridFSCursor::getNext                                          Return the next file to which this cursor points, and advance the cursor
MongoGridFSCursor::key                                              Returns the current result's filename
MongoGridFSCursor::__construct                                      Create a new cursor
MongoGridFSFile::getBytes                                           Returns this file's contents as a string of bytes
MongoGridFSFile::getFilename                                        Returns this file's filename
MongoGridFSFile::getResource                                        Returns a resource that can be used to read the stored file
MongoGridFSFile::getSize                                            Returns this file's size
MongoGridFSFile::write                                              Writes this file to the filesystem
MongoGridfsFile::__construct                                        Create a new GridFS file
MongoId::getHostname                                                Gets the hostname being used for this machine's ids
MongoId::getInc                                                     Gets the incremented value to create this id
MongoId::getPID                                                     Gets the process ID
MongoId::getTimestamp                                               Gets the number of seconds since the epoch that this id was created
MongoId::isValid                                                    Check if a value is a valid ObjectId
MongoId::__construct                                                Creates a new id
MongoId::__set_state                                                Create a dummy MongoId
MongoId::__toString                                                 Returns a hexidecimal representation of this id
MongoInsertBatch::__construct                                       Description
MongoInt32::__construct                                             Creates a new 32-bit integer
MongoInt32::__toString                                              Returns the string representation of this 32-bit integer
MongoInt64::__construct                                             Creates a new 64-bit integer
MongoInt64::__toString                                              Returns the string representation of this 64-bit integer
MongoLog::getCallback                                               Gets the previously set callback function
MongoLog::getLevel                                                  Gets the level(s) currently being logged
MongoLog::getModule                                                 Gets the module(s) currently being logged
MongoLog::setCallback                                               Sets a callback function to be invoked for events
MongoLog::setLevel                                                  Sets the level(s) to be logged
MongoLog::setModule                                                 Sets the module(s) to be logged
MongoPool::getSize                                                  Get pool size for connection pools
MongoPool::info                                                     Returns information about all connection pools
MongoPool::setSize                                                  Set the size for future connection pools
MongoRegex::__construct                                             Creates a new regular expression
MongoRegex::__toString                                              A string representation of this regular expression
MongoResultException::getDocument                                   Retrieve the full result document
MongoTimestamp::__construct                                         Creates a new timestamp
MongoTimestamp::__toString                                          Returns a string representation of this timestamp
MongoUpdateBatch::__construct                                       Description
MongoWriteBatch::add                                                Adds a write operation to a batch
MongoWriteBatch::execute                                            Executes a batch of write operations
MongoWriteBatch::__construct                                        Creates a new batch of write operations
MongoWriteConcernException::getDocument                             Get the error document
mqseries_back                                                       MQSeries MQBACK
mqseries_begin                                                      MQseries MQBEGIN
mqseries_close                                                      MQSeries MQCLOSE
mqseries_cmit                                                       MQSeries MQCMIT
mqseries_conn                                                       MQSeries MQCONN
mqseries_connx                                                      MQSeries MQCONNX
mqseries_disc                                                       MQSeries MQDISC
mqseries_get                                                        MQSeries MQGET
mqseries_inq                                                        MQSeries MQINQ
mqseries_open                                                       MQSeries MQOPEN
mqseries_put                                                        MQSeries MQPUT
mqseries_put1                                                       MQSeries MQPUT1
mqseries_set                                                        MQSeries MQSET
mqseries_strerror                                                   Returns the error message corresponding to a result code (MQRC)
msg_get_queue                                                       Create or attach to a message queue
msg_queue_exists                                                    Check whether a message queue exists
msg_receive                                                         Receive a message from a message queue
msg_remove_queue                                                    Destroy a message queue
msg_send                                                            Send a message to a message queue
msg_set_queue                                                       Set information in the message queue data structure
msg_stat_queue                                                      Returns information from the message queue data structure
MultipleIterator::attachIterator                                    Attaches iterator information
MultipleIterator::containsIterator                                  Checks if an iterator is attached
MultipleIterator::countIterators                                    Gets the number of attached iterator instances
MultipleIterator::current                                           Gets the registered iterator instances
MultipleIterator::detachIterator                                    Detaches an iterator
MultipleIterator::getFlags                                          Gets the flag information
MultipleIterator::key                                               Gets the registered iterator instances
MultipleIterator::next                                              Moves all attached iterator instances forward
MultipleIterator::rewind                                            Rewinds all attached iterator instances
MultipleIterator::setFlags                                          Sets flags
MultipleIterator::valid                                             Checks the validity of sub iterators
MultipleIterator::__construct                                       Constructs a new MultipleIterator
Mutex::create                                                       Create a Mutex
Mutex::destroy                                                      Destroy Mutex
Mutex::lock                                                         Acquire Mutex
Mutex::trylock                                                      Attempt to Acquire Mutex
Mutex::unlock                                                       Release Mutex
mysqli::$affected_rows                                              Gets the number of affected rows in a previous MySQL operation
mysqli::$client_info                                                Get MySQL client info
mysqli::$client_version                                             Returns the MySQL client version as an integer
mysqli::$connect_errno                                              Returns the error code from last connect call
mysqli::$connect_error                                              Returns a string description of the last connect error
mysqli::$errno                                                      Returns the error code for the most recent function call
mysqli::$error                                                      Returns a string description of the last error
mysqli::$error_list                                                 Returns a list of errors from the last command executed
mysqli::$field_count                                                Returns the number of columns for the most recent query
mysqli::$host_info                                                  Returns a string representing the type of connection used
mysqli::$info                                                       Retrieves information about the most recently executed query
mysqli::$insert_id                                                  Returns the auto generated id used in the latest query
mysqli::$protocol_version                                           Returns the version of the MySQL protocol used
mysqli::$server_info                                                Returns the version of the MySQL server
mysqli::$server_version                                             Returns the version of the MySQL server as an integer
mysqli::$sqlstate                                                   Returns the SQLSTATE error from previous MySQL operation
mysqli::$thread_id                                                  Returns the thread ID for the current connection
mysqli::$warning_count                                              Returns the number of warnings from the last query for the given link
mysqli::autocommit                                                  Turns on or off auto-committing database modifications
mysqli::begin_transaction                                           Starts a transaction
mysqli::change_user                                                 Changes the user of the specified database connection
mysqli::character_set_name                                          Returns the default character set for the database connection
mysqli::close                                                       Closes a previously opened database connection
mysqli::commit                                                      Commits the current transaction
mysqli::debug                                                       Performs debugging operations
mysqli::dump_debug_info                                             Dump debugging information into the log
mysqli::escape_string                                               Alias of mysqli_real_escape_string
mysqli::get_charset                                                 Returns a character set object
mysqli::get_connection_stats                                        Returns statistics about the client connection
mysqli::get_warnings                                                Get result of SHOW WARNINGS
mysqli::init                                                        Initializes MySQLi and returns an object for use with mysqli_real_connect()
mysqli::kill                                                        Asks the server to kill a MySQL thread
mysqli::more_results                                                Check if there are any more query results from a multi query
mysqli::multi_query                                                 Performs a query on the database
mysqli::next_result                                                 Prepare next result from multi_query
mysqli::options                                                     Set options
mysqli::ping                                                        Pings a server connection, or tries to reconnect if the connection has gone down
mysqli::poll                                                        Poll connections
mysqli::prepare                                                     Prepares an SQL statement for execution
mysqli::query                                                       Performs a query on the database
mysqli::real_connect                                                Opens a connection to a mysql server
mysqli::real_escape_string                                          Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection
mysqli::real_query                                                  Execute an SQL query
mysqli::reap_async_query                                            Get result from async query
mysqli::refresh                                                     Refreshes
mysqli::release_savepoint                                           Removes the named savepoint from the set of savepoints of the current transaction
mysqli::rollback                                                    Rolls back current transaction
mysqli::savepoint                                                   Set a named transaction savepoint
mysqli::select_db                                                   Selects the default database for database queries
mysqli::set_charset                                                 Sets the default client character set
mysqli::set_opt                                                     Alias of mysqli_options
mysqli::ssl_set                                                     Used for establishing secure connections using SSL
mysqli::stat                                                        Gets the current system status
mysqli::stmt_init                                                   Initializes a statement and returns an object for use with mysqli_stmt_prepare
mysqli::store_result                                                Transfers a result set from the last query
mysqli::thread_safe                                                 Returns whether thread safety is given or not
mysqli::use_result                                                  Initiate a result set retrieval
mysqli::__construct                                                 Open a new connection to the MySQL server
mysqli_connect                                                      Alias of mysqli::__construct
mysqli_driver::$report_mode                                         Sets mysqli error reporting mode
mysqli_driver::embedded_server_end                                  Stop embedded server
mysqli_driver::embedded_server_start                                Initialize and start embedded server
mysqli_execute                                                      Alias for mysqli_stmt_execute
mysqli_get_client_stats                                             Returns client per-process statistics
mysqli_get_links_stats                                              Return information about open and cached links
mysqli_report                                                       Alias of mysqli_driver->report_mode
mysqli_result::$current_field                                       Get current field offset of a result pointer
mysqli_result::$field_count                                         Get the number of fields in a result
mysqli_result::$lengths                                             Returns the lengths of the columns of the current row in the result set
mysqli_result::$num_rows                                            Gets the number of rows in a result
mysqli_result::data_seek                                            Adjusts the result pointer to an arbitrary row in the result
mysqli_result::fetch_all                                            Fetch all result rows as an associative array, a numeric array, or both
mysqli_result::fetch_array                                          Fetch a result row as an associative, a numeric array, or both
mysqli_result::fetch_assoc                                          Fetch a result row as an associative array
mysqli_result::fetch_field                                          Returns the next field in the result set
mysqli_result::fetch_fields                                         Returns an array of objects representing the fields in a result set
mysqli_result::fetch_field_direct                                   Fetch meta-data for a single field
mysqli_result::fetch_object                                         Returns the current row of a result set as an object
mysqli_result::fetch_row                                            Get a result row as an enumerated array
mysqli_result::field_seek                                           Set result pointer to a specified field offset
mysqli_result::free                                                 Frees the memory associated with a result
mysqli_stmt::$affected_rows                                         Returns the total number of rows changed, deleted, inserted, or matched by the last statement executed
mysqli_stmt::$errno                                                 Returns the error code for the most recent statement call
mysqli_stmt::$error                                                 Returns a string description for last statement error
mysqli_stmt::$error_list                                            Returns a list of errors from the last statement executed
mysqli_stmt::$field_count                                           Returns the number of columns in the given statement
mysqli_stmt::$insert_id                                             Get the ID generated from the previous INSERT operation
mysqli_stmt::$num_rows                                              Returns the number of rows fetched from the server
mysqli_stmt::$param_count                                           Returns the number of parameters for the given statement
mysqli_stmt::$sqlstate                                              Returns SQLSTATE error from previous statement operation
mysqli_stmt::attr_get                                               Used to get the current value of a statement attribute
mysqli_stmt::attr_set                                               Used to modify the behavior of a prepared statement
mysqli_stmt::bind_param                                             Binds variables to a prepared statement as parameters
mysqli_stmt::bind_result                                            Binds variables to a prepared statement for result storage
mysqli_stmt::close                                                  Closes a prepared statement
mysqli_stmt::data_seek                                              Seeks to an arbitrary row in statement result set
mysqli_stmt::execute                                                Executes a prepared statement
mysqli_stmt::fetch                                                  Fetch results from a prepared statement into the bound variables
mysqli_stmt::free_result                                            Frees stored result memory for the given statement handle
mysqli_stmt::get_result                                             Gets a result set from a prepared statement
mysqli_stmt::get_warnings                                           Get result of SHOW WARNINGS
mysqli_stmt::more_results                                           Check if there are more query results from a multiple query
mysqli_stmt::next_result                                            Reads the next result from a multiple query
mysqli_stmt::prepare                                                Prepares an SQL statement for execution
mysqli_stmt::reset                                                  Resets a prepared statement
mysqli_stmt::result_metadata                                        Returns result set metadata from a prepared statement
mysqli_stmt::send_long_data                                         Send data in blocks
mysqli_stmt::store_result                                           Stores a result set in an internal buffer
mysqli_stmt::__construct                                            Constructs a new mysqli_stmt object
mysqli_warning::next                                                Fetch next warning
MysqlndUhConnection::changeUser                                     Changes the user of the specified mysqlnd database connection
MysqlndUhConnection::charsetName                                    Returns the default character set for the database connection
MysqlndUhConnection::close                                          Closes a previously opened database connection
MysqlndUhConnection::connect                                        Open a new connection to the MySQL server
MysqlndUhConnection::endPSession                                    End a persistent connection
MysqlndUhConnection::escapeString                                   Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection
MysqlndUhConnection::getAffectedRows                                Gets the number of affected rows in a previous MySQL operation
MysqlndUhConnection::getErrorNumber                                 Returns the error code for the most recent function call
MysqlndUhConnection::getErrorString                                 Returns a string description of the last error
MysqlndUhConnection::getFieldCount                                  Returns the number of columns for the most recent query
MysqlndUhConnection::getHostInformation                             Returns a string representing the type of connection used
MysqlndUhConnection::getLastInsertId                                Returns the auto generated id used in the last query
MysqlndUhConnection::getLastMessage                                 Retrieves information about the most recently executed query
MysqlndUhConnection::getProtocolInformation                         Returns the version of the MySQL protocol used
MysqlndUhConnection::getServerInformation                           Returns the version of the MySQL server
MysqlndUhConnection::getServerStatistics                            Gets the current system status
MysqlndUhConnection::getServerVersion                               Returns the version of the MySQL server as an integer
MysqlndUhConnection::getSqlstate                                    Returns the SQLSTATE error from previous MySQL operation
MysqlndUhConnection::getStatistics                                  Returns statistics about the client connection
MysqlndUhConnection::getThreadId                                    Returns the thread ID for the current connection
MysqlndUhConnection::getWarningCount                                Returns the number of warnings from the last query for the given link
MysqlndUhConnection::init                                           Initialize mysqlnd connection
MysqlndUhConnection::killConnection                                 Asks the server to kill a MySQL thread
MysqlndUhConnection::listFields                                     List MySQL table fields
MysqlndUhConnection::listMethod                                     Wrapper for assorted list commands
MysqlndUhConnection::moreResults                                    Check if there are any more query results from a multi query
MysqlndUhConnection::nextResult                                     Prepare next result from multi_query
MysqlndUhConnection::ping                                           Pings a server connection, or tries to reconnect if the connection has gone down
MysqlndUhConnection::query                                          Performs a query on the database
MysqlndUhConnection::queryReadResultsetHeader                       Read a result set header
MysqlndUhConnection::reapQuery                                      Get result from async query
MysqlndUhConnection::refreshServer                                  Flush or reset tables and caches
MysqlndUhConnection::restartPSession                                Restart a persistent mysqlnd connection
MysqlndUhConnection::selectDb                                       Selects the default database for database queries
MysqlndUhConnection::sendClose                                      Sends a close command to MySQL
MysqlndUhConnection::sendQuery                                      Sends a query to MySQL
MysqlndUhConnection::serverDumpDebugInformation                     Dump debugging information into the log for the MySQL server
MysqlndUhConnection::setAutocommit                                  Turns on or off auto-committing database modifications
MysqlndUhConnection::setCharset                                     Sets the default client character set
MysqlndUhConnection::setClientOption                                Sets a client option
MysqlndUhConnection::setServerOption                                Sets a server option
MysqlndUhConnection::shutdownServer                                 The shutdownServer purpose
MysqlndUhConnection::simpleCommand                                  Sends a basic COM_* command
MysqlndUhConnection::simpleCommandHandleResponse                    Process a response for a basic COM_* command send to the client
MysqlndUhConnection::sslSet                                         Used for establishing secure connections using SSL
MysqlndUhConnection::stmtInit                                       Initializes a statement and returns a resource for use with mysqli_statement::prepare
MysqlndUhConnection::storeResult                                    Transfers a result set from the last query
MysqlndUhConnection::txCommit                                       Commits the current transaction
MysqlndUhConnection::txRollback                                     Rolls back current transaction
MysqlndUhConnection::useResult                                      Initiate a result set retrieval
MysqlndUhConnection::__construct                                    The __construct purpose
MysqlndUhPreparedStatement::execute                                 Executes a prepared Query
MysqlndUhPreparedStatement::prepare                                 Prepare an SQL statement for execution
MysqlndUhPreparedStatement::__construct                             The __construct purpose
mysqlnd_memcache_get_config                                         Returns information about the plugin configuration
mysqlnd_memcache_set                                                Associate a MySQL connection with a Memcache connection
mysqlnd_ms_dump_servers                                             Returns a list of currently configured servers
mysqlnd_ms_fabric_select_global                                     Switch to global sharding server for a given table
mysqlnd_ms_fabric_select_shard                                      Switch to shard
mysqlnd_ms_get_last_gtid                                            Returns the latest global transaction ID
mysqlnd_ms_get_last_used_connection                                 Returns an array which describes the last used connection
mysqlnd_ms_get_stats                                                Returns query distribution and connection statistics
mysqlnd_ms_match_wild                                               Finds whether a table name matches a wildcard pattern or not
mysqlnd_ms_query_is_select                                          Find whether to send the query to the master, the slave or the last used MySQL server
mysqlnd_ms_set_qos                                                  Sets the quality of service needed from the cluster
mysqlnd_ms_set_user_pick_server                                     Sets a callback for user-defined read/write splitting
mysqlnd_ms_xa_begin                                                 Starts a distributed/XA transaction among MySQL servers
mysqlnd_ms_xa_commit                                                Commits a distributed/XA transaction among MySQL servers
mysqlnd_ms_xa_gc                                                    Garbage collects unfinished XA transactions after severe errors
mysqlnd_ms_xa_rollback                                              Rolls back a distributed/XA transaction among MySQL servers
mysqlnd_qc_clear_cache                                              Flush all cache contents
mysqlnd_qc_get_available_handlers                                   Returns a list of available storage handler
mysqlnd_qc_get_cache_info                                           Returns information on the current handler, the number of cache entries and cache entries, if available
mysqlnd_qc_get_core_stats                                           Statistics collected by the core of the query cache
mysqlnd_qc_get_normalized_query_trace_log                           Returns a normalized query trace log for each query inspected by the query cache
mysqlnd_qc_get_query_trace_log                                      Returns a backtrace for each query inspected by the query cache
mysqlnd_qc_set_cache_condition                                      Set conditions for automatic caching
mysqlnd_qc_set_is_select                                            Installs a callback which decides whether a statement is cached
mysqlnd_qc_set_storage_handler                                      Change current storage handler
mysqlnd_qc_set_user_handlers                                        Sets the callback functions for a user-defined procedural storage handler
mysqlnd_uh_convert_to_mysqlnd                                       Converts a MySQL connection handle into a mysqlnd connection handle
mysqlnd_uh_set_connection_proxy                                     Installs a proxy for mysqlnd connections
mysqlnd_uh_set_statement_proxy                                      Installs a proxy for mysqlnd statements
mysql_affected_rows                                                 Get number of affected rows in previous MySQL operation
mysql_client_encoding                                               Returns the name of the character set
mysql_close                                                         Close MySQL connection
mysql_connect                                                       Open a connection to a MySQL Server
mysql_create_db                                                     Create a MySQL database
mysql_data_seek                                                     Move internal result pointer
mysql_db_name                                                       Retrieves database name from the call to mysql_list_dbs
mysql_db_query                                                      Selects a database and executes a query on it
mysql_drop_db                                                       Drop (delete) a MySQL database
mysql_errno                                                         Returns the numerical value of the error message from previous MySQL operation
mysql_error                                                         Returns the text of the error message from previous MySQL operation
mysql_escape_string                                                 Escapes a string for use in a mysql_query
mysql_fetch_array                                                   Fetch a result row as an associative array, a numeric array, or both
mysql_fetch_assoc                                                   Fetch a result row as an associative array
mysql_fetch_field                                                   Get column information from a result and return as an object
mysql_fetch_lengths                                                 Get the length of each output in a result
mysql_fetch_object                                                  Fetch a result row as an object
mysql_fetch_row                                                     Get a result row as an enumerated array
mysql_field_flags                                                   Get the flags associated with the specified field in a result
mysql_field_len                                                     Returns the length of the specified field
mysql_field_name                                                    Get the name of the specified field in a result
mysql_field_seek                                                    Set result pointer to a specified field offset
mysql_field_table                                                   Get name of the table the specified field is in
mysql_field_type                                                    Get the type of the specified field in a result
mysql_free_result                                                   Free result memory
mysql_get_client_info                                               Get MySQL client info
mysql_get_host_info                                                 Get MySQL host info
mysql_get_proto_info                                                Get MySQL protocol info
mysql_get_server_info                                               Get MySQL server info
mysql_info                                                          Get information about the most recent query
mysql_insert_id                                                     Get the ID generated in the last query
mysql_list_dbs                                                      List databases available on a MySQL server
mysql_list_fields                                                   List MySQL table fields
mysql_list_processes                                                List MySQL processes
mysql_list_tables                                                   List tables in a MySQL database
mysql_num_fields                                                    Get number of fields in result
mysql_num_rows                                                      Get number of rows in result
mysql_pconnect                                                      Open a persistent connection to a MySQL server
mysql_ping                                                          Ping a server connection or reconnect if there is no connection
mysql_query                                                         Send a MySQL query
mysql_real_escape_string                                            Escapes special characters in a string for use in an SQL statement
mysql_result                                                        Get result data
mysql_select_db                                                     Select a MySQL database
mysql_set_charset                                                   Sets the client character set
mysql_stat                                                          Get current system status
mysql_tablename                                                     Get table name of field
mysql_thread_id                                                     Return the current thread ID
mysql_unbuffered_query                                              Send an SQL query to MySQL without fetching and buffering the result rows
mysql_xdevapi\Client::close                                         Close client
ncurses_addch                                                       Add character at current position and advance cursor
ncurses_addchnstr                                                   Add attributed string with specified length at current position
ncurses_addchstr                                                    Add attributed string at current position
ncurses_addnstr                                                     Add string with specified length at current position
ncurses_addstr                                                      Output text at current position
ncurses_assume_default_colors                                       Define default colors for color 0
ncurses_attroff                                                     Turn off the given attributes
ncurses_attron                                                      Turn on the given attributes
ncurses_attrset                                                     Set given attributes
ncurses_baudrate                                                    Returns baudrate of terminal
ncurses_beep                                                        Let the terminal beep
ncurses_bkgd                                                        Set background property for terminal screen
ncurses_bkgdset                                                     Control screen background
ncurses_border                                                      Draw a border around the screen using attributed characters
ncurses_bottom_panel                                                Moves a visible panel to the bottom of the stack
ncurses_can_change_color                                            Checks if terminal color definitions can be changed
ncurses_cbreak                                                      Switch off input buffering
ncurses_clear                                                       Clear screen
ncurses_clrtobot                                                    Clear screen from current position to bottom
ncurses_clrtoeol                                                    Clear screen from current position to end of line
ncurses_color_content                                               Retrieves RGB components of a color
ncurses_color_set                                                   Set active foreground and background colors
ncurses_curs_set                                                    Set cursor state
ncurses_define_key                                                  Define a keycode
ncurses_def_prog_mode                                               Saves terminals (program) mode
ncurses_def_shell_mode                                              Saves terminals (shell) mode
ncurses_delay_output                                                Delay output on terminal using padding characters
ncurses_delch                                                       Delete character at current position, move rest of line left
ncurses_deleteln                                                    Delete line at current position, move rest of screen up
ncurses_delwin                                                      Delete a ncurses window
ncurses_del_panel                                                   Remove panel from the stack and delete it (but not the associated window)
ncurses_doupdate                                                    Write all prepared refreshes to terminal
ncurses_echo                                                        Activate keyboard input echo
ncurses_echochar                                                    Single character output including refresh
ncurses_end                                                         Stop using ncurses, clean up the screen
ncurses_erase                                                       Erase terminal screen
ncurses_erasechar                                                   Returns current erase character
ncurses_filter                                                      Set LINES for iniscr() and newterm() to 1
ncurses_flash                                                       Flash terminal screen (visual bell)
ncurses_flushinp                                                    Flush keyboard input buffer
ncurses_getch                                                       Read a character from keyboard
ncurses_getmaxyx                                                    Returns the size of a window
ncurses_getmouse                                                    Reads mouse event
ncurses_getyx                                                       Returns the current cursor position for a window
ncurses_halfdelay                                                   Put terminal into halfdelay mode
ncurses_has_colors                                                  Checks if terminal has color capabilities
ncurses_has_ic                                                      Check for insert- and delete-capabilities
ncurses_has_il                                                      Check for line insert- and delete-capabilities
ncurses_has_key                                                     Check for presence of a function key on terminal keyboard
ncurses_hide_panel                                                  Remove panel from the stack, making it invisible
ncurses_hline                                                       Draw a horizontal line at current position using an attributed character and max. n characters long
ncurses_inch                                                        Get character and attribute at current position
ncurses_init                                                        Initialize ncurses
ncurses_init_color                                                  Define a terminal color
ncurses_init_pair                                                   Define a color pair
ncurses_insch                                                       Insert character moving rest of line including character at current position
ncurses_insdelln                                                    Insert lines before current line scrolling down (negative numbers delete and scroll up)
ncurses_insertln                                                    Insert a line, move rest of screen down
ncurses_insstr                                                      Insert string at current position, moving rest of line right
ncurses_instr                                                       Reads string from terminal screen
ncurses_isendwin                                                    Ncurses is in endwin mode, normal screen output may be performed
ncurses_keyok                                                       Enable or disable a keycode
ncurses_keypad                                                      Turns keypad on or off
ncurses_killchar                                                    Returns current line kill character
ncurses_longname                                                    Returns terminals description
ncurses_meta                                                        Enables/Disable 8-bit meta key information
ncurses_mouseinterval                                               Set timeout for mouse button clicks
ncurses_mousemask                                                   Sets mouse options
ncurses_mouse_trafo                                                 Transforms coordinates
ncurses_move                                                        Move output position
ncurses_move_panel                                                  Moves a panel so that its upper-left corner is at [startx, starty]
ncurses_mvaddch                                                     Move current position and add character
ncurses_mvaddchnstr                                                 Move position and add attributed string with specified length
ncurses_mvaddchstr                                                  Move position and add attributed string
ncurses_mvaddnstr                                                   Move position and add string with specified length
ncurses_mvaddstr                                                    Move position and add string
ncurses_mvcur                                                       Move cursor immediately
ncurses_mvdelch                                                     Move position and delete character, shift rest of line left
ncurses_mvgetch                                                     Move position and get character at new position
ncurses_mvhline                                                     Set new position and draw a horizontal line using an attributed character and max. n characters long
ncurses_mvinch                                                      Move position and get attributed character at new position
ncurses_mvvline                                                     Set new position and draw a vertical line using an attributed character and max. n characters long
ncurses_mvwaddstr                                                   Add string at new position in window
ncurses_napms                                                       Sleep
ncurses_newpad                                                      Creates a new pad (window)
ncurses_newwin                                                      Create a new window
ncurses_new_panel                                                   Create a new panel and associate it with window
ncurses_nl                                                          Translate newline and carriage return / line feed
ncurses_nocbreak                                                    Switch terminal to cooked mode
ncurses_noecho                                                      Switch off keyboard input echo
ncurses_nonl                                                        Do not translate newline and carriage return / line feed
ncurses_noqiflush                                                   Do not flush on signal characters
ncurses_noraw                                                       Switch terminal out of raw mode
ncurses_pair_content                                                Retrieves foreground and background colors of a color pair
ncurses_panel_above                                                 Returns the panel above panel
ncurses_panel_below                                                 Returns the panel below panel
ncurses_panel_window                                                Returns the window associated with panel
ncurses_pnoutrefresh                                                Copies a region from a pad into the virtual screen
ncurses_prefresh                                                    Copies a region from a pad into the virtual screen
ncurses_putp                                                        Apply padding information to the string and output it
ncurses_qiflush                                                     Flush on signal characters
ncurses_raw                                                         Switch terminal into raw mode
ncurses_refresh                                                     Refresh screen
ncurses_replace_panel                                               Replaces the window associated with panel
ncurses_resetty                                                     Restores saved terminal state
ncurses_reset_prog_mode                                             Resets the prog mode saved by def_prog_mode
ncurses_reset_shell_mode                                            Resets the shell mode saved by def_shell_mode
ncurses_savetty                                                     Saves terminal state
ncurses_scrl                                                        Scroll window content up or down without changing current position
ncurses_scr_dump                                                    Dump screen content to file
ncurses_scr_init                                                    Initialize screen from file dump
ncurses_scr_restore                                                 Restore screen from file dump
ncurses_scr_set                                                     Inherit screen from file dump
ncurses_show_panel                                                  Places an invisible panel on top of the stack, making it visible
ncurses_slk_attr                                                    Returns current soft label key attribute
ncurses_slk_attroff                                                 Turn off the given attributes for soft function-key labels
ncurses_slk_attron                                                  Turn on the given attributes for soft function-key labels
ncurses_slk_attrset                                                 Set given attributes for soft function-key labels
ncurses_slk_clear                                                   Clears soft labels from screen
ncurses_slk_color                                                   Sets color for soft label keys
ncurses_slk_init                                                    Initializes soft label key functions
ncurses_slk_noutrefresh                                             Copies soft label keys to virtual screen
ncurses_slk_refresh                                                 Copies soft label keys to screen
ncurses_slk_restore                                                 Restores soft label keys
ncurses_slk_set                                                     Sets function key labels
ncurses_slk_touch                                                   Forces output when ncurses_slk_noutrefresh is performed
ncurses_standend                                                    Stop using 'standout' attribute
ncurses_standout                                                    Start using 'standout' attribute
ncurses_start_color                                                 Initializes color functionality
ncurses_termattrs                                                   Returns a logical OR of all attribute flags supported by terminal
ncurses_termname                                                    Returns terminals (short)-name
ncurses_timeout                                                     Set timeout for special key sequences
ncurses_top_panel                                                   Moves a visible panel to the top of the stack
ncurses_typeahead                                                   Specify different filedescriptor for typeahead checking
ncurses_ungetch                                                     Put a character back into the input stream
ncurses_ungetmouse                                                  Pushes mouse event to queue
ncurses_update_panels                                               Refreshes the virtual screen to reflect the relations between panels in the stack
ncurses_use_default_colors                                          Assign terminal default colors to color id -1
ncurses_use_env                                                     Control use of environment information about terminal size
ncurses_use_extended_names                                          Control use of extended names in terminfo descriptions
ncurses_vidattr                                                     Display the string on the terminal in the video attribute mode
ncurses_vline                                                       Draw a vertical line at current position using an attributed character and max. n characters long
ncurses_waddch                                                      Adds character at current position in a window and advance cursor
ncurses_waddstr                                                     Outputs text at current postion in window
ncurses_wattroff                                                    Turns off attributes for a window
ncurses_wattron                                                     Turns on attributes for a window
ncurses_wattrset                                                    Set the attributes for a window
ncurses_wborder                                                     Draws a border around the window using attributed characters
ncurses_wclear                                                      Clears window
ncurses_wcolor_set                                                  Sets windows color pairings
ncurses_werase                                                      Erase window contents
ncurses_wgetch                                                      Reads a character from keyboard (window)
ncurses_whline                                                      Draws a horizontal line in a window at current position using an attributed character and max. n characters long
ncurses_wmouse_trafo                                                Transforms window/stdscr coordinates
ncurses_wmove                                                       Moves windows output position
ncurses_wnoutrefresh                                                Copies window to virtual screen
ncurses_wrefresh                                                    Refresh window on terminal screen
ncurses_wstandend                                                   End standout mode for a window
ncurses_wstandout                                                   Enter standout mode for a window
ncurses_wvline                                                      Draws a vertical line in a window at current position using an attributed character and max. n characters long
ngettext                                                            Plural version of gettext
NoRewindIterator::current                                           Get the current value
NoRewindIterator::getInnerIterator                                  Get the inner iterator
NoRewindIterator::key                                               Get the current key
NoRewindIterator::next                                              Forward to the next element
NoRewindIterator::rewind                                            Prevents the rewind operation on the inner iterator
NoRewindIterator::valid                                             Validates the iterator
NoRewindIterator::__construct                                       Construct a NoRewindIterator
Normalizer::getRawDecomposition                                     Gets the Decomposition_Mapping property for the given UTF-8 encoded code point
Normalizer::isNormalized                                            Checks if the provided string is already in the specified normalization form
Normalizer::normalize                                               Normalizes the input provided and returns the normalized string
NumberFormatter::create                                             Create a number formatter
NumberFormatter::format                                             Format a number
NumberFormatter::formatCurrency                                     Format a currency value
NumberFormatter::getAttribute                                       Get an attribute
NumberFormatter::getErrorCode                                       Get formatter's last error code
NumberFormatter::getErrorMessage                                    Get formatter's last error message
NumberFormatter::getLocale                                          Get formatter locale
NumberFormatter::getPattern                                         Get formatter pattern
NumberFormatter::getSymbol                                          Get a symbol value
NumberFormatter::getTextAttribute                                   Get a text attribute
NumberFormatter::parse                                              Parse a number
NumberFormatter::parseCurrency                                      Parse a currency number
NumberFormatter::setAttribute                                       Set an attribute
NumberFormatter::setPattern                                         Set formatter pattern
NumberFormatter::setSymbol                                          Set a symbol value
NumberFormatter::setTextAttribute                                   Set a text attribute
OAuth::disableDebug                                                 Turn off verbose debugging
OAuth::disableRedirects                                             Turn off redirects
OAuth::disableSSLChecks                                             Turn off SSL checks
OAuth::enableDebug                                                  Turn on verbose debugging
OAuth::enableRedirects                                              Turn on redirects
OAuth::enableSSLChecks                                              Turn on SSL checks
OAuth::fetch                                                        Fetch an OAuth protected resource
OAuth::generateSignature                                            Generate a signature
OAuth::getAccessToken                                               Fetch an access token
OAuth::getCAPath                                                    Gets CA information
OAuth::getLastResponse                                              Get the last response
OAuth::getLastResponseHeaders                                       Get headers for last response
OAuth::getLastResponseInfo                                          Get HTTP information about the last response
OAuth::getRequestHeader                                             Generate OAuth header string signature
OAuth::getRequestToken                                              Fetch a request token
OAuth::setAuthType                                                  Set authorization type
OAuth::setCAPath                                                    Set CA path and info
OAuth::setNonce                                                     Set the nonce for subsequent requests
OAuth::setRequestEngine                                             The setRequestEngine purpose
OAuth::setRSACertificate                                            Set the RSA certificate
OAuth::setSSLChecks                                                 Tweak specific SSL checks for requests
OAuth::setTimestamp                                                 Set the timestamp
OAuth::setToken                                                     Sets the token and secret
OAuth::setVersion                                                   Set the OAuth version
OAuth::__construct                                                  Create a new OAuth object
OAuth::__destruct                                                   The destructor
OAuthProvider::addRequiredParameter                                 Add required parameters
OAuthProvider::callconsumerHandler                                  Calls the consumerNonceHandler callback
OAuthProvider::callTimestampNonceHandler                            Calls the timestampNonceHandler callback
OAuthProvider::calltokenHandler                                     Calls the tokenNonceHandler callback
OAuthProvider::checkOAuthRequest                                    Check an oauth request
OAuthProvider::consumerHandler                                      Set the consumerHandler handler callback
OAuthProvider::generateToken                                        Generate a random token
OAuthProvider::is2LeggedEndpoint                                    is2LeggedEndpoint
OAuthProvider::isRequestTokenEndpoint                               Sets isRequestTokenEndpoint
OAuthProvider::removeRequiredParameter                              Remove a required parameter
OAuthProvider::reportProblem                                        Report a problem
OAuthProvider::setParam                                             Set a parameter
OAuthProvider::setRequestTokenPath                                  Set request token path
OAuthProvider::timestampNonceHandler                                Set the timestampNonceHandler handler callback
OAuthProvider::tokenHandler                                         Set the tokenHandler handler callback
OAuthProvider::__construct                                          Constructs a new OAuthProvider object
oauth_get_sbs                                                       Generate a Signature Base String
oauth_urlencode                                                     Encode a URI to RFC 3986
ob_iconv_handler                                                    Convert character encoding as output buffer handler
ob_tidyhandler                                                      ob_start callback function to repair the buffer
ocibindbyname                                                       Alias of oci_bind_by_name
ocicancel                                                           Alias of oci_cancel
ocicloselob                                                         Alias of OCI-Lob::close
ocicollappend                                                       Alias of OCICollection::append
ocicollassign                                                       Alias of OCICollection::assign
ocicollassignelem                                                   Alias of OCICollection::assignElem
OCICollection::append                                               Appends element to the collection
OCICollection::assign                                               Assigns a value to the collection from another existing collection
OCICollection::assignElem                                           Assigns a value to the element of the collection
OCICollection::free                                                 Frees the resources associated with the collection object
OCICollection::getElem                                              Returns value of the element
OCICollection::max                                                  Returns the maximum number of elements in the collection
OCICollection::size                                                 Returns size of the collection
OCICollection::trim                                                 Trims elements from the end of the collection
ocicollgetelem                                                      Alias of OCICollection::getElem
ocicollmax                                                          Alias of OCICollection::max
ocicollsize                                                         Alias of OCICollection::size
ocicolltrim                                                         Alias of OCICollection::trim
ocicolumnisnull                                                     Alias of oci_field_is_null
ocicolumnname                                                       Alias of oci_field_name
ocicolumnprecision                                                  Alias of oci_field_precision
ocicolumnscale                                                      Alias of oci_field_scale
ocicolumnsize                                                       Alias of oci_field_size
ocicolumntype                                                       Alias of oci_field_type
ocicolumntyperaw                                                    Alias of oci_field_type_raw
ocicommit                                                           Alias of oci_commit
ocidefinebyname                                                     Alias of oci_define_by_name
ocierror                                                            Alias of oci_error
ociexecute                                                          Alias of oci_execute
ocifetch                                                            Alias of oci_fetch
ocifetchinto                                                        Obsolete variant of oci_fetch_array, oci_fetch_object, oci_fetch_assoc and oci_fetch_row
ocifetchstatement                                                   Alias of oci_fetch_all
ocifreecollection                                                   Alias of OCICollection::free
ocifreecursor                                                       Alias of oci_free_statement
ocifreedesc                                                         Alias of OCI-Lob::free
ocifreestatement                                                    Alias of oci_free_statement
ociinternaldebug                                                    Alias of oci_internal_debug
ociloadlob                                                          Alias of OCI-Lob::load
OCILob::append                                                      Appends data from the large object to another large object
OCILob::close                                                       Closes LOB descriptor
OCILob::eof                                                         Tests for end-of-file on a large object's descriptor
OCILob::erase                                                       Erases a specified portion of the internal LOB data
OCILob::export                                                      Exports LOB's contents to a file
OCILob::flush                                                       Flushes/writes buffer of the LOB to the server
OCILob::free                                                        Frees resources associated with the LOB descriptor
OCILob::getBuffering                                                Returns current state of buffering for the large object
OCILob::import                                                      Imports file data to the LOB
OCILob::load                                                        Returns large object's contents
OCILob::read                                                        Reads part of the large object
OCILob::rewind                                                      Moves the internal pointer to the beginning of the large object
OCILob::save                                                        Saves data to the large object
OCILob::saveFile                                                    Alias of OCILob::import
OCILob::seek                                                        Sets the internal pointer of the large object
OCILob::setBuffering                                                Changes current state of buffering for the large object
OCILob::size                                                        Returns size of large object
OCILob::tell                                                        Returns the current position of internal pointer of large object
OCILob::truncate                                                    Truncates large object
OCILob::write                                                       Writes data to the large object
OCILob::writeTemporary                                              Writes a temporary large object
OCILob::writeToFile                                                 Alias of OCILob::export
ocilogoff                                                           Alias of oci_close
ocilogon                                                            Alias of oci_connect
ocinewcollection                                                    Alias of oci_new_collection
ocinewcursor                                                        Alias of oci_new_cursor
ocinewdescriptor                                                    Alias of oci_new_descriptor
ocinlogon                                                           Alias of oci_new_connect
ocinumcols                                                          Alias of oci_num_fields
ociparse                                                            Alias of oci_parse
ociplogon                                                           Alias of oci_pconnect
ociresult                                                           Alias of oci_result
ocirollback                                                         Alias of oci_rollback
ocirowcount                                                         Alias of oci_num_rows
ocisavelob                                                          Alias of OCI-Lob::save
ocisavelobfile                                                      Alias of OCI-Lob::import
ociserverversion                                                    Alias of oci_server_version
ocisetprefetch                                                      Alias of oci_set_prefetch
ocistatementtype                                                    Alias of oci_statement_type
ociwritelobtofile                                                   Alias of OCI-Lob::export
ociwritetemporarylob                                                Alias of OCI-Lob::writeTemporary
oci_bind_array_by_name                                              Binds a PHP array to an Oracle PL/SQL array parameter
oci_bind_by_name                                                    Binds a PHP variable to an Oracle placeholder
oci_cancel                                                          Cancels reading from cursor
oci_client_version                                                  Returns the Oracle client library version
oci_close                                                           Closes an Oracle connection
oci_commit                                                          Commits the outstanding database transaction
oci_connect                                                         Connect to an Oracle database
oci_define_by_name                                                  Associates a PHP variable with a column for query fetches
oci_error                                                           Returns the last error found
oci_execute                                                         Executes a statement
oci_fetch                                                           Fetches the next row from a query into internal buffers
oci_fetch_all                                                       Fetches multiple rows from a query into a two-dimensional array
oci_fetch_array                                                     Returns the next row from a query as an associative or numeric array
oci_fetch_assoc                                                     Returns the next row from a query as an associative array
oci_fetch_object                                                    Returns the next row from a query as an object
oci_fetch_row                                                       Returns the next row from a query as a numeric array
oci_field_is_null                                                   Checks if a field in the currently fetched row is null
oci_field_name                                                      Returns the name of a field from the statement
oci_field_precision                                                 Tell the precision of a field
oci_field_scale                                                     Tell the scale of the field
oci_field_size                                                      Returns field's size
oci_field_type                                                      Returns a field's data type name
oci_field_type_raw                                                  Tell the raw Oracle data type of the field
oci_free_descriptor                                                 Frees a descriptor
oci_free_statement                                                  Frees all resources associated with statement or cursor
oci_get_implicit_resultset                                          Returns the next child statement resource from a parent statement resource that has Oracle Database Implicit Result Sets
oci_internal_debug                                                  Enables or disables internal debug output
oci_lob_copy                                                        Copies large object
oci_lob_is_equal                                                    Compares two LOB/FILE locators for equality
oci_new_collection                                                  Allocates new collection object
oci_new_connect                                                     Connect to the Oracle server using a unique connection
oci_new_cursor                                                      Allocates and returns a new cursor (statement handle)
oci_new_descriptor                                                  Initializes a new empty LOB or FILE descriptor
oci_num_fields                                                      Returns the number of result columns in a statement
oci_num_rows                                                        Returns number of rows affected during statement execution
oci_parse                                                           Prepares an Oracle statement for execution
oci_password_change                                                 Changes password of Oracle's user
oci_pconnect                                                        Connect to an Oracle database using a persistent connection
oci_register_taf_callback                                           Register a user-defined callback function for Oracle Database TAF
oci_result                                                          Returns field's value from the fetched row
oci_rollback                                                        Rolls back the outstanding database transaction
oci_server_version                                                  Returns the Oracle Database version
oci_set_action                                                      Sets the action name
oci_set_call_timeout                                                Sets a millisecond timeout for database calls
oci_set_client_identifier                                           Sets the client identifier
oci_set_client_info                                                 Sets the client information
oci_set_db_operation                                                Sets the database operation
oci_set_edition                                                     Sets the database edition
oci_set_module_name                                                 Sets the module name
oci_set_prefetch                                                    Sets number of rows to be prefetched by queries
oci_statement_type                                                  Returns the type of a statement
oci_unregister_taf_callback                                         Unregister a user-defined callback function for Oracle Database TAF
odbc_autocommit                                                     Toggle autocommit behaviour
odbc_binmode                                                        Handling of binary column data
odbc_close                                                          Close an ODBC connection
odbc_close_all                                                      Close all ODBC connections
odbc_columnprivileges                                               Lists columns and associated privileges for the given table
odbc_columns                                                        Lists the column names in specified tables
odbc_commit                                                         Commit an ODBC transaction
odbc_connect                                                        Connect to a datasource
odbc_cursor                                                         Get cursorname
odbc_data_source                                                    Returns information about available DSNs
odbc_do                                                             Alias of odbc_exec
odbc_error                                                          Get the last error code
odbc_errormsg                                                       Get the last error message
odbc_exec                                                           Directly execute an SQL statement
odbc_execute                                                        Execute a prepared statement
odbc_fetch_array                                                    Fetch a result row as an associative array
odbc_fetch_into                                                     Fetch one result row into array
odbc_fetch_object                                                   Fetch a result row as an object
odbc_fetch_row                                                      Fetch a row
odbc_field_len                                                      Get the length (precision) of a field
odbc_field_name                                                     Get the columnname
odbc_field_num                                                      Return column number
odbc_field_precision                                                Alias of odbc_field_len
odbc_field_scale                                                    Get the scale of a field
odbc_field_type                                                     Datatype of a field
odbc_foreignkeys                                                    Retrieves a list of foreign keys
odbc_free_result                                                    Free resources associated with a result
odbc_gettypeinfo                                                    Retrieves information about data types supported by the data source
odbc_longreadlen                                                    Handling of LONG columns
odbc_next_result                                                    Checks if multiple results are available
odbc_num_fields                                                     Number of columns in a result
odbc_num_rows                                                       Number of rows in a result
odbc_pconnect                                                       Open a persistent database connection
odbc_prepare                                                        Prepares a statement for execution
odbc_primarykeys                                                    Gets the primary keys for a table
odbc_procedurecolumns                                               Retrieve information about parameters to procedures
odbc_procedures                                                     Get the list of procedures stored in a specific data source
odbc_result                                                         Get result data
odbc_result_all                                                     Print result as HTML table
odbc_rollback                                                       Rollback a transaction
odbc_setoption                                                      Adjust ODBC settings
odbc_specialcolumns                                                 Retrieves special columns
odbc_statistics                                                     Retrieve statistics about a table
odbc_tableprivileges                                                Lists tables and the privileges associated with each table
odbc_tables                                                         Get the list of table names stored in a specific data source
ogg://                                                              Audio streams
opcache_compile_file                                                Compiles and caches a PHP script without executing it
opcache_get_configuration                                           Get configuration information about the cache
opcache_get_status                                                  Get status information about the cache
opcache_invalidate                                                  Invalidates a cached script
opcache_is_script_cached                                            Tells whether a script is cached in OPCache
opcache_reset                                                       Resets the contents of the opcode cache
openal_buffer_create                                                Generate OpenAL buffer
openal_buffer_data                                                  Load a buffer with data
openal_buffer_destroy                                               Destroys an OpenAL buffer
openal_buffer_get                                                   Retrieve an OpenAL buffer property
openal_buffer_loadwav                                               Load a .wav file into a buffer
openal_context_create                                               Create an audio processing context
openal_context_current                                              Make the specified context current
openal_context_destroy                                              Destroys a context
openal_context_process                                              Process the specified context
openal_context_suspend                                              Suspend the specified context
openal_device_close                                                 Close an OpenAL device
openal_device_open                                                  Initialize the OpenAL audio layer
openal_listener_get                                                 Retrieve a listener property
openal_listener_set                                                 Set a listener property
openal_source_create                                                Generate a source resource
openal_source_destroy                                               Destroy a source resource
openal_source_get                                                   Retrieve an OpenAL source property
openal_source_pause                                                 Pause the source
openal_source_play                                                  Start playing the source
openal_source_rewind                                                Rewind the source
openal_source_set                                                   Set source property
openal_source_stop                                                  Stop playing the source
openal_stream                                                       Begin streaming on a source
openssl_cms_decrypt                                                 Decrypt a CMS message
openssl_cms_encrypt                                                 Encrypt a CMS message
openssl_cms_read                                                    Export the CMS file to an array of PEM certificates
openssl_cms_sign                                                    Sign a file
openssl_cms_verify                                                  Verify a CMS signature
openssl_pkey_derive                                                 Computes shared secret for public value of remote and local DH or ECDH key
openssl_x509_verify                                                 Verifies digital signature of x509 certificate against a public key
OuterIterator::getInnerIterator                                     Returns the inner iterator for the current entry
parallel\bootstrap                                                  Bootstrapping
parallel\Channel::close                                             Closing
parallel\Channel::make                                              Access
parallel\Channel::open                                              Access
parallel\Channel::recv                                              Sharing
parallel\Channel::send                                              Sharing
parallel\Channel::__construct                                       Channel Construction
parallel\Events::addChannel                                         Targets
parallel\Events::addFuture                                          Targets
parallel\Events::poll                                               Polling
parallel\Events::remove                                             Targets
parallel\Events::setBlocking                                        Behaviour
parallel\Events::setInput                                           Input
parallel\Events::setTimeout                                         Behaviour
parallel\Events\Input::add                                          Inputs
parallel\Events\Input::clear                                        Inputs
parallel\Events\Input::remove                                       Inputs
parallel\Future::cancel                                             Cancellation
parallel\Future::cancelled                                          State Detection
parallel\Future::done                                               State Detection
parallel\Future::value                                              Resolution
parallel\run                                                        Execution
parallel\Runtime::close                                             Runtime Graceful Join
parallel\Runtime::kill                                              Runtime Join
parallel\Runtime::run                                               Execution
parallel\Runtime::__construct                                       Runtime Construction
parallel\Sync::get                                                  Access
parallel\Sync::notify                                               Synchronization
parallel\Sync::set                                                  Access
parallel\Sync::wait                                                 Synchronization
parallel\Sync::__construct                                          Construction
parallel\Sync::__invoke                                             Synchronization
ParentIterator::accept                                              Determines acceptability
ParentIterator::getChildren                                         Return the inner iterator's children contained in a ParentIterator
ParentIterator::hasChildren                                         Check whether the inner iterator's current element has children
ParentIterator::next                                                Move the iterator forward
ParentIterator::rewind                                              Rewind the iterator
ParentIterator::__construct                                         Constructs a ParentIterator
Parle\Lexer::advance                                                Process next lexer rule
Parle\Lexer::build                                                  Finalize the lexer rule set
Parle\Lexer::callout                                                Define token callback
Parle\Lexer::consume                                                Pass the data for processing
Parle\Lexer::dump                                                   Dump the state machine
Parle\Lexer::getToken                                               Retrieve the current token
Parle\Lexer::insertMacro                                            Insert regex macro
Parle\Lexer::push                                                   Add a lexer rule
Parle\Lexer::reset                                                  Reset lexer
Parle\Parser::advance                                               Process next parser rule
Parle\Parser::build                                                 Finalize the grammar rules
Parle\Parser::consume                                               Consume the data for processing
Parle\Parser::dump                                                  Dump the grammar
Parle\Parser::errorInfo                                             Retrieve the error information
Parle\Parser::left                                                  Declare a token with left-associativity
Parle\Parser::nonassoc                                              Declare a token with no associativity
Parle\Parser::precedence                                            Declare a precedence rule
Parle\Parser::push                                                  Add a grammar rule
Parle\Parser::reset                                                 Reset parser state
Parle\Parser::right                                                 Declare a token with right-associativity
Parle\Parser::sigil                                                 Retrieve a matching part of a rule
Parle\Parser::token                                                 Declare a token
Parle\Parser::tokenId                                               Get token id
Parle\Parser::trace                                                 Trace the parser operation
Parle\Parser::validate                                              Validate input
Parle\RLexer::advance                                               Process next lexer rule
Parle\RLexer::build                                                 Finalize the lexer rule set
Parle\RLexer::callout                                               Define token callback
Parle\RLexer::consume                                               Pass the data for processing
Parle\RLexer::dump                                                  Dump the state machine
Parle\RLexer::getToken                                              Retrieve the current token
Parle\RLexer::insertMacro                                           Insert regex macro
Parle\RLexer::push                                                  Add a lexer rule
Parle\RLexer::pushState                                             Push a new start state
Parle\RLexer::reset                                                 Reset lexer
Parle\RParser::advance                                              Process next parser rule
Parle\RParser::build                                                Finalize the grammar rules
Parle\RParser::consume                                              Consume the data for processing
Parle\RParser::dump                                                 Dump the grammar
Parle\RParser::errorInfo                                            Retrieve the error information
Parle\RParser::left                                                 Declare a token with left-associativity
Parle\RParser::nonassoc                                             Declare a token with no associativity
Parle\RParser::precedence                                           Declare a precedence rule
Parle\RParser::push                                                 Add a grammar rule
Parle\RParser::reset                                                Reset parser state
Parle\RParser::right                                                Declare a token with right-associativity
Parle\RParser::sigil                                                Retrieve a matching part of a rule
Parle\RParser::token                                                Declare a token
Parle\RParser::tokenId                                              Get token id
Parle\RParser::trace                                                Trace the parser operation
Parle\RParser::validate                                             Validate input
Parle\Stack::pop                                                    Pop an item from the stack
Parle\Stack::push                                                   Push an item into the stack
password_algos                                                      Get available password hashing algorithm IDs
pcntl_alarm                                                         Set an alarm clock for delivery of a signal
pcntl_async_signals                                                 Enable/disable asynchronous signal handling or return the old setting
pcntl_errno                                                         Alias of pcntl_get_last_error
pcntl_exec                                                          Executes specified program in current process space
pcntl_fork                                                          Forks the currently running process
pcntl_getpriority                                                   Get the priority of any process
pcntl_get_last_error                                                Retrieve the error number set by the last pcntl function which failed
pcntl_setpriority                                                   Change the priority of any process
pcntl_signal                                                        Installs a signal handler
pcntl_signal_dispatch                                               Calls signal handlers for pending signals
pcntl_signal_get_handler                                            Get the current handler for specified signal
pcntl_sigprocmask                                                   Sets and retrieves blocked signals
pcntl_sigtimedwait                                                  Waits for signals, with a timeout
pcntl_sigwaitinfo                                                   Waits for signals
pcntl_strerror                                                      Retrieve the system error message associated with the given errno
pcntl_wait                                                          Waits on or returns the status of a forked child
pcntl_waitpid                                                       Waits on or returns the status of a forked child
pcntl_wexitstatus                                                   Returns the return code of a terminated child
pcntl_wifexited                                                     Checks if status code represents a normal exit
pcntl_wifsignaled                                                   Checks whether the status code represents a termination due to a signal
pcntl_wifstopped                                                    Checks whether the child process is currently stopped
pcntl_wstopsig                                                      Returns the signal which caused the child to stop
pcntl_wtermsig                                                      Returns the signal which caused the child to terminate
PDO::beginTransaction                                               Initiates a transaction
PDO::commit                                                         Commits a transaction
PDO::cubrid_schema                                                  Get the requested schema information
PDO::errorCode                                                      Fetch the SQLSTATE associated with the last operation on the database handle
PDO::errorInfo                                                      Fetch extended error information associated with the last operation on the database handle
PDO::exec                                                           Execute an SQL statement and return the number of affected rows
PDO::getAttribute                                                   Retrieve a database connection attribute
PDO::getAvailableDrivers                                            Return an array of available PDO drivers
PDO::inTransaction                                                  Checks if inside a transaction
PDO::lastInsertId                                                   Returns the ID of the last inserted row or sequence value
PDO::pgsqlCopyFromArray                                             Copy data from PHP array into table
PDO::pgsqlCopyFromFile                                              Copy data from file into table
PDO::pgsqlCopyToArray                                               Copy data from database table into PHP array
PDO::pgsqlCopyToFile                                                Copy data from table into file
PDO::pgsqlGetNotify                                                 Get asynchronous notification
PDO::pgsqlGetPid                                                    Get the server PID
PDO::pgsqlLOBCreate                                                 Creates a new large object
PDO::pgsqlLOBOpen                                                   Opens an existing large object stream
PDO::pgsqlLOBUnlink                                                 Deletes the large object
PDO::prepare                                                        Prepares a statement for execution and returns a statement object
PDO::query                                                          Executes an SQL statement, returning a result set as a PDOStatement object
PDO::quote                                                          Quotes a string for use in a query
PDO::rollBack                                                       Rolls back a transaction
PDO::setAttribute                                                   Set an attribute
PDO::sqliteCreateAggregate                                          Registers an aggregating User Defined Function for use in SQL statements
PDO::sqliteCreateCollation                                          Registers a User Defined Function for use as a collating function in SQL statements
PDO::sqliteCreateFunction                                           Registers a User Defined Function for use in SQL statements
PDO::__construct                                                    Creates a PDO instance representing a connection to a database
PDOStatement::bindColumn                                            Bind a column to a PHP variable
PDOStatement::bindParam                                             Binds a parameter to the specified variable name
PDOStatement::bindValue                                             Binds a value to a parameter
PDOStatement::closeCursor                                           Closes the cursor, enabling the statement to be executed again
PDOStatement::columnCount                                           Returns the number of columns in the result set
PDOStatement::debugDumpParams                                       Dump an SQL prepared command
PDOStatement::errorCode                                             Fetch the SQLSTATE associated with the last operation on the statement handle
PDOStatement::errorInfo                                             Fetch extended error information associated with the last operation on the statement handle
PDOStatement::execute                                               Executes a prepared statement
PDOStatement::fetch                                                 Fetches the next row from a result set
PDOStatement::fetchAll                                              Returns an array containing all of the result set rows
PDOStatement::fetchColumn                                           Returns a single column from the next row of a result set
PDOStatement::fetchObject                                           Fetches the next row and returns it as an object
PDOStatement::getAttribute                                          Retrieve a statement attribute
PDOStatement::getColumnMeta                                         Returns metadata for a column in a result set
PDOStatement::nextRowset                                            Advances to the next rowset in a multi-rowset statement handle
PDOStatement::rowCount                                              Returns the number of rows affected by the last SQL statement
PDOStatement::setAttribute                                          Set a statement attribute
PDOStatement::setFetchMode                                          Set the default fetch mode for this statement
PDO_CUBRID DSN                                                      Connecting to CUBRID databases
PDO_DBLIB DSN                                                       Connecting to Microsoft SQL Server and Sybase databases
PDO_FIREBIRD DSN                                                    Connecting to Firebird databases
PDO_IBM DSN                                                         Connecting to IBM databases
PDO_INFORMIX DSN                                                    Connecting to Informix databases
PDO_MYSQL DSN                                                       Connecting to MySQL databases
PDO_OCI DSN                                                         Connecting to Oracle databases
PDO_ODBC DSN                                                        Connecting to ODBC or DB2 databases
PDO_PGSQL DSN                                                       Connecting to PostgreSQL databases
PDO_SQLITE DSN                                                      Connecting to SQLite databases
PDO_SQLSRV DSN                                                      Connecting to MS SQL Server and SQL Azure databases
pg_affected_rows                                                    Returns number of affected records (tuples)
pg_cancel_query                                                     Cancel an asynchronous query
pg_client_encoding                                                  Gets the client encoding
pg_close                                                            Closes a PostgreSQL connection
pg_connect                                                          Open a PostgreSQL connection
pg_connection_busy                                                  Get connection is busy or not
pg_connection_reset                                                 Reset connection (reconnect)
pg_connection_status                                                Get connection status
pg_connect_poll                                                     Poll the status of an in-progress asynchronous PostgreSQL connection attempt
pg_consume_input                                                    Reads input on the connection
pg_convert                                                          Convert associative array values into forms suitable for SQL statements
pg_copy_from                                                        Insert records into a table from an array
pg_copy_to                                                          Copy a table to an array
pg_dbname                                                           Get the database name
pg_delete                                                           Deletes records
pg_end_copy                                                         Sync with PostgreSQL backend
pg_escape_bytea                                                     Escape a string for insertion into a bytea field
pg_escape_identifier                                                Escape a identifier for insertion into a text field
pg_escape_literal                                                   Escape a literal for insertion into a text field
pg_escape_string                                                    Escape a string for query
pg_execute                                                          Sends a request to execute a prepared statement with given parameters, and waits for the result
pg_fetch_all                                                        Fetches all rows from a result as an array
pg_fetch_all_columns                                                Fetches all rows in a particular result column as an array
pg_fetch_array                                                      Fetch a row as an array
pg_fetch_assoc                                                      Fetch a row as an associative array
pg_fetch_object                                                     Fetch a row as an object
pg_fetch_result                                                     Returns values from a result resource
pg_fetch_row                                                        Get a row as an enumerated array
pg_field_is_null                                                    Test if a field is SQL NULL
pg_field_name                                                       Returns the name of a field
pg_field_num                                                        Returns the field number of the named field
pg_field_prtlen                                                     Returns the printed length
pg_field_size                                                       Returns the internal storage size of the named field
pg_field_table                                                      Returns the name or oid of the tables field
pg_field_type                                                       Returns the type name for the corresponding field number
pg_field_type_oid                                                   Returns the type ID (OID) for the corresponding field number
pg_flush                                                            Flush outbound query data on the connection
pg_free_result                                                      Free result memory
pg_get_notify                                                       Gets SQL NOTIFY message
pg_get_pid                                                          Gets the backend's process ID
pg_get_result                                                       Get asynchronous query result
pg_host                                                             Returns the host name associated with the connection
pg_insert                                                           Insert array into table
pg_last_error                                                       Get the last error message string of a connection
pg_last_notice                                                      Returns the last notice message from PostgreSQL server
pg_last_oid                                                         Returns the last row's OID
pg_lo_close                                                         Close a large object
pg_lo_create                                                        Create a large object
pg_lo_export                                                        Export a large object to file
pg_lo_import                                                        Import a large object from file
pg_lo_open                                                          Open a large object
pg_lo_read                                                          Read a large object
pg_lo_read_all                                                      Reads an entire large object and send straight to browser
pg_lo_seek                                                          Seeks position within a large object
pg_lo_tell                                                          Returns current seek position a of large object
pg_lo_truncate                                                      Truncates a large object
pg_lo_unlink                                                        Delete a large object
pg_lo_write                                                         Write to a large object
pg_meta_data                                                        Get meta data for table
pg_num_fields                                                       Returns the number of fields in a result
pg_num_rows                                                         Returns the number of rows in a result
pg_options                                                          Get the options associated with the connection
pg_parameter_status                                                 Looks up a current parameter setting of the server
pg_pconnect                                                         Open a persistent PostgreSQL connection
pg_ping                                                             Ping database connection
pg_port                                                             Return the port number associated with the connection
pg_prepare                                                          Submits a request to create a prepared statement with the given parameters, and waits for completion
pg_put_line                                                         Send a NULL-terminated string to PostgreSQL backend
pg_query                                                            Execute a query
pg_query_params                                                     Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text
pg_result_error                                                     Get error message associated with result
pg_result_error_field                                               Returns an individual field of an error report
pg_result_seek                                                      Set internal row offset in result resource
pg_result_status                                                    Get status of query result
pg_select                                                           Select records
pg_send_execute                                                     Sends a request to execute a prepared statement with given parameters, without waiting for the result(s)
pg_send_prepare                                                     Sends a request to create a prepared statement with the given parameters, without waiting for completion
pg_send_query                                                       Sends asynchronous query
pg_send_query_params                                                Submits a command and separate parameters to the server without waiting for the result(s)
pg_set_client_encoding                                              Set the client encoding
pg_set_error_verbosity                                              Determines the verbosity of messages returned by pg_last_error and pg_result_error
pg_socket                                                           Get a read only handle to the socket underlying a PostgreSQL connection
pg_trace                                                            Enable tracing a PostgreSQL connection
pg_transaction_status                                               Returns the current in-transaction status of the server
pg_tty                                                              Return the TTY name associated with the connection
pg_unescape_bytea                                                   Unescape binary for bytea type
pg_untrace                                                          Disable tracing of a PostgreSQL connection
pg_update                                                           Update table
pg_version                                                          Returns an array with client, protocol and server version (when available)
phar://                                                             PHP Archive
Phar::addEmptyDir                                                   Add an empty directory to the phar archive
Phar::addFile                                                       Add a file from the filesystem to the phar archive
Phar::addFromString                                                 Add a file from a string to the phar archive
Phar::apiVersion                                                    Returns the api version
Phar::buildFromDirectory                                            Construct a phar archive from the files within a directory
Phar::buildFromIterator                                             Construct a phar archive from an iterator
Phar::canCompress                                                   Returns whether phar extension supports compression using either zlib or bzip2
Phar::canWrite                                                      Returns whether phar extension supports writing and creating phars
Phar::compress                                                      Compresses the entire Phar archive using Gzip or Bzip2 compression
Phar::compressFiles                                                 Compresses all files in the current Phar archive
Phar::convertToData                                                 Convert a phar archive to a non-executable tar or zip file
Phar::convertToExecutable                                           Convert a phar archive to another executable phar archive file format
Phar::copy                                                          Copy a file internal to the phar archive to another new file within the phar
Phar::count                                                         Returns the number of entries (files) in the Phar archive
Phar::createDefaultStub                                             Create a phar-file format specific stub
Phar::decompress                                                    Decompresses the entire Phar archive
Phar::decompressFiles                                               Decompresses all files in the current Phar archive
Phar::delete                                                        Delete a file within a phar archive
Phar::delMetadata                                                   Deletes the global metadata of the phar
Phar::extractTo                                                     Extract the contents of a phar archive to a directory
Phar::getAlias                                                      Get the alias for Phar
Phar::getMetadata                                                   Returns phar archive meta-data
Phar::getModified                                                   Return whether phar was modified
Phar::getPath                                                       Get the real path to the Phar archive on disk
Phar::getSignature                                                  Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive
Phar::getStub                                                       Return the PHP loader or bootstrap stub of a Phar archive
Phar::getSupportedCompression                                       Return array of supported compression algorithms
Phar::getSupportedSignatures                                        Return array of supported signature types
Phar::getVersion                                                    Return version info of Phar archive
Phar::hasMetadata                                                   Returns whether phar has global meta-data
Phar::interceptFileFuncs                                            Instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions
Phar::isBuffering                                                   Used to determine whether Phar write operations are being buffered, or are flushing directly to disk
Phar::isCompressed                                                  Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on)
Phar::isFileFormat                                                  Returns true if the phar archive is based on the tar/phar/zip file format depending on the parameter
Phar::isValidPharFilename                                           Returns whether the given filename is a valid phar filename
Phar::isWritable                                                    Returns true if the phar archive can be modified
Phar::loadPhar                                                      Loads any phar archive with an alias
Phar::mapPhar                                                       Reads the currently executed file (a phar) and registers its manifest
Phar::mount                                                         Mount an external path or file to a virtual location within the phar archive
Phar::mungServer                                                    Defines a list of up to 4 $_SERVER variables that should be modified for execution
Phar::offsetExists                                                  Determines whether a file exists in the phar
Phar::offsetGet                                                     Gets a PharFileInfo object for a specific file
Phar::offsetSet                                                     Set the contents of an internal file to those of an external file
Phar::offsetUnset                                                   Remove a file from a phar
Phar::running                                                       Returns the full path on disk or full phar URL to the currently executing Phar archive
Phar::setAlias                                                      Set the alias for the Phar archive
Phar::setDefaultStub                                                Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader
Phar::setMetadata                                                   Sets phar archive meta-data
Phar::setSignatureAlgorithm                                         Set the signature algorithm for a phar and apply it
Phar::setStub                                                       Used to set the PHP loader or bootstrap stub of a Phar archive
Phar::startBuffering                                                Start buffering Phar write operations, do not modify the Phar object on disk
Phar::stopBuffering                                                 Stop buffering write requests to the Phar archive, and save changes to disk
Phar::unlinkArchive                                                 Completely remove a phar archive from disk and from memory
Phar::webPhar                                                       mapPhar for web-based phars. front controller for web applications
Phar::__construct                                                   Construct a Phar archive object
Phar context options                                                Phar context option listing
PharData::addEmptyDir                                               Add an empty directory to the tar/zip archive
PharData::addFile                                                   Add a file from the filesystem to the tar/zip archive
PharData::addFromString                                             Add a file from the filesystem to the tar/zip archive
PharData::buildFromDirectory                                        Construct a tar/zip archive from the files within a directory
PharData::buildFromIterator                                         Construct a tar or zip archive from an iterator
PharData::compress                                                  Compresses the entire tar/zip archive using Gzip or Bzip2 compression
PharData::compressFiles                                             Compresses all files in the current tar/zip archive
PharData::convertToData                                             Convert a phar archive to a non-executable tar or zip file
PharData::convertToExecutable                                       Convert a non-executable tar/zip archive to an executable phar archive
PharData::copy                                                      Copy a file internal to the phar archive to another new file within the phar
PharData::decompress                                                Decompresses the entire Phar archive
PharData::decompressFiles                                           Decompresses all files in the current zip archive
PharData::delete                                                    Delete a file within a tar/zip archive
PharData::delMetadata                                               Deletes the global metadata of a zip archive
PharData::extractTo                                                 Extract the contents of a tar/zip archive to a directory
PharData::isWritable                                                Returns true if the tar/zip archive can be modified
PharData::offsetSet                                                 Set the contents of a file within the tar/zip to those of an external file or string
PharData::offsetUnset                                               Remove a file from a tar/zip archive
PharData::setAlias                                                  Dummy function (Phar::setAlias is not valid for PharData)
PharData::setDefaultStub                                            Dummy function (Phar::setDefaultStub is not valid for PharData)
PharData::setMetadata                                               Sets phar archive meta-data
PharData::setSignatureAlgorithm                                     Set the signature algorithm for a phar and apply it
PharData::setStub                                                   Dummy function (Phar::setStub is not valid for PharData)
PharData::__construct                                               Construct a non-executable tar or zip archive object
PharFileInfo::chmod                                                 Sets file-specific permission bits
PharFileInfo::compress                                              Compresses the current Phar entry with either zlib or bzip2 compression
PharFileInfo::decompress                                            Decompresses the current Phar entry within the phar
PharFileInfo::delMetadata                                           Deletes the metadata of the entry
PharFileInfo::getCompressedSize                                     Returns the actual size of the file (with compression) inside the Phar archive
PharFileInfo::getContent                                            Get the complete file contents of the entry
PharFileInfo::getCRC32                                              Returns CRC32 code or throws an exception if CRC has not been verified
PharFileInfo::getMetadata                                           Returns file-specific meta-data saved with a file
PharFileInfo::getPharFlags                                          Returns the Phar file entry flags
PharFileInfo::hasMetadata                                           Returns the metadata of the entry
PharFileInfo::isCompressed                                          Returns whether the entry is compressed
PharFileInfo::isCRCChecked                                          Returns whether file entry has had its CRC verified
PharFileInfo::setMetadata                                           Sets file-specific meta-data saved with a file
PharFileInfo::__construct                                           Construct a Phar entry object
php://                                                              Accessing various I/O streams
phpdbg_break_file                                                   Inserts a breakpoint at a line in a file
phpdbg_break_function                                               Inserts a breakpoint at entry to a function
phpdbg_break_method                                                 Inserts a breakpoint at entry to a method
phpdbg_break_next                                                   Inserts a breakpoint at the next opcode
phpdbg_clear                                                        Clears all breakpoints
phpdbg_color                                                        Sets the color of certain elements
phpdbg_end_oplog                                                    Description
phpdbg_exec                                                         Attempts to set the execution context
phpdbg_get_executable                                               Description
phpdbg_prompt                                                       Sets the command prompt
phpdbg_start_oplog                                                  Description
phpinfo                                                             Outputs information about PHP's configuration
PhpToken::getTokenName                                              Returns the name of the token.
PhpToken::is                                                        Tells whether the token is of given kind.
PhpToken::isIgnorable                                               Tells whether the token would be ignored by the PHP parser.
PhpToken::tokenize                                                  Splits given source into PHP tokens, represented by PhpToken objects.
PhpToken::__construct                                               Returns a new PhpToken object
PhpToken::__toString                                                Returns the textual content of the token.
php_user_filter::filter                                             Called when applying the filter
php_user_filter::onClose                                            Called when closing the filter
php_user_filter::onCreate                                           Called when creating the filter
pht\AtomicInteger::dec                                              Decrements the atomic integer's value by one
pht\AtomicInteger::get                                              Gets the atomic integer's value
pht\AtomicInteger::inc                                              Increments the atomic integer's value by one
pht\AtomicInteger::lock                                             Acquires the atomic integer's mutex lock
pht\AtomicInteger::set                                              Sets the atomic integer's value
pht\AtomicInteger::unlock                                           Releases the atomic integer's mutex lock
pht\AtomicInteger::__construct                                      AtomicInteger creation
pht\HashTable::lock                                                 Acquires the hash table's mutex lock
pht\HashTable::size                                                 Gets the size of the hash table
pht\HashTable::unlock                                               Releases the hash table's mutex lock
pht\Queue::front                                                    Returns the first value from a queue
pht\Queue::lock                                                     Acquires the queue's mutex lock
pht\Queue::pop                                                      Pops a value off of the front of a queue
pht\Queue::push                                                     Pushes a value to the end of a queue
pht\Queue::size                                                     Gets the size of the queue
pht\Queue::unlock                                                   Releases the queue's mutex lock
pht\Runnable::run                                                   The entry point of a threaded class
pht\Thread::addClassTask                                            Class threading
pht\Thread::addFileTask                                             File threading
pht\Thread::addFunctionTask                                         Function threading
pht\Thread::join                                                    Joins a thread
pht\Thread::start                                                   Starts the new thread
pht\Thread::taskCount                                               Gets a thread's task count
pht\Threaded::lock                                                  Acquires the mutex lock
pht\Threaded::unlock                                                Releases the mutex lock
pht\Vector::deleteAt                                                Deletes a value in the vector
pht\Vector::insertAt                                                Inserts a value into the vector
pht\Vector::lock                                                    Acquires the vector's mutex lock
pht\Vector::pop                                                     Pops a value to the vector
pht\Vector::push                                                    Pushes a value to the vector
pht\Vector::resize                                                  Resizes a vector
pht\Vector::shift                                                   Shifts a value from the vector
pht\Vector::size                                                    Gets the size of the vector
pht\Vector::unlock                                                  Releases the vector's mutex lock
pht\Vector::unshift                                                 Unshifts a value to the vector front
pht\Vector::updateAt                                                Updates a value in the vector
pht\Vector::__construct                                             Vector creation
png2wbmp                                                            Convert PNG image file to WBMP image file
Pool::collect                                                       Collect references to completed tasks
Pool::resize                                                        Resize the Pool
Pool::shutdown                                                      Shutdown all workers
Pool::submit                                                        Submits an object for execution
Pool::submitTo                                                      Submits a task to a specific worker for execution
Pool::__construct                                                   Creates a new Pool of Workers
preg_last_error_msg                                                 Returns the error message of the last PCRE regex execution
preg_match                                                          Perform a regular expression match
preg_match_all                                                      Perform a global regular expression match
print                                                               Output a string
print_r                                                             Prints human-readable information about a variable
pspell_add_to_personal                                              Add the word to a personal wordlist
pspell_add_to_session                                               Add the word to the wordlist in the current session
pspell_check                                                        Check a word
pspell_clear_session                                                Clear the current session
pspell_config_create                                                Create a config used to open a dictionary
pspell_config_data_dir                                              Location of language data files
pspell_config_dict_dir                                              Location of the main word list
pspell_config_ignore                                                Ignore words less than N characters long
pspell_config_mode                                                  Change the mode number of suggestions returned
pspell_config_personal                                              Set a file that contains personal wordlist
pspell_config_repl                                                  Set a file that contains replacement pairs
pspell_config_runtogether                                           Consider run-together words as valid compounds
pspell_config_save_repl                                             Determine whether to save a replacement pairs list along with the wordlist
pspell_new                                                          Load a new dictionary
pspell_new_config                                                   Load a new dictionary with settings based on a given config
pspell_new_personal                                                 Load a new dictionary with personal wordlist
pspell_save_wordlist                                                Save the personal wordlist to a file
pspell_store_replacement                                            Store a replacement pair for a word
pspell_suggest                                                      Suggest spellings of a word
ps_add_bookmark                                                     Add bookmark to current page
ps_add_launchlink                                                   Adds link which launches file
ps_add_locallink                                                    Adds link to a page in the same document
ps_add_note                                                         Adds note to current page
ps_add_pdflink                                                      Adds link to a page in a second pdf document
ps_add_weblink                                                      Adds link to a web location
ps_arc                                                              Draws an arc counterclockwise
ps_arcn                                                             Draws an arc clockwise
ps_begin_page                                                       Start a new page
ps_begin_pattern                                                    Start a new pattern
ps_begin_template                                                   Start a new template
ps_circle                                                           Draws a circle
ps_clip                                                             Clips drawing to current path
ps_close                                                            Closes a PostScript document
ps_closepath                                                        Closes path
ps_closepath_stroke                                                 Closes and strokes path
ps_close_image                                                      Closes image and frees memory
ps_continue_text                                                    Continue text in next line
ps_curveto                                                          Draws a curve
ps_delete                                                           Deletes all resources of a PostScript document
ps_end_page                                                         End a page
ps_end_pattern                                                      End a pattern
ps_end_template                                                     End a template
ps_fill                                                             Fills the current path
ps_fill_stroke                                                      Fills and strokes the current path
ps_findfont                                                         Loads a font
ps_get_buffer                                                       Fetches the full buffer containig the generated PS data
ps_get_parameter                                                    Gets certain parameters
ps_get_value                                                        Gets certain values
ps_hyphenate                                                        Hyphenates a word
ps_include_file                                                     Reads an external file with raw PostScript code
ps_lineto                                                           Draws a line
ps_makespotcolor                                                    Create spot color
ps_moveto                                                           Sets current point
ps_new                                                              Creates a new PostScript document object
ps_open_file                                                        Opens a file for output
ps_open_image                                                       Reads an image for later placement
ps_open_image_file                                                  Opens image from file
ps_open_memory_image                                                Takes an GD image and returns an image for placement in a PS document
ps_place_image                                                      Places image on the page
ps_rect                                                             Draws a rectangle
ps_restore                                                          Restore previously save context
ps_rotate                                                           Sets rotation factor
ps_save                                                             Save current context
ps_scale                                                            Sets scaling factor
ps_setcolor                                                         Sets current color
ps_setdash                                                          Sets appearance of a dashed line
ps_setflat                                                          Sets flatness
ps_setfont                                                          Sets font to use for following output
ps_setgray                                                          Sets gray value
ps_setlinecap                                                       Sets appearance of line ends
ps_setlinejoin                                                      Sets how contected lines are joined
ps_setlinewidth                                                     Sets width of a line
ps_setmiterlimit                                                    Sets the miter limit
ps_setoverprintmode                                                 Sets overprint mode
ps_setpolydash                                                      Sets appearance of a dashed line
ps_set_border_color                                                 Sets color of border for annotations
ps_set_border_dash                                                  Sets length of dashes for border of annotations
ps_set_border_style                                                 Sets border style of annotations
ps_set_info                                                         Sets information fields of document
ps_set_parameter                                                    Sets certain parameters
ps_set_text_pos                                                     Sets position for text output
ps_set_value                                                        Sets certain values
ps_shading                                                          Creates a shading for later use
ps_shading_pattern                                                  Creates a pattern based on a shading
ps_shfill                                                           Fills an area with a shading
ps_show                                                             Output text
ps_show2                                                            Output a text at current position
ps_show_boxed                                                       Output text in a box
ps_show_xy                                                          Output text at given position
ps_show_xy2                                                         Output text at position
ps_stringwidth                                                      Gets width of a string
ps_string_geometry                                                  Gets geometry of a string
ps_stroke                                                           Draws the current path
ps_symbol                                                           Output a glyph
ps_symbol_name                                                      Gets name of a glyph
ps_symbol_width                                                     Gets width of a glyph
ps_translate                                                        Sets translation
px_close                                                            Closes a paradox database
px_create_fp                                                        Create a new paradox database
px_date2string                                                      Converts a date into a string
px_delete                                                           Deletes resource of paradox database
px_delete_record                                                    Deletes record from paradox database
px_get_field                                                        Returns the specification of a single field
px_get_info                                                         Return lots of information about a paradox file
px_get_parameter                                                    Gets a parameter
px_get_record                                                       Returns record of paradox database
px_get_schema                                                       Returns the database schema
px_get_value                                                        Gets a value
px_insert_record                                                    Inserts record into paradox database
px_new                                                              Create a new paradox object
px_numfields                                                        Returns number of fields in a database
px_numrecords                                                       Returns number of records in a database
px_open_fp                                                          Open paradox database
px_put_record                                                       Stores record into paradox database
px_retrieve_record                                                  Returns record of paradox database
px_set_blob_file                                                    Sets the file where blobs are read from
px_set_parameter                                                    Sets a parameter
px_set_tablename                                                    Sets the name of a table (deprecated)
px_set_targetencoding                                               Sets the encoding for character fields (deprecated)
px_set_value                                                        Sets a value
px_timestamp2string                                                 Converts the timestamp into a string
px_update_record                                                    Updates record in paradox database
QuickHashIntHash::add                                               This method adds a new entry to the hash
QuickHashIntHash::delete                                            This method deletes am entry from the hash
QuickHashIntHash::exists                                            This method checks whether a key is part of the hash
QuickHashIntHash::get                                               This method retrieves a value from the hash by its key
QuickHashIntHash::getSize                                           Returns the number of elements in the hash
QuickHashIntHash::loadFromFile                                      This factory method creates a hash from a file
QuickHashIntHash::loadFromString                                    This factory method creates a hash from a string
QuickHashIntHash::saveToFile                                        This method stores an in-memory hash to disk
QuickHashIntHash::saveToString                                      This method returns a serialized version of the hash
QuickHashIntHash::set                                               This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist
QuickHashIntHash::update                                            This method updates an entry in the hash with a new value
QuickHashIntHash::__construct                                       Creates a new QuickHashIntHash object
QuickHashIntSet::add                                                This method adds a new entry to the set
QuickHashIntSet::delete                                             This method deletes an entry from the set
QuickHashIntSet::exists                                             This method checks whether a key is part of the set
QuickHashIntSet::getSize                                            Returns the number of elements in the set
QuickHashIntSet::loadFromFile                                       This factory method creates a set from a file
QuickHashIntSet::loadFromString                                     This factory method creates a set from a string
QuickHashIntSet::saveToFile                                         This method stores an in-memory set to disk
QuickHashIntSet::saveToString                                       This method returns a serialized version of the set
QuickHashIntSet::__construct                                        Creates a new QuickHashIntSet object
QuickHashIntStringHash::add                                         This method adds a new entry to the hash
QuickHashIntStringHash::delete                                      This method deletes am entry from the hash
QuickHashIntStringHash::exists                                      This method checks whether a key is part of the hash
QuickHashIntStringHash::get                                         This method retrieves a value from the hash by its key
QuickHashIntStringHash::getSize                                     Returns the number of elements in the hash
QuickHashIntStringHash::loadFromFile                                This factory method creates a hash from a file
QuickHashIntStringHash::loadFromString                              This factory method creates a hash from a string
QuickHashIntStringHash::saveToFile                                  This method stores an in-memory hash to disk
QuickHashIntStringHash::saveToString                                This method returns a serialized version of the hash
QuickHashIntStringHash::set                                         This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist
QuickHashIntStringHash::update                                      This method updates an entry in the hash with a new value
QuickHashIntStringHash::__construct                                 Creates a new QuickHashIntStringHash object
QuickHashStringIntHash::add                                         This method adds a new entry to the hash
QuickHashStringIntHash::delete                                      This method deletes am entry from the hash
QuickHashStringIntHash::exists                                      This method checks whether a key is part of the hash
QuickHashStringIntHash::get                                         This method retrieves a value from the hash by its key
QuickHashStringIntHash::getSize                                     Returns the number of elements in the hash
QuickHashStringIntHash::loadFromFile                                This factory method creates a hash from a file
QuickHashStringIntHash::loadFromString                              This factory method creates a hash from a string
QuickHashStringIntHash::saveToFile                                  This method stores an in-memory hash to disk
QuickHashStringIntHash::saveToString                                This method returns a serialized version of the hash
QuickHashStringIntHash::set                                         This method updates an entry in the hash with a new value, or adds a new one if the entry doesn't exist
QuickHashStringIntHash::update                                      This method updates an entry in the hash with a new value
QuickHashStringIntHash::__construct                                 Creates a new QuickHashStringIntHash object
radius_acct_open                                                    Creates a Radius handle for accounting
radius_add_server                                                   Adds a server
radius_auth_open                                                    Creates a Radius handle for authentication
radius_close                                                        Frees all ressources
radius_config                                                       Causes the library to read the given configuration file
radius_create_request                                               Create accounting or authentication request
radius_cvt_addr                                                     Converts raw data to IP-Address
radius_cvt_int                                                      Converts raw data to integer
radius_cvt_string                                                   Converts raw data to string
radius_demangle                                                     Demangles data
radius_demangle_mppe_key                                            Derives mppe-keys from mangled data
radius_get_attr                                                     Extracts an attribute
radius_get_tagged_attr_data                                         Extracts the data from a tagged attribute
radius_get_tagged_attr_tag                                          Extracts the tag from a tagged attribute
radius_get_vendor_attr                                              Extracts a vendor specific attribute
radius_put_addr                                                     Attaches an IP address attribute
radius_put_attr                                                     Attaches a binary attribute
radius_put_int                                                      Attaches an integer attribute
radius_put_string                                                   Attaches a string attribute
radius_put_vendor_addr                                              Attaches a vendor specific IP address attribute
radius_put_vendor_attr                                              Attaches a vendor specific binary attribute
radius_put_vendor_int                                               Attaches a vendor specific integer attribute
radius_put_vendor_string                                            Attaches a vendor specific string attribute
radius_request_authenticator                                        Returns the request authenticator
radius_salt_encrypt_attr                                            Salt-encrypts a value
radius_send_request                                                 Sends the request and waits for a reply
radius_server_secret                                                Returns the shared secret
radius_strerror                                                     Returns an error message
rar://                                                              RAR
RarArchive::close                                                   Close RAR archive and free all resources
RarArchive::getComment                                              Get comment text from the RAR archive
RarArchive::getEntries                                              Get full list of entries from the RAR archive
RarArchive::getEntry                                                Get entry object from the RAR archive
RarArchive::isBroken                                                Test whether an archive is broken (incomplete)
RarArchive::isSolid                                                 Check whether the RAR archive is solid
RarArchive::open                                                    Open RAR archive
RarArchive::setAllowBroken                                          Whether opening broken archives is allowed
RarArchive::__toString                                              Get text representation
RarEntry::extract                                                   Extract entry from the archive
RarEntry::getAttr                                                   Get attributes of the entry
RarEntry::getCrc                                                    Get CRC of the entry
RarEntry::getFileTime                                               Get entry last modification time
RarEntry::getHostOs                                                 Get entry host OS
RarEntry::getMethod                                                 Get pack method of the entry
RarEntry::getName                                                   Get name of the entry
RarEntry::getPackedSize                                             Get packed size of the entry
RarEntry::getStream                                                 Get file handler for entry
RarEntry::getUnpackedSize                                           Get unpacked size of the entry
RarEntry::getVersion                                                Get minimum version of RAR program required to unpack the entry
RarEntry::isDirectory                                               Test whether an entry represents a directory
RarEntry::isEncrypted                                               Test whether an entry is encrypted
RarEntry::__toString                                                Get text representation of entry
RarException::isUsingExceptions                                     Check whether error handling with exceptions is in use
RarException::setUsingExceptions                                    Activate and deactivate error handling with exceptions
rar_wrapper_cache_stats                                             Cache hits and misses for the URL wrapper
readline_list_history                                               Lists the history
read_exif_data                                                      Alias of exif_read_data
recode                                                              Alias of recode_string
recode_file                                                         Recode from file to file according to recode request
recode_string                                                       Recode a string according to a recode request
RecursiveArrayIterator::getChildren                                 Returns an iterator for the current entry if it is an array or an object
RecursiveArrayIterator::hasChildren                                 Returns whether current entry is an array or an object
RecursiveCachingIterator::getChildren                               Return the inner iterator's children as a RecursiveCachingIterator
RecursiveCachingIterator::hasChildren                               Check whether the current element of the inner iterator has children
RecursiveCachingIterator::__construct                               Construct
RecursiveCallbackFilterIterator::getChildren                        Return the inner iterator's children contained in a RecursiveCallbackFilterIterator
RecursiveCallbackFilterIterator::hasChildren                        Check whether the inner iterator's current element has children
RecursiveCallbackFilterIterator::__construct                        Create a RecursiveCallbackFilterIterator from a RecursiveIterator
RecursiveDirectoryIterator::getChildren                             Returns an iterator for the current entry if it is a directory
RecursiveDirectoryIterator::getSubPath                              Get sub path
RecursiveDirectoryIterator::getSubPathname                          Get sub path and name
RecursiveDirectoryIterator::hasChildren                             Returns whether current entry is a directory and not '.' or '..'
RecursiveDirectoryIterator::key                                     Return path and filename of current dir entry
RecursiveDirectoryIterator::next                                    Move to next entry
RecursiveDirectoryIterator::rewind                                  Rewind dir back to the start
RecursiveDirectoryIterator::__construct                             Constructs a RecursiveDirectoryIterator
RecursiveFilterIterator::getChildren                                Return the inner iterator's children contained in a RecursiveFilterIterator
RecursiveFilterIterator::hasChildren                                Check whether the inner iterator's current element has children
RecursiveFilterIterator::__construct                                Create a RecursiveFilterIterator from a RecursiveIterator
RecursiveIterator::getChildren                                      Returns an iterator for the current entry
RecursiveIterator::hasChildren                                      Returns if an iterator can be created for the current entry
RecursiveIteratorIterator::beginChildren                            Begin children
RecursiveIteratorIterator::beginIteration                           Begin Iteration
RecursiveIteratorIterator::callGetChildren                          Get children
RecursiveIteratorIterator::callHasChildren                          Has children
RecursiveIteratorIterator::current                                  Access the current element value
RecursiveIteratorIterator::endChildren                              End children
RecursiveIteratorIterator::endIteration                             End Iteration
RecursiveIteratorIterator::getDepth                                 Get the current depth of the recursive iteration
RecursiveIteratorIterator::getInnerIterator                         Get inner iterator
RecursiveIteratorIterator::getMaxDepth                              Get max depth
RecursiveIteratorIterator::getSubIterator                           The current active sub iterator
RecursiveIteratorIterator::key                                      Access the current key
RecursiveIteratorIterator::next                                     Move forward to the next element
RecursiveIteratorIterator::nextElement                              Next element
RecursiveIteratorIterator::rewind                                   Rewind the iterator to the first element of the top level inner iterator
RecursiveIteratorIterator::setMaxDepth                              Set max depth
RecursiveIteratorIterator::valid                                    Check whether the current position is valid
RecursiveIteratorIterator::__construct                              Construct a RecursiveIteratorIterator
RecursiveRegexIterator::getChildren                                 Returns an iterator for the current entry
RecursiveRegexIterator::hasChildren                                 Returns whether an iterator can be obtained for the current entry
RecursiveRegexIterator::__construct                                 Creates a new RecursiveRegexIterator
RecursiveTreeIterator::beginChildren                                Begin children
RecursiveTreeIterator::beginIteration                               Begin iteration
RecursiveTreeIterator::callGetChildren                              Get children
RecursiveTreeIterator::callHasChildren                              Has children
RecursiveTreeIterator::current                                      Get current element
RecursiveTreeIterator::endChildren                                  End children
RecursiveTreeIterator::endIteration                                 End iteration
RecursiveTreeIterator::getEntry                                     Get current entry
RecursiveTreeIterator::getPostfix                                   Get the postfix
RecursiveTreeIterator::getPrefix                                    Get the prefix
RecursiveTreeIterator::key                                          Get the key of the current element
RecursiveTreeIterator::next                                         Move to next element
RecursiveTreeIterator::nextElement                                  Next element
RecursiveTreeIterator::rewind                                       Rewind iterator
RecursiveTreeIterator::setPostfix                                   Set postfix
RecursiveTreeIterator::setPrefixPart                                Set a part of the prefix
RecursiveTreeIterator::valid                                        Check validity
RecursiveTreeIterator::__construct                                  Construct a RecursiveTreeIterator
Reflection::export                                                  Exports
Reflection::getModifierNames                                        Gets modifier names
ReflectionClass::export                                             Exports a class
ReflectionClass::getConstant                                        Gets defined constant
ReflectionClass::getConstants                                       Gets constants
ReflectionClass::getConstructor                                     Gets the constructor of the class
ReflectionClass::getDefaultProperties                               Gets default properties
ReflectionClass::getDocComment                                      Gets doc comments
ReflectionClass::getEndLine                                         Gets end line
ReflectionClass::getExtension                                       Gets a ReflectionExtension object for the extension which defined the class
ReflectionClass::getExtensionName                                   Gets the name of the extension which defined the class
ReflectionClass::getFileName                                        Gets the filename of the file in which the class has been defined
ReflectionClass::getInterfaceNames                                  Gets the interface names
ReflectionClass::getInterfaces                                      Gets the interfaces
ReflectionClass::getMethod                                          Gets a ReflectionMethod for a class method
ReflectionClass::getMethods                                         Gets an array of methods
ReflectionClass::getModifiers                                       Gets the class modifiers
ReflectionClass::getName                                            Gets class name
ReflectionClass::getNamespaceName                                   Gets namespace name
ReflectionClass::getParentClass                                     Gets parent class
ReflectionClass::getProperties                                      Gets properties
ReflectionClass::getProperty                                        Gets a ReflectionProperty for a class's property
ReflectionClass::getReflectionConstant                              Gets a ReflectionClassConstant for a class's constant
ReflectionClass::getReflectionConstants                             Gets class constants
ReflectionClass::getShortName                                       Gets short name
ReflectionClass::getStartLine                                       Gets starting line number
ReflectionClass::getStaticProperties                                Gets static properties
ReflectionClass::getStaticPropertyValue                             Gets static property value
ReflectionClass::getTraitAliases                                    Returns an array of trait aliases
ReflectionClass::getTraitNames                                      Returns an array of names of traits used by this class
ReflectionClass::getTraits                                          Returns an array of traits used by this class
ReflectionClass::hasConstant                                        Checks if constant is defined
ReflectionClass::hasMethod                                          Checks if method is defined
ReflectionClass::hasProperty                                        Checks if property is defined
ReflectionClass::implementsInterface                                Implements interface
ReflectionClass::inNamespace                                        Checks if in namespace
ReflectionClass::isAbstract                                         Checks if class is abstract
ReflectionClass::isAnonymous                                        Checks if class is anonymous
ReflectionClass::isCloneable                                        Returns whether this class is cloneable
ReflectionClass::isFinal                                            Checks if class is final
ReflectionClass::isInstance                                         Checks class for instance
ReflectionClass::isInstantiable                                     Checks if the class is instantiable
ReflectionClass::isInterface                                        Checks if the class is an interface
ReflectionClass::isInternal                                         Checks if class is defined internally by an extension, or the core
ReflectionClass::isIterable                                         Check whether this class is iterable
ReflectionClass::isIterateable                                      Alias of ReflectionClass::isIterable
ReflectionClass::isSubclassOf                                       Checks if a subclass
ReflectionClass::isTrait                                            Returns whether this is a trait
ReflectionClass::isUserDefined                                      Checks if user defined
ReflectionClass::newInstance                                        Creates a new class instance from given arguments
ReflectionClass::newInstanceArgs                                    Creates a new class instance from given arguments
ReflectionClass::newInstanceWithoutConstructor                      Creates a new class instance without invoking the constructor
ReflectionClass::setStaticPropertyValue                             Sets static property value
ReflectionClass::__construct                                        Constructs a ReflectionClass
ReflectionClass::__toString                                         Returns the string representation of the ReflectionClass object
ReflectionClassConstant::export                                     Export
ReflectionClassConstant::getDeclaringClass                          Gets declaring class
ReflectionClassConstant::getDocComment                              Gets doc comments
ReflectionClassConstant::getModifiers                               Gets the class constant modifiers
ReflectionClassConstant::getName                                    Get name of the constant
ReflectionClassConstant::getValue                                   Gets value
ReflectionClassConstant::isPrivate                                  Checks if class constant is private
ReflectionClassConstant::isProtected                                Checks if class constant is protected
ReflectionClassConstant::isPublic                                   Checks if class constant is public
ReflectionClassConstant::__construct                                Constructs a ReflectionClassConstant
ReflectionClassConstant::__toString                                 Returns the string representation of the ReflectionClassConstant object
ReflectionExtension::export                                         Export
ReflectionExtension::getClasses                                     Gets classes
ReflectionExtension::getClassNames                                  Gets class names
ReflectionExtension::getConstants                                   Gets constants
ReflectionExtension::getDependencies                                Gets dependencies
ReflectionExtension::getFunctions                                   Gets extension functions
ReflectionExtension::getINIEntries                                  Gets extension ini entries
ReflectionExtension::getName                                        Gets extension name
ReflectionExtension::getVersion                                     Gets extension version
ReflectionExtension::info                                           Print extension info
ReflectionExtension::isPersistent                                   Returns whether this extension is persistent
ReflectionExtension::isTemporary                                    Returns whether this extension is temporary
ReflectionExtension::__clone                                        Clones
ReflectionExtension::__construct                                    Constructs a ReflectionExtension
ReflectionExtension::__toString                                     To string
ReflectionFunction::export                                          Exports function
ReflectionFunction::getClosure                                      Returns a dynamically created closure for the function
ReflectionFunction::invoke                                          Invokes function
ReflectionFunction::invokeArgs                                      Invokes function args
ReflectionFunction::isDisabled                                      Checks if function is disabled
ReflectionFunction::__construct                                     Constructs a ReflectionFunction object
ReflectionFunction::__toString                                      To string
ReflectionFunctionAbstract::getClosureScopeClass                    Returns the scope associated to the closure
ReflectionFunctionAbstract::getClosureThis                          Returns this pointer bound to closure
ReflectionFunctionAbstract::getDocComment                           Gets doc comment
ReflectionFunctionAbstract::getEndLine                              Gets end line number
ReflectionFunctionAbstract::getExtension                            Gets extension info
ReflectionFunctionAbstract::getExtensionName                        Gets extension name
ReflectionFunctionAbstract::getFileName                             Gets file name
ReflectionFunctionAbstract::getName                                 Gets function name
ReflectionFunctionAbstract::getNamespaceName                        Gets namespace name
ReflectionFunctionAbstract::getNumberOfParameters                   Gets number of parameters
ReflectionFunctionAbstract::getNumberOfRequiredParameters           Gets number of required parameters
ReflectionFunctionAbstract::getParameters                           Gets parameters
ReflectionFunctionAbstract::getReturnType                           Gets the specified return type of a function
ReflectionFunctionAbstract::getShortName                            Gets function short name
ReflectionFunctionAbstract::getStartLine                            Gets starting line number
ReflectionFunctionAbstract::getStaticVariables                      Gets static variables
ReflectionFunctionAbstract::hasReturnType                           Checks if the function has a specified return type
ReflectionFunctionAbstract::inNamespace                             Checks if function in namespace
ReflectionFunctionAbstract::isClosure                               Checks if closure
ReflectionFunctionAbstract::isDeprecated                            Checks if deprecated
ReflectionFunctionAbstract::isGenerator                             Returns whether this function is a generator
ReflectionFunctionAbstract::isInternal                              Checks if is internal
ReflectionFunctionAbstract::isUserDefined                           Checks if user defined
ReflectionFunctionAbstract::isVariadic                              Checks if the function is variadic
ReflectionFunctionAbstract::returnsReference                        Checks if returns reference
ReflectionFunctionAbstract::__clone                                 Clones function
ReflectionFunctionAbstract::__toString                              To string
ReflectionGenerator::getExecutingFile                               Gets the file name of the currently executing generator
ReflectionGenerator::getExecutingGenerator                          Gets the executing Generator object
ReflectionGenerator::getExecutingLine                               Gets the currently executing line of the generator
ReflectionGenerator::getFunction                                    Gets the function name of the generator
ReflectionGenerator::getThis                                        Gets the $this value of the generator
ReflectionGenerator::getTrace                                       Gets the trace of the executing generator
ReflectionGenerator::__construct                                    Constructs a ReflectionGenerator object
ReflectionMethod::export                                            Export a reflection method
ReflectionMethod::getClosure                                        Returns a dynamically created closure for the method
ReflectionMethod::getDeclaringClass                                 Gets declaring class for the reflected method
ReflectionMethod::getModifiers                                      Gets the method modifiers
ReflectionMethod::getPrototype                                      Gets the method prototype (if there is one)
ReflectionMethod::invoke                                            Invoke
ReflectionMethod::invokeArgs                                        Invoke args
ReflectionMethod::isAbstract                                        Checks if method is abstract
ReflectionMethod::isConstructor                                     Checks if method is a constructor
ReflectionMethod::isDestructor                                      Checks if method is a destructor
ReflectionMethod::isFinal                                           Checks if method is final
ReflectionMethod::isPrivate                                         Checks if method is private
ReflectionMethod::isProtected                                       Checks if method is protected
ReflectionMethod::isPublic                                          Checks if method is public
ReflectionMethod::isStatic                                          Checks if method is static
ReflectionMethod::setAccessible                                     Set method accessibility
ReflectionMethod::__construct                                       Constructs a ReflectionMethod
ReflectionMethod::__toString                                        Returns the string representation of the Reflection method object
ReflectionNamedType::getName                                        Get the text of the type hint
ReflectionNamedType::isBuiltin                                      Checks if it is a built-in type
ReflectionObject::export                                            Export
ReflectionObject::__construct                                       Constructs a ReflectionObject
ReflectionParameter::allowsNull                                     Checks if null is allowed
ReflectionParameter::canBePassedByValue                             Returns whether this parameter can be passed by value
ReflectionParameter::export                                         Exports
ReflectionParameter::getClass                                       Get the type hinted class
ReflectionParameter::getDeclaringClass                              Gets declaring class
ReflectionParameter::getDeclaringFunction                           Gets declaring function
ReflectionParameter::getDefaultValue                                Gets default parameter value
ReflectionParameter::getDefaultValueConstantName                    Returns the default value's constant name if default value is constant or null
ReflectionParameter::getName                                        Gets parameter name
ReflectionParameter::getPosition                                    Gets parameter position
ReflectionParameter::getType                                        Gets a parameter's type
ReflectionParameter::hasType                                        Checks if parameter has a type
ReflectionParameter::isArray                                        Checks if parameter expects an array
ReflectionParameter::isCallable                                     Returns whether parameter MUST be callable
ReflectionParameter::isDefaultValueAvailable                        Checks if a default value is available
ReflectionParameter::isDefaultValueConstant                         Returns whether the default value of this parameter is a constant
ReflectionParameter::isOptional                                     Checks if optional
ReflectionParameter::isPassedByReference                            Checks if passed by reference
ReflectionParameter::isVariadic                                     Checks if the parameter is variadic
ReflectionParameter::__clone                                        Clone
ReflectionParameter::__construct                                    Construct
ReflectionParameter::__toString                                     To string
ReflectionProperty::export                                          Export
ReflectionProperty::getDeclaringClass                               Gets declaring class
ReflectionProperty::getDefaultValue                                 Returns the default value declared for a property
ReflectionProperty::getDocComment                                   Gets the property doc comment
ReflectionProperty::getModifiers                                    Gets the property modifiers
ReflectionProperty::getName                                         Gets property name
ReflectionProperty::getType                                         Gets a property's type
ReflectionProperty::getValue                                        Gets value
ReflectionProperty::hasDefaultValue                                 Checks if property has a default value declared
ReflectionProperty::hasType                                         Checks if property has a type
ReflectionProperty::isDefault                                       Checks if property is a default property
ReflectionProperty::isInitialized                                   Checks whether a property is initialized
ReflectionProperty::isPrivate                                       Checks if property is private
ReflectionProperty::isProtected                                     Checks if property is protected
ReflectionProperty::isPublic                                        Checks if property is public
ReflectionProperty::isStatic                                        Checks if property is static
ReflectionProperty::setAccessible                                   Set property accessibility
ReflectionProperty::setValue                                        Set property value
ReflectionProperty::__clone                                         Clone
ReflectionProperty::__construct                                     Construct a ReflectionProperty object
ReflectionProperty::__toString                                      To string
ReflectionReference::fromArrayElement                               Create a ReflectionReference from an array element
ReflectionReference::getId                                          Get unique ID of a reference
ReflectionType::allowsNull                                          Checks if null is allowed
ReflectionType::__toString                                          To string
ReflectionUnionType::getTypes                                       Returns the types included in the union type
ReflectionZendExtension::export                                     Export
ReflectionZendExtension::getAuthor                                  Gets author
ReflectionZendExtension::getCopyright                               Gets copyright
ReflectionZendExtension::getName                                    Gets name
ReflectionZendExtension::getURL                                     Gets URL
ReflectionZendExtension::getVersion                                 Gets version
ReflectionZendExtension::__clone                                    Clone handler
ReflectionZendExtension::__construct                                Constructor
ReflectionZendExtension::__toString                                 To string handler
Reflector::export                                                   Exports
Reflector::__toString                                               To string
RegexIterator::accept                                               Get accept status
RegexIterator::getFlags                                             Get flags
RegexIterator::getMode                                              Returns operation mode
RegexIterator::getPregFlags                                         Returns the regular expression flags
RegexIterator::getRegex                                             Returns current regular expression
RegexIterator::setFlags                                             Sets the flags
RegexIterator::setMode                                              Sets the operation mode
RegexIterator::setPregFlags                                         Sets the regular expression flags
RegexIterator::__construct                                          Create a new RegexIterator
ResourceBundle::count                                               Get number of elements in the bundle
ResourceBundle::create                                              Create a resource bundle
ResourceBundle::get                                                 Get data from the bundle
ResourceBundle::getErrorCode                                        Get bundle's last error code
ResourceBundle::getErrorMessage                                     Get bundle's last error message
ResourceBundle::getLocales                                          Get supported locales
Result::getAffectedItemsCount                                       Get affected row count
Result::getAutoIncrementValue                                       Get autoincremented value
Result::getGeneratedIds                                             Get generated ids
Result::getWarnings                                                 Get warnings from last operation
Result::getWarningsCount                                            Get warning count from last operation
Result::__construct                                                 Result constructor
RowResult::fetchAll                                                 Get all rows from result
RowResult::fetchOne                                                 Get row from result
RowResult::getColumnNames                                           Get all column names
RowResult::getColumns                                               Get column metadata
RowResult::getColumnsCount                                          Get column count
RowResult::getWarnings                                              Get warnings from last operation
RowResult::getWarningsCount                                         Get warning count from last operation
RowResult::__construct                                              RowResult constructor
rpmaddtag                                                           Add tag retrieved in query
rpmdbinfo                                                           Get information from installed RPM
rpmdbsearch                                                         Search RPM packages
rpminfo                                                             Get information from a RPM file
rpmvercmp                                                           RPM version comparison
RRDCreator::addArchive                                              Adds RRA - archive of data values for each data source
RRDCreator::addDataSource                                           Adds data source definition for RRD database
RRDCreator::save                                                    Saves the RRD database to a file
RRDCreator::__construct                                             Creates new RRDCreator instance
rrdc_disconnect                                                     Close any outstanding connection to rrd caching daemon
RRDGraph::save                                                      Saves the result of query into image
RRDGraph::saveVerbose                                               Saves the RRD database query into image and returns the verbose information about generated graph
RRDGraph::setOptions                                                Sets the options for rrd graph export
RRDGraph::__construct                                               Creates new RRDGraph instance
RRDUpdater::update                                                  Update the RRD database file
RRDUpdater::__construct                                             Creates new RRDUpdater instance
rrd_create                                                          Creates rrd database file
rrd_error                                                           Gets latest error message
rrd_fetch                                                           Fetch the data for graph as array
rrd_first                                                           Gets the timestamp of the first sample from rrd file
rrd_graph                                                           Creates image from a data
rrd_info                                                            Gets information about rrd file
rrd_last                                                            Gets unix timestamp of the last sample
rrd_lastupdate                                                      Gets information about last updated data
rrd_restore                                                         Restores the RRD file from XML dump
rrd_tune                                                            Tunes some RRD database file header options
rrd_update                                                          Updates the RRD database
rrd_version                                                         Gets information about underlying rrdtool library
rrd_xport                                                           Exports the information about RRD database
runkit7_constant_add                                                Similar to define(), but allows defining in class definitions as well
runkit7_constant_redefine                                           Redefine an already defined constant
runkit7_constant_remove                                             Remove/Delete an already defined constant
runkit7_function_add                                                Add a new function, similar to create_function
runkit7_function_copy                                               Copy a function to a new function name
runkit7_function_redefine                                           Replace a function definition with a new implementation
runkit7_function_remove                                             Remove a function definition
runkit7_function_rename                                             Change a function's name
runkit7_import                                                      Process a PHP file importing function and class definitions, overwriting where appropriate
runkit7_method_add                                                  Dynamically adds a new method to a given class
runkit7_method_copy                                                 Copies a method from class to another
runkit7_method_redefine                                             Dynamically changes the code of the given method
runkit7_method_remove                                               Dynamically removes the given method
runkit7_method_rename                                               Dynamically changes the name of the given method
runkit7_object_id                                                   Return the integer object handle for given object
runkit7_superglobals                                                Return numerically indexed array of registered superglobals
runkit7_zval_inspect                                                Returns information about the passed in value with data types, reference counts, etc
sapi_windows_cp_conv                                                Convert string from one codepage to another
sapi_windows_cp_get                                                 Get current codepage
sapi_windows_cp_is_utf8                                             Indicates whether the codepage is UTF-8 compatible
sapi_windows_cp_set                                                 Set process codepage
sapi_windows_generate_ctrl_event                                    Send a CTRL event to another process
sapi_windows_set_ctrl_handler                                       Set or remove a CTRL event handler
sapi_windows_vt100_support                                          Get or set VT100 support for the specified stream associated to an output buffer of a Windows console.
Schema::createCollection                                            Add collection to schema
Schema::dropCollection                                              Drop collection from schema
Schema::existsInDatabase                                            Check if exists in database
Schema::getCollection                                               Get collection from schema
Schema::getCollectionAsTable                                        Get collection table object
Schema::getCollections                                              Get all schema collections
Schema::getName                                                     Get schema name
Schema::getSession                                                  Get schema session
Schema::getTable                                                    Get schema table
Schema::getTables                                                   Get schema tables
Schema::__construct                                                 constructor
SchemaObject::getSchema                                             Get schema object
scoutapm_get_calls                                                  Returns a list of instrumented calls that have occurred
scoutapm_list_instrumented_functions                                List functions scoutapm will instrument.
SeasLog::alert                                                      Record alert log information
SeasLog::analyzerCount                                              Get log count by level, log_path and key_word
SeasLog::analyzerDetail                                             Get log detail by level, log_path, key_word, start, limit, order
SeasLog::closeLoggerStream                                          Manually release stream flow from logger
SeasLog::critical                                                   Record critical log information
SeasLog::debug                                                      Record debug log information
SeasLog::emergency                                                  Record emergency log information
SeasLog::error                                                      Record error log information
SeasLog::flushBuffer                                                Flush logs buffer, dump to appender file, or send to remote api with tcp/udp
SeasLog::getBasePath                                                Get SeasLog base path.
SeasLog::getBuffer                                                  Get the logs buffer in memory as array
SeasLog::getBufferEnabled                                           Determin if buffer enabled
SeasLog::getDatetimeFormat                                          Get SeasLog datetime format style
SeasLog::getLastLogger                                              Get SeasLog last logger path
SeasLog::getRequestID                                               Get SeasLog request_id differentiated requests
SeasLog::getRequestVariable                                         Get SeasLog request variable
SeasLog::info                                                       Record info log information
SeasLog::log                                                        The Common Record Log Function
SeasLog::notice                                                     Record notice log information
SeasLog::setBasePath                                                Set SeasLog base path
SeasLog::setDatetimeFormat                                          Set SeasLog datetime format style
SeasLog::setLogger                                                  Set SeasLog logger name
SeasLog::setRequestID                                               Set SeasLog request_id differentiated requests
SeasLog::setRequestVariable                                         Manually set SeasLog request variable
SeasLog::warning                                                    Record warning log information
SeasLog::__construct                                                Description
SeasLog::__destruct                                                 Description
seaslog_get_author                                                  Get SeasLog author.
seaslog_get_version                                                 Get SeasLog version.
SeekableIterator::seek                                              Seeks to a position
sem_acquire                                                         Acquire a semaphore
sem_get                                                             Get a semaphore id
sem_release                                                         Release a semaphore
sem_remove                                                          Remove a semaphore
Serializable::serialize                                             String representation of object
Serializable::unserialize                                           Constructs the object
Session::close                                                      Close session
Session::createSchema                                               Create new schema
Session::dropSchema                                                 Drop a schema
Session::generateUUID                                               Get new UUID
Session::getDefaultSchema                                           Get default schema name
Session::getSchema                                                  Get a new schema object
Session::getSchemas                                                 Get the schemas
Session::getServerVersion                                           Get server version
Session::listClients                                                Get client list
Session::quoteName                                                  Add quotes
Session::releaseSavepoint                                           Release set savepoint
Session::rollback                                                   Rollback transaction
Session::rollbackTo                                                 Rollback transaction to savepoint
Session::setSavepoint                                               Create savepoint
Session::sql                                                        Execute SQL query
Session::startTransaction                                           Start transaction
Session::__construct                                                Description constructor
SessionHandler::close                                               Close the session
SessionHandler::create_sid                                          Return a new session ID
SessionHandler::destroy                                             Destroy a session
SessionHandler::gc                                                  Cleanup old sessions
SessionHandler::open                                                Initialize session
SessionHandler::read                                                Read session data
SessionHandler::write                                               Write session data
SessionHandlerInterface::close                                      Close the session
SessionHandlerInterface::destroy                                    Destroy a session
SessionHandlerInterface::gc                                         Cleanup old sessions
SessionHandlerInterface::open                                       Initialize session
SessionHandlerInterface::read                                       Read session data
SessionHandlerInterface::write                                      Write session data
SessionIdInterface::create_sid                                      Create session ID
SessionUpdateTimestampHandlerInterface::updateTimestamp             Update timestamp
SessionUpdateTimestampHandlerInterface::validateId                  Validate ID
session_abort                                                       Discard session array changes and finish session
session_cache_expire                                                Get and/or set current cache expire
session_cache_limiter                                               Get and/or set the current cache limiter
session_commit                                                      Alias of session_write_close
session_create_id                                                   Create new session id
session_decode                                                      Decodes session data from a session encoded string
session_destroy                                                     Destroys all data registered to a session
session_encode                                                      Encodes the current session data as a session encoded string
session_gc                                                          Perform session data garbage collection
session_get_cookie_params                                           Get the session cookie parameters
session_id                                                          Get and/or set the current session id
session_module_name                                                 Get and/or set the current session module
session_name                                                        Get and/or set the current session name
session_regenerate_id                                               Update the current session id with a newly generated one
session_register_shutdown                                           Session shutdown function
session_reset                                                       Re-initialize session array with original values
session_save_path                                                   Get and/or set the current session save path
session_set_cookie_params                                           Set the session cookie parameters
session_set_save_handler                                            Sets user-level session storage functions
session_start                                                       Start new or resume existing session
session_status                                                      Returns the current session status
session_unset                                                       Free all session variables
session_write_close                                                 Write session data and end session
setproctitle                                                        Set the process title
setthreadtitle                                                      Set the thread title
shmop_close                                                         Close shared memory block
shmop_delete                                                        Delete shared memory block
shmop_open                                                          Create or open shared memory block
shmop_read                                                          Read data from shared memory block
shmop_size                                                          Get size of shared memory block
shmop_write                                                         Write data into shared memory block
shm_attach                                                          Creates or open a shared memory segment
shm_detach                                                          Disconnects from shared memory segment
shm_get_var                                                         Returns a variable from shared memory
shm_has_var                                                         Check whether a specific entry exists
shm_put_var                                                         Inserts or updates a variable in shared memory
shm_remove                                                          Removes shared memory from Unix systems
shm_remove_var                                                      Removes a variable from shared memory
show_source                                                         Alias of highlight_file
SimpleXMLElement::addAttribute                                      Adds an attribute to the SimpleXML element
SimpleXMLElement::addChild                                          Adds a child element to the XML node
SimpleXMLElement::asXML                                             Return a well-formed XML string based on SimpleXML element
SimpleXMLElement::attributes                                        Identifies an element's attributes
SimpleXMLElement::children                                          Finds children of given node
SimpleXMLElement::count                                             Counts the children of an element
SimpleXMLElement::getDocNamespaces                                  Returns namespaces declared in document
SimpleXMLElement::getName                                           Gets the name of the XML element
SimpleXMLElement::getNamespaces                                     Returns namespaces used in document
SimpleXMLElement::registerXPathNamespace                            Creates a prefix/ns context for the next XPath query
SimpleXMLElement::saveXML                                           Alias of SimpleXMLElement::asXML
SimpleXMLElement::xpath                                             Runs XPath query on XML data
SimpleXMLElement::__construct                                       Creates a new SimpleXMLElement object
SimpleXMLElement::__toString                                        Returns the string content
SimpleXMLIterator::current                                          Returns the current element
SimpleXMLIterator::getChildren                                      Returns the sub-elements of the current element
SimpleXMLIterator::hasChildren                                      Checks whether the current element has sub elements
SimpleXMLIterator::key                                              Return current key
SimpleXMLIterator::next                                             Move to next element
SimpleXMLIterator::rewind                                           Rewind to the first element
SimpleXMLIterator::valid                                            Check whether the current element is valid
snmp2_get                                                           Fetch an SNMP object
snmp2_getnext                                                       Fetch the SNMP object which follows the given object id
snmp2_real_walk                                                     Return all objects including their respective object ID within the specified one
snmp2_set                                                           Set the value of an SNMP object
snmp2_walk                                                          Fetch all the SNMP objects from an agent
snmp3_get                                                           Fetch an SNMP object
snmp3_getnext                                                       Fetch the SNMP object which follows the given object id
snmp3_real_walk                                                     Return all objects including their respective object ID within the specified one
snmp3_set                                                           Set the value of an SNMP object
snmp3_walk                                                          Fetch all the SNMP objects from an agent
SNMP::close                                                         Close SNMP session
SNMP::get                                                           Fetch an SNMP object
SNMP::getErrno                                                      Get last error code
SNMP::getError                                                      Get last error message
SNMP::getnext                                                       Fetch an SNMP object which follows the given object id
SNMP::set                                                           Set the value of an SNMP object
SNMP::setSecurity                                                   Configures security-related SNMPv3 session parameters
SNMP::walk                                                          Fetch SNMP object subtree
SNMP::__construct                                                   Creates SNMP instance representing session to remote SNMP agent
snmpget                                                             Fetch an SNMP object
snmpgetnext                                                         Fetch the SNMP object which follows the given object id
snmprealwalk                                                        Return all objects including their respective object ID within the specified one
snmpset                                                             Set the value of an SNMP object
snmpwalk                                                            Fetch all the SNMP objects from an agent
snmpwalkoid                                                         Query for a tree of information about a network entity
snmp_get_quick_print                                                Fetches the current value of the NET-SNMP library's quick_print setting
snmp_get_valueretrieval                                             Return the method how the SNMP values will be returned
snmp_read_mib                                                       Reads and parses a MIB file into the active MIB tree
snmp_set_enum_print                                                 Return all values that are enums with their enum value instead of the raw integer
snmp_set_oid_numeric_print                                          Set the OID output format
snmp_set_oid_output_format                                          Set the OID output format
snmp_set_quick_print                                                Set the value of enable within the NET-SNMP library
snmp_set_valueretrieval                                             Specify the method how the SNMP values will be returned
SoapClient::__call                                                  Calls a SOAP function (deprecated)
SoapClient::__construct                                             SoapClient constructor
SoapClient::__doRequest                                             Performs a SOAP request
SoapClient::__getCookies                                            Get list of cookies
SoapClient::__getFunctions                                          Returns list of available SOAP functions
SoapClient::__getLastRequest                                        Returns last SOAP request
SoapClient::__getLastRequestHeaders                                 Returns the SOAP headers from the last request
SoapClient::__getLastResponse                                       Returns last SOAP response
SoapClient::__getLastResponseHeaders                                Returns the SOAP headers from the last response
SoapClient::__getTypes                                              Returns a list of SOAP types
SoapClient::__setCookie                                             Defines a cookie for SOAP requests
SoapClient::__setLocation                                           Sets the location of the Web service to use
SoapClient::__setSoapHeaders                                        Sets SOAP headers for subsequent calls
SoapClient::__soapCall                                              Calls a SOAP function
SoapFault::__construct                                              SoapFault constructor
SoapFault::__toString                                               Obtain a string representation of a SoapFault
SoapHeader::__construct                                             SoapHeader constructor
SoapParam::__construct                                              SoapParam constructor
SoapServer::addFunction                                             Adds one or more functions to handle SOAP requests
SoapServer::addSoapHeader                                           Add a SOAP header to the response
SoapServer::fault                                                   Issue SoapServer fault indicating an error
SoapServer::getFunctions                                            Returns list of defined functions
SoapServer::handle                                                  Handles a SOAP request
SoapServer::setClass                                                Sets the class which handles SOAP requests
SoapServer::setObject                                               Sets the object which will be used to handle SOAP requests
SoapServer::setPersistence                                          Sets SoapServer persistence mode
SoapServer::__construct                                             SoapServer constructor
SoapVar::__construct                                                SoapVar constructor
Socket context options                                              Socket context option listing
socket_accept                                                       Accepts a connection on a socket
socket_addrinfo_bind                                                Create and bind to a socket from a given addrinfo
socket_addrinfo_connect                                             Create and connect to a socket from a given addrinfo
socket_addrinfo_explain                                             Get information about addrinfo
socket_addrinfo_lookup                                              Get array with contents of getaddrinfo about the given hostname
socket_bind                                                         Binds a name to a socket
socket_clear_error                                                  Clears the error on the socket or the last error code
socket_close                                                        Closes a Socket instance
socket_cmsg_space                                                   Calculate message buffer size
socket_connect                                                      Initiates a connection on a socket
socket_create                                                       Create a socket (endpoint for communication)
socket_create_listen                                                Opens a socket on port to accept connections
socket_create_pair                                                  Creates a pair of indistinguishable sockets and stores them in an array
socket_export_stream                                                Export a socket into a stream that encapsulates a socket
socket_getopt                                                       Alias of socket_get_option
socket_getpeername                                                  Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
socket_getsockname                                                  Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
socket_get_option                                                   Gets socket options for the socket
socket_import_stream                                                Import a stream
socket_last_error                                                   Returns the last error on the socket
socket_listen                                                       Listens for a connection on a socket
socket_read                                                         Reads a maximum of length bytes from a socket
socket_recv                                                         Receives data from a connected socket
socket_recvfrom                                                     Receives data from a socket whether or not it is connection-oriented
socket_recvmsg                                                      Read a message
socket_select                                                       Runs the select() system call on the given arrays of sockets with a specified timeout
socket_send                                                         Sends data to a connected socket
socket_sendmsg                                                      Send a message
socket_sendto                                                       Sends a message to a socket, whether it is connected or not
socket_setopt                                                       Alias of socket_set_option
socket_set_block                                                    Sets blocking mode on a socket
socket_set_nonblock                                                 Sets nonblocking mode for file descriptor fd
socket_set_option                                                   Sets socket options for the socket
socket_shutdown                                                     Shuts down a socket for receiving, sending, or both
socket_strerror                                                     Return a string describing a socket error
socket_write                                                        Write to a socket
socket_wsaprotocol_info_export                                      Exports the WSAPROTOCOL_INFO Structure
socket_wsaprotocol_info_import                                      Imports a Socket from another Process
socket_wsaprotocol_info_release                                     Releases an exported WSAPROTOCOL_INFO Structure
SolrClient::addDocument                                             Adds a document to the index
SolrClient::addDocuments                                            Adds a collection of SolrInputDocument instances to the index
SolrClient::commit                                                  Finalizes all add/deletes made to the index
SolrClient::deleteById                                              Delete by Id
SolrClient::deleteByIds                                             Deletes by Ids
SolrClient::deleteByQueries                                         Removes all documents matching any of the queries
SolrClient::deleteByQuery                                           Deletes all documents matching the given query
SolrClient::getById                                                 Get Document By Id. Utilizes Solr Realtime Get (RTG)
SolrClient::getByIds                                                Get Documents by their Ids. Utilizes Solr Realtime Get (RTG)
SolrClient::getDebug                                                Returns the debug data for the last connection attempt
SolrClient::getOptions                                              Returns the client options set internally
SolrClient::optimize                                                Defragments the index
SolrClient::ping                                                    Checks if Solr server is still up
SolrClient::query                                                   Sends a query to the server
SolrClient::request                                                 Sends a raw update request
SolrClient::rollback                                                Rollbacks all add/deletes made to the index since the last commit
SolrClient::setResponseWriter                                       Sets the response writer used to prepare the response from Solr
SolrClient::setServlet                                              Changes the specified servlet type to a new value
SolrClient::system                                                  Retrieve Solr Server information
SolrClient::threads                                                 Checks the threads status
SolrClient::__construct                                             Constructor for the SolrClient object
SolrClient::__destruct                                              Destructor for SolrClient
SolrClientException::getInternalInfo                                Returns internal information where the Exception was thrown
SolrCollapseFunction::getField                                      Returns the field that is being collapsed on
SolrCollapseFunction::getHint                                       Returns collapse hint
SolrCollapseFunction::getMax                                        Returns max parameter
SolrCollapseFunction::getMin                                        Returns min parameter
SolrCollapseFunction::getNullPolicy                                 Returns null policy
SolrCollapseFunction::getSize                                       Returns size parameter
SolrCollapseFunction::setField                                      Sets the field to collapse on
SolrCollapseFunction::setHint                                       Sets collapse hint
SolrCollapseFunction::setMax                                        Selects the group heads by the max value of a numeric field or function query
SolrCollapseFunction::setMin                                        Sets the initial size of the collapse data structures when collapsing on a numeric field only
SolrCollapseFunction::setNullPolicy                                 Sets the NULL Policy
SolrCollapseFunction::setSize                                       Sets the initial size of the collapse data structures when collapsing on a numeric field only
SolrCollapseFunction::__construct                                   Constructor
SolrCollapseFunction::__toString                                    Returns a string representing the constructed collapse function
SolrDisMaxQuery::addBigramPhraseField                               Adds a Phrase Bigram Field (pf2 parameter)
SolrDisMaxQuery::addBoostQuery                                      Adds a boost query field with value and optional boost (bq parameter)
SolrDisMaxQuery::addPhraseField                                     Adds a Phrase Field (pf parameter)
SolrDisMaxQuery::addQueryField                                      Add a query field with optional boost (qf parameter)
SolrDisMaxQuery::addTrigramPhraseField                              Adds a Trigram Phrase Field (pf3 parameter)
SolrDisMaxQuery::addUserField                                       Adds a field to User Fields Parameter (uf)
SolrDisMaxQuery::removeBigramPhraseField                            Removes phrase bigram field (pf2 parameter)
SolrDisMaxQuery::removeBoostQuery                                   Removes a boost query partial by field name (bq)
SolrDisMaxQuery::removePhraseField                                  Removes a Phrase Field (pf parameter)
SolrDisMaxQuery::removeQueryField                                   Removes a Query Field (qf parameter)
SolrDisMaxQuery::removeTrigramPhraseField                           Removes a Trigram Phrase Field (pf3 parameter)
SolrDisMaxQuery::removeUserField                                    Removes a field from The User Fields Parameter (uf)
SolrDisMaxQuery::setBigramPhraseFields                              Sets Bigram Phrase Fields and their boosts (and slops) using pf2 parameter
SolrDisMaxQuery::setBigramPhraseSlop                                Sets Bigram Phrase Slop (ps2 parameter)
SolrDisMaxQuery::setBoostFunction                                   Sets a Boost Function (bf parameter)
SolrDisMaxQuery::setBoostQuery                                      Directly Sets Boost Query Parameter (bq)
SolrDisMaxQuery::setMinimumMatch                                    Set Minimum "Should" Match (mm)
SolrDisMaxQuery::setPhraseFields                                    Sets Phrase Fields and their boosts (and slops) using pf2 parameter
SolrDisMaxQuery::setPhraseSlop                                      Sets the default slop on phrase queries (ps parameter)
SolrDisMaxQuery::setQueryAlt                                        Set Query Alternate (q.alt parameter)
SolrDisMaxQuery::setQueryPhraseSlop                                 Specifies the amount of slop permitted on phrase queries explicitly included in the user's query string (qf parameter)
SolrDisMaxQuery::setTieBreaker                                      Sets Tie Breaker parameter (tie parameter)
SolrDisMaxQuery::setTrigramPhraseFields                             Directly Sets Trigram Phrase Fields (pf3 parameter)
SolrDisMaxQuery::setTrigramPhraseSlop                               Sets Trigram Phrase Slop (ps3 parameter)
SolrDisMaxQuery::setUserFields                                      Sets User Fields parameter (uf)
SolrDisMaxQuery::useDisMaxQueryParser                               Switch QueryParser to be DisMax Query Parser
SolrDisMaxQuery::useEDisMaxQueryParser                              Switch QueryParser to be EDisMax
SolrDisMaxQuery::__construct                                        Class Constructor
SolrDocument::addField                                              Adds a field to the document
SolrDocument::clear                                                 Drops all the fields in the document
SolrDocument::current                                               Retrieves the current field
SolrDocument::deleteField                                           Removes a field from the document
SolrDocument::fieldExists                                           Checks if a field exists in the document
SolrDocument::getChildDocuments                                     Returns an array of child documents (SolrDocument)
SolrDocument::getChildDocumentsCount                                Returns the number of child documents
SolrDocument::getField                                              Retrieves a field by name
SolrDocument::getFieldCount                                         Returns the number of fields in this document
SolrDocument::getFieldNames                                         Returns an array of fields names in the document
SolrDocument::getInputDocument                                      Returns a SolrInputDocument equivalent of the object
SolrDocument::hasChildDocuments                                     Checks whether the document has any child documents
SolrDocument::key                                                   Retrieves the current key
SolrDocument::merge                                                 Merges source to the current SolrDocument
SolrDocument::next                                                  Moves the internal pointer to the next field
SolrDocument::offsetExists                                          Checks if a particular field exists
SolrDocument::offsetGet                                             Retrieves a field
SolrDocument::offsetSet                                             Adds a field to the document
SolrDocument::offsetUnset                                           Removes a field
SolrDocument::reset                                                 This is an alias to SolrDocument::clear()
SolrDocument::rewind                                                Resets the internal pointer to the beginning
SolrDocument::serialize                                             Used for custom serialization
SolrDocument::sort                                                  Sorts the fields in the document
SolrDocument::toArray                                               Returns an array representation of the document
SolrDocument::unserialize                                           Custom serialization of SolrDocument objects
SolrDocument::valid                                                 Checks if the current position internally is still valid
SolrDocument::__clone                                               Creates a copy of a SolrDocument object
SolrDocument::__construct                                           Constructor
SolrDocument::__destruct                                            Destructor
SolrDocument::__get                                                 Access the field as a property
SolrDocument::__isset                                               Checks if a field exists
SolrDocument::__set                                                 Adds another field to the document
SolrDocument::__unset                                               Removes a field from the document
SolrDocumentField::__construct                                      Constructor
SolrDocumentField::__destruct                                       Destructor
SolrException::getInternalInfo                                      Returns internal information where the Exception was thrown
SolrGenericResponse::__construct                                    Constructor
SolrGenericResponse::__destruct                                     Destructor
SolrIllegalArgumentException::getInternalInfo                       Returns internal information where the Exception was thrown
SolrIllegalOperationException::getInternalInfo                      Returns internal information where the Exception was thrown
SolrInputDocument::addChildDocument                                 Adds a child document for block indexing
SolrInputDocument::addChildDocuments                                Adds an array of child documents
SolrInputDocument::addField                                         Adds a field to the document
SolrInputDocument::clear                                            Resets the input document
SolrInputDocument::deleteField                                      Removes a field from the document
SolrInputDocument::fieldExists                                      Checks if a field exists
SolrInputDocument::getBoost                                         Retrieves the current boost value for the document
SolrInputDocument::getChildDocuments                                Returns an array of child documents (SolrInputDocument)
SolrInputDocument::getChildDocumentsCount                           Returns the number of child documents
SolrInputDocument::getField                                         Retrieves a field by name
SolrInputDocument::getFieldBoost                                    Retrieves the boost value for a particular field
SolrInputDocument::getFieldCount                                    Returns the number of fields in the document
SolrInputDocument::getFieldNames                                    Returns an array containing all the fields in the document
SolrInputDocument::hasChildDocuments                                Returns true if the document has any child documents
SolrInputDocument::merge                                            Merges one input document into another
SolrInputDocument::reset                                            This is an alias of SolrInputDocument::clear
SolrInputDocument::setBoost                                         Sets the boost value for this document
SolrInputDocument::setFieldBoost                                    Sets the index-time boost value for a field
SolrInputDocument::sort                                             Sorts the fields within the document
SolrInputDocument::toArray                                          Returns an array representation of the input document
SolrInputDocument::__clone                                          Creates a copy of a SolrDocument
SolrInputDocument::__construct                                      Constructor
SolrInputDocument::__destruct                                       Destructor
SolrModifiableParams::__construct                                   Constructor
SolrModifiableParams::__destruct                                    Destructor
SolrObject::getPropertyNames                                        Returns an array of all the names of the properties
SolrObject::offsetExists                                            Checks if the property exists
SolrObject::offsetGet                                               Used to retrieve a property
SolrObject::offsetSet                                               Sets the value for a property
SolrObject::offsetUnset                                             Unsets the value for the property
SolrObject::__construct                                             Creates Solr object
SolrObject::__destruct                                              Destructor
SolrParams::add                                                     This is an alias for SolrParams::addParam
SolrParams::addParam                                                Adds a parameter to the object
SolrParams::get                                                     This is an alias for SolrParams::getParam
SolrParams::getParam                                                Returns a parameter value
SolrParams::getParams                                               Returns an array of non URL-encoded parameters
SolrParams::getPreparedParams                                       Returns an array of URL-encoded parameters
SolrParams::serialize                                               Used for custom serialization
SolrParams::set                                                     An alias of SolrParams::setParam
SolrParams::setParam                                                Sets the parameter to the specified value
SolrParams::toString                                                Returns all the name-value pair parameters in the object
SolrParams::unserialize                                             Used for custom serialization
SolrPingResponse::getResponse                                       Returns the response from the server
SolrPingResponse::__construct                                       Constructor
SolrPingResponse::__destruct                                        Destructor
SolrQuery::addExpandFilterQuery                                     Overrides main filter query, determines which documents to include in the main group
SolrQuery::addExpandSortField                                       Orders the documents within the expanded groups (expand.sort parameter)
SolrQuery::addFacetDateField                                        Maps to facet.date
SolrQuery::addFacetDateOther                                        Adds another facet.date.other parameter
SolrQuery::addFacetField                                            Adds another field to the facet
SolrQuery::addFacetQuery                                            Adds a facet query
SolrQuery::addField                                                 Specifies which fields to return in the result
SolrQuery::addFilterQuery                                           Specifies a filter query
SolrQuery::addGroupField                                            Add a field to be used to group results
SolrQuery::addGroupFunction                                         Allows grouping results based on the unique values of a function query (group.func parameter)
SolrQuery::addGroupQuery                                            Allows grouping of documents that match the given query
SolrQuery::addGroupSortField                                        Add a group sort field (group.sort parameter)
SolrQuery::addHighlightField                                        Maps to hl.fl
SolrQuery::addMltField                                              Sets a field to use for similarity
SolrQuery::addMltQueryField                                         Maps to mlt.qf
SolrQuery::addSortField                                             Used to control how the results should be sorted
SolrQuery::addStatsFacet                                            Requests a return of sub results for values within the given facet
SolrQuery::addStatsField                                            Maps to stats.field parameter
SolrQuery::collapse                                                 Collapses the result set to a single document per group
SolrQuery::getExpand                                                Returns true if group expanding is enabled
SolrQuery::getExpandFilterQueries                                   Returns the expand filter queries
SolrQuery::getExpandQuery                                           Returns the expand query expand.q parameter
SolrQuery::getExpandRows                                            Returns The number of rows to display in each group (expand.rows)
SolrQuery::getExpandSortFields                                      Returns an array of fields
SolrQuery::getFacet                                                 Returns the value of the facet parameter
SolrQuery::getFacetDateEnd                                          Returns the value for the facet.date.end parameter
SolrQuery::getFacetDateFields                                       Returns all the facet.date fields
SolrQuery::getFacetDateGap                                          Returns the value of the facet.date.gap parameter
SolrQuery::getFacetDateHardEnd                                      Returns the value of the facet.date.hardend parameter
SolrQuery::getFacetDateOther                                        Returns the value for the facet.date.other parameter
SolrQuery::getFacetDateStart                                        Returns the lower bound for the first date range for all date faceting on this field
SolrQuery::getFacetFields                                           Returns all the facet fields
SolrQuery::getFacetLimit                                            Returns the maximum number of constraint counts that should be returned for the facet fields
SolrQuery::getFacetMethod                                           Returns the value of the facet.method parameter
SolrQuery::getFacetMinCount                                         Returns the minimum counts for facet fields should be included in the response
SolrQuery::getFacetMissing                                          Returns the current state of the facet.missing parameter
SolrQuery::getFacetOffset                                           Returns an offset into the list of constraints to be used for pagination
SolrQuery::getFacetPrefix                                           Returns the facet prefix
SolrQuery::getFacetQueries                                          Returns all the facet queries
SolrQuery::getFacetSort                                             Returns the facet sort type
SolrQuery::getFields                                                Returns the list of fields that will be returned in the response
SolrQuery::getFilterQueries                                         Returns an array of filter queries
SolrQuery::getGroup                                                 Returns true if grouping is enabled
SolrQuery::getGroupCachePercent                                     Returns group cache percent value
SolrQuery::getGroupFacet                                            Returns the group.facet parameter value
SolrQuery::getGroupFields                                           Returns group fields (group.field parameter values)
SolrQuery::getGroupFormat                                           Returns the group.format value
SolrQuery::getGroupFunctions                                        Returns group functions (group.func parameter values)
SolrQuery::getGroupLimit                                            Returns the group.limit value
SolrQuery::getGroupMain                                             Returns the group.main value
SolrQuery::getGroupNGroups                                          Returns the group.ngroups value
SolrQuery::getGroupOffset                                           Returns the group.offset value
SolrQuery::getGroupQueries                                          Returns all the group.query parameter values
SolrQuery::getGroupSortFields                                       Returns the group.sort value
SolrQuery::getGroupTruncate                                         Returns the group.truncate value
SolrQuery::getHighlight                                             Returns the state of the hl parameter
SolrQuery::getHighlightAlternateField                               Returns the highlight field to use as backup or default
SolrQuery::getHighlightFields                                       Returns all the fields that Solr should generate highlighted snippets for
SolrQuery::getHighlightFormatter                                    Returns the formatter for the highlighted output
SolrQuery::getHighlightFragmenter                                   Returns the text snippet generator for highlighted text
SolrQuery::getHighlightFragsize                                     Returns the number of characters of fragments to consider for highlighting
SolrQuery::getHighlightHighlightMultiTerm                           Returns whether or not to enable highlighting for range/wildcard/fuzzy/prefix queries
SolrQuery::getHighlightMaxAlternateFieldLength                      Returns the maximum number of characters of the field to return
SolrQuery::getHighlightMaxAnalyzedChars                             Returns the maximum number of characters into a document to look for suitable snippets
SolrQuery::getHighlightMergeContiguous                              Returns whether or not the collapse contiguous fragments into a single fragment
SolrQuery::getHighlightRegexMaxAnalyzedChars                        Returns the maximum number of characters from a field when using the regex fragmenter
SolrQuery::getHighlightRegexPattern                                 Returns the regular expression for fragmenting
SolrQuery::getHighlightRegexSlop                                    Returns the deviation factor from the ideal fragment size
SolrQuery::getHighlightRequireFieldMatch                            Returns if a field will only be highlighted if the query matched in this particular field
SolrQuery::getHighlightSimplePost                                   Returns the text which appears after a highlighted term
SolrQuery::getHighlightSimplePre                                    Returns the text which appears before a highlighted term
SolrQuery::getHighlightSnippets                                     Returns the maximum number of highlighted snippets to generate per field
SolrQuery::getHighlightUsePhraseHighlighter                         Returns the state of the hl.usePhraseHighlighter parameter
SolrQuery::getMlt                                                   Returns whether or not MoreLikeThis results should be enabled
SolrQuery::getMltBoost                                              Returns whether or not the query will be boosted by the interesting term relevance
SolrQuery::getMltCount                                              Returns the number of similar documents to return for each result
SolrQuery::getMltFields                                             Returns all the fields to use for similarity
SolrQuery::getMltMaxNumQueryTerms                                   Returns the maximum number of query terms that will be included in any generated query
SolrQuery::getMltMaxNumTokens                                       Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support
SolrQuery::getMltMaxWordLength                                      Returns the maximum word length above which words will be ignored
SolrQuery::getMltMinDocFrequency                                    Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs
SolrQuery::getMltMinTermFrequency                                   Returns the frequency below which terms will be ignored in the source document
SolrQuery::getMltMinWordLength                                      Returns the minimum word length below which words will be ignored
SolrQuery::getMltQueryFields                                        Returns the query fields and their boosts
SolrQuery::getQuery                                                 Returns the main query
SolrQuery::getRows                                                  Returns the maximum number of documents
SolrQuery::getSortFields                                            Returns all the sort fields
SolrQuery::getStart                                                 Returns the offset in the complete result set
SolrQuery::getStats                                                 Returns whether or not stats is enabled
SolrQuery::getStatsFacets                                           Returns all the stats facets that were set
SolrQuery::getStatsFields                                           Returns all the statistics fields
SolrQuery::getTerms                                                 Returns whether or not the TermsComponent is enabled
SolrQuery::getTermsField                                            Returns the field from which the terms are retrieved
SolrQuery::getTermsIncludeLowerBound                                Returns whether or not to include the lower bound in the result set
SolrQuery::getTermsIncludeUpperBound                                Returns whether or not to include the upper bound term in the result set
SolrQuery::getTermsLimit                                            Returns the maximum number of terms Solr should return
SolrQuery::getTermsLowerBound                                       Returns the term to start at
SolrQuery::getTermsMaxCount                                         Returns the maximum document frequency
SolrQuery::getTermsMinCount                                         Returns the minimum document frequency to return in order to be included
SolrQuery::getTermsPrefix                                           Returns the term prefix
SolrQuery::getTermsReturnRaw                                        Whether or not to return raw characters
SolrQuery::getTermsSort                                             Returns an integer indicating how terms are sorted
SolrQuery::getTermsUpperBound                                       Returns the term to stop at
SolrQuery::getTimeAllowed                                           Returns the time in milliseconds allowed for the query to finish
SolrQuery::removeExpandFilterQuery                                  Removes an expand filter query
SolrQuery::removeExpandSortField                                    Removes an expand sort field from the expand.sort parameter
SolrQuery::removeFacetDateField                                     Removes one of the facet date fields
SolrQuery::removeFacetDateOther                                     Removes one of the facet.date.other parameters
SolrQuery::removeFacetField                                         Removes one of the facet.date parameters
SolrQuery::removeFacetQuery                                         Removes one of the facet.query parameters
SolrQuery::removeField                                              Removes a field from the list of fields
SolrQuery::removeFilterQuery                                        Removes a filter query
SolrQuery::removeHighlightField                                     Removes one of the fields used for highlighting
SolrQuery::removeMltField                                           Removes one of the moreLikeThis fields
SolrQuery::removeMltQueryField                                      Removes one of the moreLikeThis query fields
SolrQuery::removeSortField                                          Removes one of the sort fields
SolrQuery::removeStatsFacet                                         Removes one of the stats.facet parameters
SolrQuery::removeStatsField                                         Removes one of the stats.field parameters
SolrQuery::setEchoHandler                                           Toggles the echoHandler parameter
SolrQuery::setEchoParams                                            Determines what kind of parameters to include in the response
SolrQuery::setExpand                                                Enables/Disables the Expand Component
SolrQuery::setExpandQuery                                           Sets the expand.q parameter
SolrQuery::setExpandRows                                            Sets the number of rows to display in each group (expand.rows). Server Default 5
SolrQuery::setExplainOther                                          Sets the explainOther common query parameter
SolrQuery::setFacet                                                 Maps to the facet parameter. Enables or disables facetting
SolrQuery::setFacetDateEnd                                          Maps to facet.date.end
SolrQuery::setFacetDateGap                                          Maps to facet.date.gap
SolrQuery::setFacetDateHardEnd                                      Maps to facet.date.hardend
SolrQuery::setFacetDateStart                                        Maps to facet.date.start
SolrQuery::setFacetEnumCacheMinDefaultFrequency                     Sets the minimum document frequency used for determining term count
SolrQuery::setFacetLimit                                            Maps to facet.limit
SolrQuery::setFacetMethod                                           Specifies the type of algorithm to use when faceting a field
SolrQuery::setFacetMinCount                                         Maps to facet.mincount
SolrQuery::setFacetMissing                                          Maps to facet.missing
SolrQuery::setFacetOffset                                           Sets the offset into the list of constraints to allow for pagination
SolrQuery::setFacetPrefix                                           Specifies a string prefix with which to limits the terms on which to facet
SolrQuery::setFacetSort                                             Determines the ordering of the facet field constraints
SolrQuery::setGroup                                                 Enable/Disable result grouping (group parameter)
SolrQuery::setGroupCachePercent                                     Enables caching for result grouping
SolrQuery::setGroupFacet                                            Sets group.facet parameter
SolrQuery::setGroupFormat                                           Sets the group format, result structure (group.format parameter)
SolrQuery::setGroupLimit                                            Specifies the number of results to return for each group. The server default value is 1
SolrQuery::setGroupMain                                             If true, the result of the first field grouping command is used as the main result list in the response, using group.format=simple
SolrQuery::setGroupNGroups                                          If true, Solr includes the number of groups that have matched the query in the results
SolrQuery::setGroupOffset                                           Sets the group.offset parameter
SolrQuery::setGroupTruncate                                         If true, facet counts are based on the most relevant document of each group matching the query
SolrQuery::setHighlight                                             Enables or disables highlighting
SolrQuery::setHighlightAlternateField                               Specifies the backup field to use
SolrQuery::setHighlightFormatter                                    Specify a formatter for the highlight output
SolrQuery::setHighlightFragmenter                                   Sets a text snippet generator for highlighted text
SolrQuery::setHighlightFragsize                                     The size of fragments to consider for highlighting
SolrQuery::setHighlightHighlightMultiTerm                           Use SpanScorer to highlight phrase terms
SolrQuery::setHighlightMaxAlternateFieldLength                      Sets the maximum number of characters of the field to return
SolrQuery::setHighlightMaxAnalyzedChars                             Specifies the number of characters into a document to look for suitable snippets
SolrQuery::setHighlightMergeContiguous                              Whether or not to collapse contiguous fragments into a single fragment
SolrQuery::setHighlightRegexMaxAnalyzedChars                        Specify the maximum number of characters to analyze
SolrQuery::setHighlightRegexPattern                                 Specify the regular expression for fragmenting
SolrQuery::setHighlightRegexSlop                                    Sets the factor by which the regex fragmenter can stray from the ideal fragment size
SolrQuery::setHighlightRequireFieldMatch                            Require field matching during highlighting
SolrQuery::setHighlightSimplePost                                   Sets the text which appears after a highlighted term
SolrQuery::setHighlightSimplePre                                    Sets the text which appears before a highlighted term
SolrQuery::setHighlightSnippets                                     Sets the maximum number of highlighted snippets to generate per field
SolrQuery::setHighlightUsePhraseHighlighter                         Whether to highlight phrase terms only when they appear within the query phrase
SolrQuery::setMlt                                                   Enables or disables moreLikeThis
SolrQuery::setMltBoost                                              Set if the query will be boosted by the interesting term relevance
SolrQuery::setMltCount                                              Set the number of similar documents to return for each result
SolrQuery::setMltMaxNumQueryTerms                                   Sets the maximum number of query terms included
SolrQuery::setMltMaxNumTokens                                       Specifies the maximum number of tokens to parse
SolrQuery::setMltMaxWordLength                                      Sets the maximum word length
SolrQuery::setMltMinDocFrequency                                    Sets the mltMinDoc frequency
SolrQuery::setMltMinTermFrequency                                   Sets the frequency below which terms will be ignored in the source docs
SolrQuery::setMltMinWordLength                                      Sets the minimum word length
SolrQuery::setOmitHeader                                            Exclude the header from the returned results
SolrQuery::setQuery                                                 Sets the search query
SolrQuery::setRows                                                  Specifies the maximum number of rows to return in the result
SolrQuery::setShowDebugInfo                                         Flag to show debug information
SolrQuery::setStart                                                 Specifies the number of rows to skip
SolrQuery::setStats                                                 Enables or disables the Stats component
SolrQuery::setTerms                                                 Enables or disables the TermsComponent
SolrQuery::setTermsField                                            Sets the name of the field to get the Terms from
SolrQuery::setTermsIncludeLowerBound                                Include the lower bound term in the result set
SolrQuery::setTermsIncludeUpperBound                                Include the upper bound term in the result set
SolrQuery::setTermsLimit                                            Sets the maximum number of terms to return
SolrQuery::setTermsLowerBound                                       Specifies the Term to start from
SolrQuery::setTermsMaxCount                                         Sets the maximum document frequency
SolrQuery::setTermsMinCount                                         Sets the minimum document frequency
SolrQuery::setTermsPrefix                                           Restrict matches to terms that start with the prefix
SolrQuery::setTermsReturnRaw                                        Return the raw characters of the indexed term
SolrQuery::setTermsSort                                             Specifies how to sort the returned terms
SolrQuery::setTermsUpperBound                                       Sets the term to stop at
SolrQuery::setTimeAllowed                                           The time allowed for search to finish
SolrQuery::__construct                                              Constructor
SolrQuery::__destruct                                               Destructor
SolrQueryResponse::__construct                                      Constructor
SolrQueryResponse::__destruct                                       Destructor
SolrResponse::getDigestedResponse                                   Returns the XML response as serialized PHP data
SolrResponse::getHttpStatus                                         Returns the HTTP status of the response
SolrResponse::getHttpStatusMessage                                  Returns more details on the HTTP status
SolrResponse::getRawRequest                                         Returns the raw request sent to the Solr server
SolrResponse::getRawRequestHeaders                                  Returns the raw request headers sent to the Solr server
SolrResponse::getRawResponse                                        Returns the raw response from the server
SolrResponse::getRawResponseHeaders                                 Returns the raw response headers from the server
SolrResponse::getRequestUrl                                         Returns the full URL the request was sent to
SolrResponse::getResponse                                           Returns a SolrObject representing the XML response from the server
SolrResponse::setParseMode                                          Sets the parse mode
SolrResponse::success                                               Was the request a success
SolrServerException::getInternalInfo                                Returns internal information where the Exception was thrown
SolrUpdateResponse::__construct                                     Constructor
SolrUpdateResponse::__destruct                                      Destructor
SolrUtils::digestXmlResponse                                        Parses an response XML string into a SolrObject
SolrUtils::escapeQueryChars                                         Escapes a lucene query string
SolrUtils::getSolrVersion                                           Returns the current version of the Solr extension
SolrUtils::queryPhrase                                              Prepares a phrase from an unescaped lucene string
solr_get_version                                                    Returns the current version of the Apache Solr extension
SphinxClient::addQuery                                              Add query to multi-query batch
SphinxClient::buildExcerpts                                         Build text snippets
SphinxClient::buildKeywords                                         Extract keywords from query
SphinxClient::close                                                 Closes previously opened persistent connection
SphinxClient::escapeString                                          Escape special characters
SphinxClient::getLastError                                          Get the last error message
SphinxClient::getLastWarning                                        Get the last warning
SphinxClient::open                                                  Opens persistent connection to the server
SphinxClient::query                                                 Execute search query
SphinxClient::resetFilters                                          Clear all filters
SphinxClient::resetGroupBy                                          Clear all group-by settings
SphinxClient::runQueries                                            Run a batch of search queries
SphinxClient::setArrayResult                                        Change the format of result set array
SphinxClient::setConnectTimeout                                     Set connection timeout
SphinxClient::setFieldWeights                                       Set field weights
SphinxClient::setFilter                                             Add new integer values set filter
SphinxClient::setFilterFloatRange                                   Add new float range filter
SphinxClient::setFilterRange                                        Add new integer range filter
SphinxClient::setGeoAnchor                                          Set anchor point for a geosphere distance calculations
SphinxClient::setGroupBy                                            Set grouping attribute
SphinxClient::setGroupDistinct                                      Set attribute name for per-group distinct values count calculations
SphinxClient::setIDRange                                            Set a range of accepted document IDs
SphinxClient::setIndexWeights                                       Set per-index weights
SphinxClient::setLimits                                             Set offset and limit of the result set
SphinxClient::setMatchMode                                          Set full-text query matching mode
SphinxClient::setMaxQueryTime                                       Set maximum query time
SphinxClient::setOverride                                           Sets temporary per-document attribute value overrides
SphinxClient::setRankingMode                                        Set ranking mode
SphinxClient::setRetries                                            Set retry count and delay
SphinxClient::setSelect                                             Set select clause
SphinxClient::setServer                                             Set searchd host and port
SphinxClient::setSortMode                                           Set matches sorting mode
SphinxClient::status                                                Queries searchd status
SphinxClient::updateAttributes                                      Update document attributes
SphinxClient::__construct                                           Create a new SphinxClient object
SplDoublyLinkedList::add                                            Add/insert a new value at the specified index
SplDoublyLinkedList::bottom                                         Peeks at the node from the beginning of the doubly linked list
SplDoublyLinkedList::count                                          Counts the number of elements in the doubly linked list
SplDoublyLinkedList::current                                        Return current array entry
SplDoublyLinkedList::getIteratorMode                                Returns the mode of iteration
SplDoublyLinkedList::isEmpty                                        Checks whether the doubly linked list is empty
SplDoublyLinkedList::key                                            Return current node index
SplDoublyLinkedList::next                                           Move to next entry
SplDoublyLinkedList::offsetExists                                   Returns whether the requested $index exists
SplDoublyLinkedList::offsetGet                                      Returns the value at the specified $index
SplDoublyLinkedList::offsetSet                                      Sets the value at the specified $index to $newval
SplDoublyLinkedList::offsetUnset                                    Unsets the value at the specified $index
SplDoublyLinkedList::pop                                            Pops a node from the end of the doubly linked list
SplDoublyLinkedList::prev                                           Move to previous entry
SplDoublyLinkedList::push                                           Pushes an element at the end of the doubly linked list
SplDoublyLinkedList::rewind                                         Rewind iterator back to the start
SplDoublyLinkedList::serialize                                      Serializes the storage
SplDoublyLinkedList::setIteratorMode                                Sets the mode of iteration
SplDoublyLinkedList::shift                                          Shifts a node from the beginning of the doubly linked list
SplDoublyLinkedList::top                                            Peeks at the node from the end of the doubly linked list
SplDoublyLinkedList::unserialize                                    Unserializes the storage
SplDoublyLinkedList::unshift                                        Prepends the doubly linked list with an element
SplDoublyLinkedList::valid                                          Check whether the doubly linked list contains more nodes
SplDoublyLinkedList::__construct                                    Constructs a new doubly linked list
SplFileInfo::getATime                                               Gets last access time of the file
SplFileInfo::getBasename                                            Gets the base name of the file
SplFileInfo::getCTime                                               Gets the inode change time
SplFileInfo::getExtension                                           Gets the file extension
SplFileInfo::getFileInfo                                            Gets an SplFileInfo object for the file
SplFileInfo::getFilename                                            Gets the filename
SplFileInfo::getGroup                                               Gets the file group
SplFileInfo::getInode                                               Gets the inode for the file
SplFileInfo::getLinkTarget                                          Gets the target of a link
SplFileInfo::getMTime                                               Gets the last modified time
SplFileInfo::getOwner                                               Gets the owner of the file
SplFileInfo::getPath                                                Gets the path without filename
SplFileInfo::getPathInfo                                            Gets an SplFileInfo object for the path
SplFileInfo::getPathname                                            Gets the path to the file
SplFileInfo::getPerms                                               Gets file permissions
SplFileInfo::getRealPath                                            Gets absolute path to file
SplFileInfo::getSize                                                Gets file size
SplFileInfo::getType                                                Gets file type
SplFileInfo::isDir                                                  Tells if the file is a directory
SplFileInfo::isExecutable                                           Tells if the file is executable
SplFileInfo::isFile                                                 Tells if the object references a regular file
SplFileInfo::isLink                                                 Tells if the file is a link
SplFileInfo::isReadable                                             Tells if file is readable
SplFileInfo::isWritable                                             Tells if the entry is writable
SplFileInfo::openFile                                               Gets an SplFileObject object for the file
SplFileInfo::setFileClass                                           Sets the class used with SplFileInfo::openFile
SplFileInfo::setInfoClass                                           Sets the class used with SplFileInfo::getFileInfo and SplFileInfo::getPathInfo
SplFileInfo::__construct                                            Construct a new SplFileInfo object
SplFileInfo::__toString                                             Returns the path to the file as a string
SplFileObject::current                                              Retrieve current line of file
SplFileObject::eof                                                  Reached end of file
SplFileObject::fflush                                               Flushes the output to the file
SplFileObject::fgetc                                                Gets character from file
SplFileObject::fgetcsv                                              Gets line from file and parse as CSV fields
SplFileObject::fgets                                                Gets line from file
SplFileObject::fgetss                                               Gets line from file and strip HTML tags
SplFileObject::flock                                                Portable file locking
SplFileObject::fpassthru                                            Output all remaining data on a file pointer
SplFileObject::fputcsv                                              Write a field array as a CSV line
SplFileObject::fread                                                Read from file
SplFileObject::fscanf                                               Parses input from file according to a format
SplFileObject::fseek                                                Seek to a position
SplFileObject::fstat                                                Gets information about the file
SplFileObject::ftell                                                Return current file position
SplFileObject::ftruncate                                            Truncates the file to a given length
SplFileObject::fwrite                                               Write to file
SplFileObject::getChildren                                          No purpose
SplFileObject::getCsvControl                                        Get the delimiter, enclosure and escape character for CSV
SplFileObject::getCurrentLine                                       Alias of SplFileObject::fgets
SplFileObject::getFlags                                             Gets flags for the SplFileObject
SplFileObject::getMaxLineLen                                        Get maximum line length
SplFileObject::hasChildren                                          SplFileObject does not have children
SplFileObject::key                                                  Get line number
SplFileObject::next                                                 Read next line
SplFileObject::rewind                                               Rewind the file to the first line
SplFileObject::seek                                                 Seek to specified line
SplFileObject::setCsvControl                                        Set the delimiter, enclosure and escape character for CSV
SplFileObject::setFlags                                             Sets flags for the SplFileObject
SplFileObject::setMaxLineLen                                        Set maximum line length
SplFileObject::valid                                                Not at EOF
SplFileObject::__construct                                          Construct a new file object
SplFileObject::__toString                                           Alias of SplFileObject::fgets
SplFixedArray::count                                                Returns the size of the array
SplFixedArray::current                                              Return current array entry
SplFixedArray::fromArray                                            Import a PHP array in a SplFixedArray instance
SplFixedArray::getSize                                              Gets the size of the array
SplFixedArray::key                                                  Return current array index
SplFixedArray::next                                                 Move to next entry
SplFixedArray::offsetExists                                         Returns whether the requested index exists
SplFixedArray::offsetGet                                            Returns the value at the specified index
SplFixedArray::offsetSet                                            Sets a new value at a specified index
SplFixedArray::offsetUnset                                          Unsets the value at the specified $index
SplFixedArray::rewind                                               Rewind iterator back to the start
SplFixedArray::setSize                                              Change the size of an array
SplFixedArray::toArray                                              Returns a PHP array from the fixed array
SplFixedArray::valid                                                Check whether the array contains more elements
SplFixedArray::__construct                                          Constructs a new fixed array
SplFixedArray::__wakeup                                             Reinitialises the array after being unserialised
SplHeap::compare                                                    Compare elements in order to place them correctly in the heap while sifting up
SplHeap::count                                                      Counts the number of elements in the heap
SplHeap::current                                                    Return current node pointed by the iterator
SplHeap::extract                                                    Extracts a node from top of the heap and sift up
SplHeap::insert                                                     Inserts an element in the heap by sifting it up
SplHeap::isCorrupted                                                Tells if the heap is in a corrupted state
SplHeap::isEmpty                                                    Checks whether the heap is empty
SplHeap::key                                                        Return current node index
SplHeap::next                                                       Move to the next node
SplHeap::recoverFromCorruption                                      Recover from the corrupted state and allow further actions on the heap
SplHeap::rewind                                                     Rewind iterator back to the start (no-op)
SplHeap::top                                                        Peeks at the node from the top of the heap
SplHeap::valid                                                      Check whether the heap contains more nodes
SplHeap::__construct                                                Constructs a new empty heap
SplMaxHeap::compare                                                 Compare elements in order to place them correctly in the heap while sifting up
SplMinHeap::compare                                                 Compare elements in order to place them correctly in the heap while sifting up
SplObjectStorage::addAll                                            Adds all objects from another storage
SplObjectStorage::attach                                            Adds an object in the storage
SplObjectStorage::contains                                          Checks if the storage contains a specific object
SplObjectStorage::count                                             Returns the number of objects in the storage
SplObjectStorage::current                                           Returns the current storage entry
SplObjectStorage::detach                                            Removes an object from the storage
SplObjectStorage::getHash                                           Calculate a unique identifier for the contained objects
SplObjectStorage::getInfo                                           Returns the data associated with the current iterator entry
SplObjectStorage::key                                               Returns the index at which the iterator currently is
SplObjectStorage::next                                              Move to the next entry
SplObjectStorage::offsetExists                                      Checks whether an object exists in the storage
SplObjectStorage::offsetGet                                         Returns the data associated with an object
SplObjectStorage::offsetSet                                         Associates data to an object in the storage
SplObjectStorage::offsetUnset                                       Removes an object from the storage
SplObjectStorage::removeAll                                         Removes objects contained in another storage from the current storage
SplObjectStorage::removeAllExcept                                   Removes all objects except for those contained in another storage from the current storage
SplObjectStorage::rewind                                            Rewind the iterator to the first storage element
SplObjectStorage::serialize                                         Serializes the storage
SplObjectStorage::setInfo                                           Sets the data associated with the current iterator entry
SplObjectStorage::unserialize                                       Unserializes a storage from its string representation
SplObjectStorage::valid                                             Returns if the current iterator entry is valid
SplObserver::update                                                 Receive update from subject
SplPriorityQueue::compare                                           Compare priorities in order to place elements correctly in the heap while sifting up
SplPriorityQueue::count                                             Counts the number of elements in the queue
SplPriorityQueue::current                                           Return current node pointed by the iterator
SplPriorityQueue::extract                                           Extracts a node from top of the heap and sift up
SplPriorityQueue::getExtractFlags                                   Get the flags of extraction
SplPriorityQueue::insert                                            Inserts an element in the queue by sifting it up
SplPriorityQueue::isCorrupted                                       Tells if the priority queue is in a corrupted state
SplPriorityQueue::isEmpty                                           Checks whether the queue is empty
SplPriorityQueue::key                                               Return current node index
SplPriorityQueue::next                                              Move to the next node
SplPriorityQueue::recoverFromCorruption                             Recover from the corrupted state and allow further actions on the queue
SplPriorityQueue::rewind                                            Rewind iterator back to the start (no-op)
SplPriorityQueue::setExtractFlags                                   Sets the mode of extraction
SplPriorityQueue::top                                               Peeks at the node from the top of the queue
SplPriorityQueue::valid                                             Check whether the queue contains more nodes
SplPriorityQueue::__construct                                       Constructs a new empty queue
SplQueue::dequeue                                                   Dequeues a node from the queue
SplQueue::enqueue                                                   Adds an element to the queue
SplQueue::setIteratorMode                                           Sets the mode of iteration
SplQueue::__construct                                               Constructs a new queue implemented using a doubly linked list
SplStack::setIteratorMode                                           Sets the mode of iteration
SplStack::__construct                                               Constructs a new stack implemented using a doubly linked list
SplSubject::attach                                                  Attach an SplObserver
SplSubject::detach                                                  Detach an observer
SplSubject::notify                                                  Notify an observer
SplTempFileObject::__construct                                      Construct a new temporary file object
Spoofchecker::areConfusable                                         Checks if given strings can be confused
Spoofchecker::isSuspicious                                          Checks if a given text contains any suspicious characters
Spoofchecker::setAllowedLocales                                     Locales to use when running checks
Spoofchecker::setChecks                                             Set the checks to run
Spoofchecker::__construct                                           Constructor
SQLite3::backup                                                     Backup one database to another database
SQLite3::busyTimeout                                                Sets the busy connection handler
SQLite3::changes                                                    Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement
SQLite3::close                                                      Closes the database connection
SQLite3::createAggregate                                            Registers a PHP function for use as an SQL aggregate function
SQLite3::createCollation                                            Registers a PHP function for use as an SQL collating function
SQLite3::createFunction                                             Registers a PHP function for use as an SQL scalar function
SQLite3::enableExceptions                                           Enable throwing exceptions
SQLite3::escapeString                                               Returns a string that has been properly escaped
SQLite3::exec                                                       Executes a result-less query against a given database
SQLite3::lastErrorCode                                              Returns the numeric result code of the most recent failed SQLite request
SQLite3::lastErrorMsg                                               Returns English text describing the most recent failed SQLite request
SQLite3::lastInsertRowID                                            Returns the row ID of the most recent INSERT into the database
SQLite3::loadExtension                                              Attempts to load an SQLite extension library
SQLite3::open                                                       Opens an SQLite database
SQLite3::openBlob                                                   Opens a stream resource to read a BLOB
SQLite3::prepare                                                    Prepares an SQL statement for execution
SQLite3::query                                                      Executes an SQL query
SQLite3::querySingle                                                Executes a query and returns a single result
SQLite3::setAuthorizer                                              Configures a callback to be used as an authorizer to limit what a statement can do
SQLite3::version                                                    Returns the SQLite3 library version as a string constant and as a number
SQLite3::__construct                                                Instantiates an SQLite3 object and opens an SQLite 3 database
SQLite3Result::columnName                                           Returns the name of the nth column
SQLite3Result::columnType                                           Returns the type of the nth column
SQLite3Result::fetchArray                                           Fetches a result row as an associative or numerically indexed array or both
SQLite3Result::finalize                                             Closes the result set
SQLite3Result::numColumns                                           Returns the number of columns in the result set
SQLite3Result::reset                                                Resets the result set back to the first row
SQLite3Stmt::bindParam                                              Binds a parameter to a statement variable
SQLite3Stmt::bindValue                                              Binds the value of a parameter to a statement variable
SQLite3Stmt::clear                                                  Clears all current bound parameters
SQLite3Stmt::close                                                  Closes the prepared statement
SQLite3Stmt::execute                                                Executes a prepared statement and returns a result set object
SQLite3Stmt::getSQL                                                 Get the SQL of the statement
SQLite3Stmt::paramCount                                             Returns the number of parameters within the prepared statement
SQLite3Stmt::readOnly                                               Returns whether a statement is definitely read only
SQLite3Stmt::reset                                                  Resets the prepared statement
sqlsrv_begin_transaction                                            Begins a database transaction
sqlsrv_cancel                                                       Cancels a statement
sqlsrv_client_info                                                  Returns information about the client and specified connection
sqlsrv_close                                                        Closes an open connection and releases resourses associated with the connection
sqlsrv_commit                                                       Commits a transaction that was begun with sqlsrv_begin_transaction
sqlsrv_configure                                                    Changes the driver error handling and logging configurations
sqlsrv_connect                                                      Opens a connection to a Microsoft SQL Server database
sqlsrv_errors                                                       Returns error and warning information about the last SQLSRV operation performed
sqlsrv_execute                                                      Executes a statement prepared with sqlsrv_prepare
sqlsrv_fetch                                                        Makes the next row in a result set available for reading
sqlsrv_fetch_array                                                  Returns a row as an array
sqlsrv_fetch_object                                                 Retrieves the next row of data in a result set as an object
sqlsrv_field_metadata                                               Retrieves metadata for the fields of a statement prepared by sqlsrv_prepare or sqlsrv_query
sqlsrv_free_stmt                                                    Frees all resources for the specified statement
sqlsrv_get_config                                                   Returns the value of the specified configuration setting
sqlsrv_get_field                                                    Gets field data from the currently selected row
sqlsrv_has_rows                                                     Indicates whether the specified statement has rows
sqlsrv_next_result                                                  Makes the next result of the specified statement active
sqlsrv_num_fields                                                   Retrieves the number of fields (columns) on a statement
sqlsrv_num_rows                                                     Retrieves the number of rows in a result set
sqlsrv_prepare                                                      Prepares a query for execution
sqlsrv_query                                                        Prepares and executes a query
sqlsrv_rollback                                                     Rolls back a transaction that was begun with sqlsrv_begin_transaction
sqlsrv_rows_affected                                                Returns the number of rows modified by the last INSERT, UPDATE, or DELETE query executed
sqlsrv_send_stream_data                                             Sends data from parameter streams to the server
sqlsrv_server_info                                                  Returns information about the server
SqlStatement::bind                                                  Bind statement parameters
SqlStatement::execute                                               Execute the operation
SqlStatement::getNextResult                                         Get next result
SqlStatement::getResult                                             Get result
SqlStatement::hasMoreResults                                        Check for more results
SqlStatement::__construct                                           Description constructor
SqlStatementResult::fetchAll                                        Get all rows from result
SqlStatementResult::fetchOne                                        Get single row
SqlStatementResult::getAffectedItemsCount                           Get affected row count
SqlStatementResult::getColumnNames                                  Get column names
SqlStatementResult::getColumns                                      Get columns
SqlStatementResult::getColumnsCount                                 Get column count
SqlStatementResult::getGeneratedIds                                 Get generated ids
SqlStatementResult::getLastInsertId                                 Get last insert id
SqlStatementResult::getWarnings                                     Get warnings from last operation
SqlStatementResult::getWarningsCount                                Get warning count from last operation
SqlStatementResult::hasData                                         Check if result has data
SqlStatementResult::nextResult                                      Get next result
SqlStatementResult::__construct                                     Description constructor
ssdeep_fuzzy_compare                                                Calculates the match score between two fuzzy hash signatures
ssdeep_fuzzy_hash                                                   Create a fuzzy hash from a string
ssdeep_fuzzy_hash_filename                                          Create a fuzzy hash from a file
ssh2://                                                             Secure Shell 2
ssh2_auth_agent                                                     Authenticate over SSH using the ssh agent
ssh2_auth_hostbased_file                                            Authenticate using a public hostkey
ssh2_auth_none                                                      Authenticate as "none"
ssh2_auth_password                                                  Authenticate over SSH using a plain password
ssh2_auth_pubkey_file                                               Authenticate using a public key
ssh2_connect                                                        Connect to an SSH server
ssh2_disconnect                                                     Close a connection to a remote SSH server
ssh2_exec                                                           Execute a command on a remote server
ssh2_fetch_stream                                                   Fetch an extended data stream
ssh2_fingerprint                                                    Retrieve fingerprint of remote server
ssh2_forward_accept                                                 Accept a connection created by a listener
ssh2_forward_listen                                                 Bind a port on the remote server and listen for connections
ssh2_methods_negotiated                                             Return list of negotiated methods
ssh2_poll                                                           Poll the channels/listeners/streams for events
ssh2_publickey_add                                                  Add an authorized publickey
ssh2_publickey_init                                                 Initialize Publickey subsystem
ssh2_publickey_list                                                 List currently authorized publickeys
ssh2_publickey_remove                                               Remove an authorized publickey
ssh2_scp_recv                                                       Request a file via SCP
ssh2_scp_send                                                       Send a file via SCP
ssh2_send_eof                                                       Send EOF to stream
ssh2_sftp                                                           Initialize SFTP subsystem
ssh2_sftp_chmod                                                     Changes file mode
ssh2_sftp_lstat                                                     Stat a symbolic link
ssh2_sftp_mkdir                                                     Create a directory
ssh2_sftp_readlink                                                  Return the target of a symbolic link
ssh2_sftp_realpath                                                  Resolve the realpath of a provided path string
ssh2_sftp_rename                                                    Rename a remote file
ssh2_sftp_rmdir                                                     Remove a directory
ssh2_sftp_stat                                                      Stat a file on a remote filesystem
ssh2_sftp_symlink                                                   Create a symlink
ssh2_sftp_unlink                                                    Delete a file
ssh2_shell                                                          Request an interactive shell
ssh2_tunnel                                                         Open a tunnel through a remote server
SSL context options                                                 SSL context option listing
Statement::getNextResult                                            Get next result
Statement::getResult                                                Get result
Statement::hasMoreResults                                           Check if more results
Statement::__construct                                              Description constructor
stats_absolute_deviation                                            Returns the absolute deviation of an array of values
stats_cdf_beta                                                      Calculates any one parameter of the beta distribution given values for the others
stats_cdf_binomial                                                  Calculates any one parameter of the binomial distribution given values for the others
stats_cdf_cauchy                                                    Calculates any one parameter of the Cauchy distribution given values for the others
stats_cdf_chisquare                                                 Calculates any one parameter of the chi-square distribution given values for the others
stats_cdf_exponential                                               Calculates any one parameter of the exponential distribution given values for the others
stats_cdf_f                                                         Calculates any one parameter of the F distribution given values for the others
stats_cdf_gamma                                                     Calculates any one parameter of the gamma distribution given values for the others
stats_cdf_laplace                                                   Calculates any one parameter of the Laplace distribution given values for the others
stats_cdf_logistic                                                  Calculates any one parameter of the logistic distribution given values for the others
stats_cdf_negative_binomial                                         Calculates any one parameter of the negative binomial distribution given values for the others
stats_cdf_noncentral_chisquare                                      Calculates any one parameter of the non-central chi-square distribution given values for the others
stats_cdf_noncentral_f                                              Calculates any one parameter of the non-central F distribution given values for the others
stats_cdf_noncentral_t                                              Calculates any one parameter of the non-central t-distribution give values for the others
stats_cdf_normal                                                    Calculates any one parameter of the normal distribution given values for the others
stats_cdf_poisson                                                   Calculates any one parameter of the Poisson distribution given values for the others
stats_cdf_t                                                         Calculates any one parameter of the t-distribution given values for the others
stats_cdf_uniform                                                   Calculates any one parameter of the uniform distribution given values for the others
stats_cdf_weibull                                                   Calculates any one parameter of the Weibull distribution given values for the others
stats_covariance                                                    Computes the covariance of two data sets
stats_dens_beta                                                     Probability density function of the beta distribution
stats_dens_cauchy                                                   Probability density function of the Cauchy distribution
stats_dens_chisquare                                                Probability density function of the chi-square distribution
stats_dens_exponential                                              Probability density function of the exponential distribution
stats_dens_f                                                        Probability density function of the F distribution
stats_dens_gamma                                                    Probability density function of the gamma distribution
stats_dens_laplace                                                  Probability density function of the Laplace distribution
stats_dens_logistic                                                 Probability density function of the logistic distribution
stats_dens_normal                                                   Probability density function of the normal distribution
stats_dens_pmf_binomial                                             Probability mass function of the binomial distribution
stats_dens_pmf_hypergeometric                                       Probability mass function of the hypergeometric distribution
stats_dens_pmf_negative_binomial                                    Probability mass function of the negative binomial distribution
stats_dens_pmf_poisson                                              Probability mass function of the Poisson distribution
stats_dens_t                                                        Probability density function of the t-distribution
stats_dens_uniform                                                  Probability density function of the uniform distribution
stats_dens_weibull                                                  Probability density function of the Weibull distribution
stats_harmonic_mean                                                 Returns the harmonic mean of an array of values
stats_kurtosis                                                      Computes the kurtosis of the data in the array
stats_rand_gen_beta                                                 Generates a random deviate from the beta distribution
stats_rand_gen_chisquare                                            Generates a random deviate from the chi-square distribution
stats_rand_gen_exponential                                          Generates a random deviate from the exponential distribution
stats_rand_gen_f                                                    Generates a random deviate from the F distribution
stats_rand_gen_funiform                                             Generates uniform float between low (exclusive) and high (exclusive)
stats_rand_gen_gamma                                                Generates a random deviate from the gamma distribution
stats_rand_gen_ibinomial                                            Generates a random deviate from the binomial distribution
stats_rand_gen_ibinomial_negative                                   Generates a random deviate from the negative binomial distribution
stats_rand_gen_int                                                  Generates random integer between 1 and 2147483562
stats_rand_gen_ipoisson                                             Generates a single random deviate from a Poisson distribution
stats_rand_gen_iuniform                                             Generates integer uniformly distributed between LOW (inclusive) and HIGH (inclusive)
stats_rand_gen_noncentral_chisquare                                 Generates a random deviate from the non-central chi-square distribution
stats_rand_gen_noncentral_f                                         Generates a random deviate from the noncentral F distribution
stats_rand_gen_noncentral_t                                         Generates a single random deviate from a non-central t-distribution
stats_rand_gen_normal                                               Generates a single random deviate from a normal distribution
stats_rand_gen_t                                                    Generates a single random deviate from a t-distribution
stats_rand_get_seeds                                                Get the seed values of the random number generator
stats_rand_phrase_to_seeds                                          Generate two seeds for the RGN random number generator
stats_rand_ranf                                                     Generates a random floating point number between 0 and 1
stats_rand_setall                                                   Set seed values to the random generator
stats_skew                                                          Computes the skewness of the data in the array
stats_standard_deviation                                            Returns the standard deviation
stats_stat_binomial_coef                                            Returns a binomial coefficient
stats_stat_correlation                                              Returns the Pearson correlation coefficient of two data sets
stats_stat_factorial                                                Returns the factorial of an integer
stats_stat_independent_t                                            Returns the t-value from the independent two-sample t-test
stats_stat_innerproduct                                             Returns the inner product of two vectors
stats_stat_paired_t                                                 Returns the t-value of the dependent t-test for paired samples
stats_stat_percentile                                               Returns the percentile value
stats_stat_powersum                                                 Returns the power sum of a vector
stats_variance                                                      Returns the variance
Stomp::abort                                                        Rolls back a transaction in progress
Stomp::ack                                                          Acknowledges consumption of a message
Stomp::begin                                                        Starts a transaction
Stomp::commit                                                       Commits a transaction in progress
Stomp::error                                                        Gets the last stomp error
Stomp::getReadTimeout                                               Gets read timeout
Stomp::getSessionId                                                 Gets the current stomp session ID
Stomp::hasFrame                                                     Indicates whether or not there is a frame ready to read
Stomp::readFrame                                                    Reads the next frame
Stomp::send                                                         Sends a message
Stomp::setReadTimeout                                               Sets read timeout
Stomp::subscribe                                                    Registers to listen to a given destination
Stomp::unsubscribe                                                  Removes an existing subscription
Stomp::__construct                                                  Opens a connection
Stomp::__destruct                                                   Closes stomp connection
StompException::getDetails                                          Get exception details
StompFrame::__construct                                             Constructor
stomp_connect_error                                                 Returns a string description of the last connect error
stomp_version                                                       Gets the current stomp extension version
strcmp                                                              Binary safe string comparison
streamWrapper::dir_closedir                                         Close directory handle
streamWrapper::dir_opendir                                          Open directory handle
streamWrapper::dir_readdir                                          Read entry from directory handle
streamWrapper::dir_rewinddir                                        Rewind directory handle
streamWrapper::mkdir                                                Create a directory
streamWrapper::rename                                               Renames a file or directory
streamWrapper::rmdir                                                Removes a directory
streamWrapper::stream_cast                                          Retrieve the underlaying resource
streamWrapper::stream_close                                         Close a resource
streamWrapper::stream_eof                                           Tests for end-of-file on a file pointer
streamWrapper::stream_flush                                         Flushes the output
streamWrapper::stream_lock                                          Advisory file locking
streamWrapper::stream_metadata                                      Change stream metadata
streamWrapper::stream_open                                          Opens file or URL
streamWrapper::stream_read                                          Read from stream
streamWrapper::stream_seek                                          Seeks to specific location in a stream
streamWrapper::stream_set_option                                    Change stream options
streamWrapper::stream_stat                                          Retrieve information about a file resource
streamWrapper::stream_tell                                          Retrieve the current position of a stream
streamWrapper::stream_truncate                                      Truncate stream
streamWrapper::stream_write                                         Write to stream
streamWrapper::unlink                                               Delete a file
streamWrapper::url_stat                                             Retrieve information about a file
streamWrapper::__construct                                          Constructs a new stream wrapper
streamWrapper::__destruct                                           Destructs an existing stream wrapper
stream_notification_callback                                        A callback function for the notification context parameter
strlen                                                              Get string length
strncmp                                                             Binary safe string comparison of the first n characters
str_contains                                                        Determine if a string contains a given substring
str_ends_with                                                       Checks if a string ends with a given substring
str_starts_with                                                     Checks if a string starts with a given substring
SVM::crossvalidate                                                  Test training params on subsets of the training data
SVM::getOptions                                                     Return the current training parameters
SVM::setOptions                                                     Set training parameters
SVM::train                                                          Create a SVMModel based on training data
SVM::__construct                                                    Construct a new SVM object
SVMModel::checkProbabilityModel                                     Returns true if the model has probability information
SVMModel::getLabels                                                 Get the labels the model was trained on
SVMModel::getNrClass                                                Returns the number of classes the model was trained with
SVMModel::getSvmType                                                Get the SVM type the model was trained with
SVMModel::getSvrProbability                                         Get the sigma value for regression types
SVMModel::load                                                      Load a saved SVM Model
SVMModel::predict                                                   Predict a value for previously unseen data
SVMModel::predict_probability                                       Return class probabilities for previous unseen data
SVMModel::save                                                      Save a model to a file
SVMModel::__construct                                               Construct a new SVMModel
svn_add                                                             Schedules the addition of an item in a working directory
svn_auth_get_parameter                                              Retrieves authentication parameter
svn_auth_set_parameter                                              Sets an authentication parameter
svn_blame                                                           Get the SVN blame for a file
svn_cat                                                             Returns the contents of a file in a repository
svn_checkout                                                        Checks out a working copy from the repository
svn_cleanup                                                         Recursively cleanup a working copy directory, finishing incomplete operations and removing locks
svn_client_version                                                  Returns the version of the SVN client libraries
svn_commit                                                          Sends changes from the local working copy to the repository
svn_delete                                                          Delete items from a working copy or repository
svn_diff                                                            Recursively diffs two paths
svn_export                                                          Export the contents of a SVN directory
svn_fs_abort_txn                                                    Abort a transaction, returns true if everything is okay, false otherwise
svn_fs_apply_text                                                   Creates and returns a stream that will be used to replace
svn_fs_begin_txn2                                                   Create a new transaction
svn_fs_change_node_prop                                             Return true if everything is ok, false otherwise
svn_fs_check_path                                                   Determines what kind of item lives at path in a given repository fsroot
svn_fs_contents_changed                                             Return true if content is different, false otherwise
svn_fs_copy                                                         Copies a file or a directory, returns true if all is ok, false otherwise
svn_fs_delete                                                       Deletes a file or a directory, return true if all is ok, false otherwise
svn_fs_dir_entries                                                  Enumerates the directory entries under path; returns a hash of dir names to file type
svn_fs_file_contents                                                Returns a stream to access the contents of a file from a given version of the fs
svn_fs_file_length                                                  Returns the length of a file from a given version of the fs
svn_fs_is_dir                                                       Return true if the path points to a directory, false otherwise
svn_fs_is_file                                                      Return true if the path points to a file, false otherwise
svn_fs_make_dir                                                     Creates a new empty directory, returns true if all is ok, false otherwise
svn_fs_make_file                                                    Creates a new empty file, returns true if all is ok, false otherwise
svn_fs_node_created_rev                                             Returns the revision in which path under fsroot was created
svn_fs_node_prop                                                    Returns the value of a property for a node
svn_fs_props_changed                                                Return true if props are different, false otherwise
svn_fs_revision_prop                                                Fetches the value of a named property
svn_fs_revision_root                                                Get a handle on a specific version of the repository root
svn_fs_txn_root                                                     Creates and returns a transaction root
svn_fs_youngest_rev                                                 Returns the number of the youngest revision in the filesystem
svn_import                                                          Imports an unversioned path into a repository
svn_log                                                             Returns the commit log messages of a repository URL
svn_ls                                                              Returns list of directory contents in repository URL, optionally at revision number
svn_mkdir                                                           Creates a directory in a working copy or repository
svn_repos_create                                                    Create a new subversion repository at path
svn_repos_fs                                                        Gets a handle on the filesystem for a repository
svn_repos_fs_begin_txn_for_commit                                   Create a new transaction
svn_repos_fs_commit_txn                                             Commits a transaction and returns the new revision
svn_repos_hotcopy                                                   Make a hot-copy of the repos at repospath; copy it to destpath
svn_repos_open                                                      Open a shared lock on a repository
svn_repos_recover                                                   Run recovery procedures on the repository located at path
svn_revert                                                          Revert changes to the working copy
svn_status                                                          Returns the status of working copy files and directories
svn_update                                                          Update working copy
Swoole\Async::dnsLookup                                             Async and non-blocking hostname to IP lookup.
Swoole\Async::read                                                  Read file stream asynchronously.
Swoole\Async::readFile                                              Read a file asynchronously.
Swoole\Async::set                                                   Update the async I/O options.
Swoole\Async::write                                                 Write data to a file stream asynchronously.
Swoole\Async::writeFile                                             Description
Swoole\Atomic::add                                                  Add a number to the value to the atomic object.
Swoole\Atomic::cmpset                                               Compare and set the value of the atomic object.
Swoole\Atomic::get                                                  Get the current value of the atomic object.
Swoole\Atomic::set                                                  Set a new value to the atomic object.
Swoole\Atomic::sub                                                  Subtract a number to the value of the atomic object.
Swoole\Atomic::__construct                                          Construct a swoole atomic object.
Swoole\Buffer::append                                               Append the string or binary data at the end of the memory buffer and return the new size of memory allocated.
Swoole\Buffer::clear                                                Reset the memory buffer.
Swoole\Buffer::expand                                               Expand the size of memory buffer.
Swoole\Buffer::read                                                 Read data from the memory buffer based on offset and length.
Swoole\Buffer::recycle                                              Release the memory to OS which is not used by the memory buffer.
Swoole\Buffer::substr                                               Read data from the memory buffer based on offset and length. Or remove data from the memory buffer.
Swoole\Buffer::write                                                Write data to the memory buffer. The memory allocated for the buffer will not be changed.
Swoole\Buffer::__construct                                          Fixed size memory blocks allocation.
Swoole\Buffer::__destruct                                           Destruct the Swoole memory buffer.
Swoole\Buffer::__toString                                           Get the string value of the memory buffer.
Swoole\Channel::pop                                                 Read and pop data from swoole channel.
Swoole\Channel::push                                                Write and push data into Swoole channel.
Swoole\Channel::stats                                               Get stats of swoole channel.
Swoole\Channel::__construct                                         Construct a Swoole Channel
Swoole\Channel::__destruct                                          Destruct a Swoole channel.
Swoole\Client::close                                                Close the connection established.
Swoole\Client::connect                                              Connect to the remote TCP or UDP port.
Swoole\Client::getpeername                                          Get the remote socket name of the connection.
Swoole\Client::getsockname                                          Get the local socket name of the connection.
Swoole\Client::isConnected                                          Check if the connection is established.
Swoole\Client::on                                                   Add callback functions triggered by events.
Swoole\Client::pause                                                Pause receiving data.
Swoole\Client::pipe                                                 Redirect the data to another file descriptor.
Swoole\Client::recv                                                 Receive data from the remote socket.
Swoole\Client::resume                                               Resume receiving data.
Swoole\Client::send                                                 Send data to the remote TCP socket.
Swoole\Client::sendfile                                             Send file to the remote TCP socket.
Swoole\Client::sendto                                               Send data to the remote UDP address.
Swoole\Client::set                                                  Set the Swoole client parameters before the connection is established.
Swoole\Client::sleep                                                Remove the TCP client from system event loop.
Swoole\Client::wakeup                                               Add the TCP client back into the system event loop.
Swoole\Client::__construct                                          Create Swoole sync or async TCP/UDP client, with or without SSL.
Swoole\Client::__destruct                                           Destruct the Swoole client.
Swoole\Connection\Iterator::count                                   Count connections.
Swoole\Connection\Iterator::current                                 Return current connection entry.
Swoole\Connection\Iterator::key                                     Return key of the current connection.
Swoole\Connection\Iterator::next                                    Move to the next connection.
Swoole\Connection\Iterator::offsetExists                            Check if offet exists.
Swoole\Connection\Iterator::offsetGet                               Offset to retrieve.
Swoole\Connection\Iterator::offsetSet                               Assign a Connection to the specified offset.
Swoole\Connection\Iterator::offsetUnset                             Unset an offset.
Swoole\Connection\Iterator::rewind                                  Rewinds iterator
Swoole\Connection\Iterator::valid                                   Check if current position is valid.
Swoole\Coroutine::call_user_func                                    Call a callback given by the first parameter
Swoole\Coroutine::call_user_func_array                              Call a callback with an array of parameters
Swoole\Coroutine::cli_wait                                          Description
Swoole\Coroutine::create                                            Description
Swoole\Coroutine::getuid                                            Description
Swoole\Coroutine::resume                                            Description
Swoole\Coroutine::suspend                                           Description
Swoole\Coroutine\Client::close                                      Description
Swoole\Coroutine\Client::connect                                    Description
Swoole\Coroutine\Client::getpeername                                Description
Swoole\Coroutine\Client::getsockname                                Description
Swoole\Coroutine\Client::isConnected                                Description
Swoole\Coroutine\Client::recv                                       Description
Swoole\Coroutine\Client::send                                       Description
Swoole\Coroutine\Client::sendfile                                   Description
Swoole\Coroutine\Client::sendto                                     Description
Swoole\Coroutine\Client::set                                        Description
Swoole\Coroutine\Client::__construct                                Description
Swoole\Coroutine\Client::__destruct                                 Description
Swoole\Coroutine\Http\Client::addFile                               Description
Swoole\Coroutine\Http\Client::close                                 Description
Swoole\Coroutine\Http\Client::execute                               Description
Swoole\Coroutine\Http\Client::get                                   Description
Swoole\Coroutine\Http\Client::getDefer                              Description
Swoole\Coroutine\Http\Client::isConnected                           Description
Swoole\Coroutine\Http\Client::post                                  Description
Swoole\Coroutine\Http\Client::recv                                  Description
Swoole\Coroutine\Http\Client::set                                   Description
Swoole\Coroutine\Http\Client::setCookies                            Description
Swoole\Coroutine\Http\Client::setData                               Description
Swoole\Coroutine\Http\Client::setDefer                              Description
Swoole\Coroutine\Http\Client::setHeaders                            Description
Swoole\Coroutine\Http\Client::setMethod                             Description
Swoole\Coroutine\Http\Client::__construct                           Description
Swoole\Coroutine\Http\Client::__destruct                            Description
Swoole\Coroutine\MySQL::close                                       Description
Swoole\Coroutine\MySQL::connect                                     Description
Swoole\Coroutine\MySQL::getDefer                                    Description
Swoole\Coroutine\MySQL::query                                       Description
Swoole\Coroutine\MySQL::recv                                        Description
Swoole\Coroutine\MySQL::setDefer                                    Description
Swoole\Coroutine\MySQL::__construct                                 Description
Swoole\Coroutine\MySQL::__destruct                                  Description
Swoole\Event::add                                                   Add new callback functions of a socket into the EventLoop.
Swoole\Event::defer                                                 Add a callback function to the next event loop.
Swoole\Event::del                                                   Remove all event callback functions of a socket.
Swoole\Event::exit                                                  Exit the eventloop, only available at client side.
Swoole\Event::set                                                   Update the event callback functions of a socket.
Swoole\Event::wait                                                  Description
Swoole\Event::write                                                 Write data to the socket.
Swoole\Http\Client::addFile                                         Add a file to the post form.
Swoole\Http\Client::close                                           Close the http connection.
Swoole\Http\Client::download                                        Download a file from the remote server.
Swoole\Http\Client::execute                                         Send the HTTP request after setting the parameters.
Swoole\Http\Client::get                                             Send GET http request to the remote server.
Swoole\Http\Client::isConnected                                     Check if the HTTP connection is connected.
Swoole\Http\Client::on                                              Register callback function by event name.
Swoole\Http\Client::post                                            Send POST http request to the remote server.
Swoole\Http\Client::push                                            Push data to websocket client.
Swoole\Http\Client::set                                             Update the HTTP client paramters.
Swoole\Http\Client::setCookies                                      Set the http request cookies.
Swoole\Http\Client::setData                                         Set the HTTP request body data.
Swoole\Http\Client::setHeaders                                      Set the HTTP request headers.
Swoole\Http\Client::setMethod                                       Set the HTTP request method.
Swoole\Http\Client::upgrade                                         Upgrade to websocket protocol.
Swoole\Http\Client::__construct                                     Construct the async HTTP client.
Swoole\Http\Client::__destruct                                      Destruct the HTTP client.
Swoole\Http\Request::rawcontent                                     Get the raw HTTP POST body.
Swoole\Http\Request::__destruct                                     Destruct the HTTP request.
Swoole\Http\Response::cookie                                        Set the cookies of the HTTP response.
Swoole\Http\Response::end                                           Send data for the HTTP request and finish the response.
Swoole\Http\Response::gzip                                          Enable the gzip of response content.
Swoole\Http\Response::header                                        Set the HTTP response headers.
Swoole\Http\Response::initHeader                                    Init the HTTP response header.
Swoole\Http\Response::rawcookie                                     Set the raw cookies to the HTTP response.
Swoole\Http\Response::sendfile                                      Send file through the HTTP response.
Swoole\Http\Response::status                                        Set the status code of the HTTP response.
Swoole\Http\Response::write                                         Append HTTP body content to the HTTP response.
Swoole\Http\Response::__destruct                                    Destruct the HTTP response.
Swoole\Http\Server::on                                              Bind callback function to HTTP server by event name.
Swoole\Http\Server::start                                           Start the swoole http server.
Swoole\Lock::lock                                                   Try to acquire the lock. It will block if the lock is not available.
Swoole\Lock::lock_read                                              Lock a read-write lock for reading.
Swoole\Lock::trylock                                                Try to acquire the lock and return straight away even the lock is not available.
Swoole\Lock::trylock_read                                           Try to lock a read-write lock for reading and return straight away even the lock is not available.
Swoole\Lock::unlock                                                 Release the lock.
Swoole\Lock::__construct                                            Construct a memory lock.
Swoole\Lock::__destruct                                             Destory a Swoole memory lock.
Swoole\Mmap::open                                                   Map a file into memory and return the stream resource which can be used by PHP stream operations.
Swoole\MySQL::close                                                 Close the async MySQL connection.
Swoole\MySQL::connect                                               Connect to the remote MySQL server.
Swoole\MySQL::getBuffer                                             Description
Swoole\MySQL::on                                                    Register callback function based on event name.
Swoole\MySQL::query                                                 Run the SQL query.
Swoole\MySQL::__construct                                           Construct an async MySQL client.
Swoole\MySQL::__destruct                                            Destory the async MySQL client.
Swoole\Process::alarm                                               High precision timer which triggers signal with fixed interval.
Swoole\Process::close                                               Close the pipe to the child process.
Swoole\Process::daemon                                              Change the process to be a daemon process.
Swoole\Process::exec                                                Execute system commands.
Swoole\Process::exit                                                Stop the child processes.
Swoole\Process::freeQueue                                           Destroy the message queue created by swoole_process::useQueue.
Swoole\Process::kill                                                Send signal to the child process.
Swoole\Process::name                                                Set name of the process.
Swoole\Process::pop                                                 Read and pop data from the message queue.
Swoole\Process::push                                                Write and push data into the message queue.
Swoole\Process::read                                                Read data sending to the process.
Swoole\Process::signal                                              Send signal to the child processes.
Swoole\Process::start                                               Start the process.
Swoole\Process::statQueue                                           Get the stats of the message queue used as the communication method between processes.
Swoole\Process::useQueue                                            Create a message queue as the communication method between the parent process and child processes.
Swoole\Process::wait                                                Wait for the events of child processes.
Swoole\Process::write                                               Write data into the pipe and communicate with the parent process or child processes.
Swoole\Process::__construct                                         Construct a process.
Swoole\Process::__destruct                                          Destory the process.
Swoole\Redis\Server::format                                         Description
Swoole\Redis\Server::setHandler                                     Description
Swoole\Redis\Server::start                                          Description
Swoole\Serialize::pack                                              Serialize the data.
Swoole\Serialize::unpack                                            Unserialize the data.
Swoole\Server::addlistener                                          Add a new listener to the server.
Swoole\Server::addProcess                                           Add a user defined swoole_process to the server.
Swoole\Server::after                                                Trigger a callback function after a period of time.
Swoole\Server::bind                                                 Bind the connection to a user defined user ID.
Swoole\Server::clearTimer                                           Stop and destory a timer.
Swoole\Server::close                                                Close a connection to the client.
Swoole\Server::confirm                                              Check status of the connection.
Swoole\Server::connection_info                                      Get the connection info by file description.
Swoole\Server::connection_list                                      Get all of the established connections.
Swoole\Server::defer                                                Delay execution of the callback function at the end of current EventLoop.
Swoole\Server::exist                                                Check if the connection is existed.
Swoole\Server::finish                                               Used in task process for sending result to the worker process when the task is finished.
Swoole\Server::getClientInfo                                        Get the connection info by file description.
Swoole\Server::getClientList                                        Get all of the established connections.
Swoole\Server::getLastError                                         Get the error code of the most recent error.
Swoole\Server::heartbeat                                            Check all the connections on the server.
Swoole\Server::listen                                               Listen on the given IP and port, socket type.
Swoole\Server::on                                                   Register a callback function by event name.
Swoole\Server::pause                                                Stop receiving data from the connection.
Swoole\Server::protect                                              Set the connection to be protected mode.
Swoole\Server::reload                                               Restart all the worker process.
Swoole\Server::resume                                               Start receving data from the connection.
Swoole\Server::send                                                 Send data to the client.
Swoole\Server::sendfile                                             Send file to the connection.
Swoole\Server::sendMessage                                          Send message to worker processes by ID.
Swoole\Server::sendto                                               Send data to the remote UDP address.
Swoole\Server::sendwait                                             Send data to the remote socket in the blocking way.
Swoole\Server::set                                                  Set the runtime settings of the swoole server.
Swoole\Server::shutdown                                             Shutdown the master server process, this function can be called in worker processes.
Swoole\Server::start                                                Start the Swoole server.
Swoole\Server::stats                                                Get the stats of the Swoole server.
Swoole\Server::stop                                                 Stop the Swoole server.
Swoole\Server::task                                                 Send data to the task worker processes.
Swoole\Server::taskwait                                             Send data to the task worker processes in blocking way.
Swoole\Server::taskWaitMulti                                        Execute multiple tasks concurrently.
Swoole\Server::tick                                                 Repeats a given function at every given time-interval.
Swoole\Server::__construct                                          Construct a Swoole server.
Swoole\Server\Port::on                                              Register callback functions by event.
Swoole\Server\Port::set                                             Set protocol of the server port.
Swoole\Server\Port::__construct                                     Construct a server port
Swoole\Server\Port::__destruct                                      Destory server port
Swoole\Table::column                                                Set the data type and size of the columns.
Swoole\Table::count                                                 Count the rows in the table, or count all the elements in the table if $mode = 1.
Swoole\Table::create                                                Create the swoole memory table.
Swoole\Table::current                                               Get the current row.
Swoole\Table::decr                                                  Decrement the value in the Swoole table by $row_key and $column_key.
Swoole\Table::del                                                   Delete a row in the Swoole table by $row_key.
Swoole\Table::destroy                                               Destroy the Swoole table.
Swoole\Table::exist                                                 Check if a row is existed by $row_key.
Swoole\Table::get                                                   Get the value in the Swoole table by $row_key and $column_key.
Swoole\Table::incr                                                  Increment the value by $row_key and $column_key.
Swoole\Table::key                                                   Get the key of current row.
Swoole\Table::next                                                  Iterator the next row.
Swoole\Table::rewind                                                Rewind the iterator.
Swoole\Table::set                                                   Update a row of the table by $row_key.
Swoole\Table::valid                                                 Check current if the current row is valid.
Swoole\Table::__construct                                           Construct a Swoole memory table with fixed size.
Swoole\Timer::after                                                 Trigger a callback function after a period of time.
Swoole\Timer::clear                                                 Delete a timer by timer ID.
Swoole\Timer::exists                                                Check if a timer is existed.
Swoole\Timer::tick                                                  Repeats a given function at every given time-interval.
Swoole\WebSocket\Server::exist                                      Check if the file descriptor exists.
Swoole\WebSocket\Server::on                                         Register event callback function
Swoole\WebSocket\Server::pack                                       Get a pack of binary data to send in a single frame.
Swoole\WebSocket\Server::push                                       Push data to the remote client.
Swoole\WebSocket\Server::unpack                                     Unpack the binary data received from the client.
swoole_async_dns_lookup                                             Async and non-blocking hostname to IP lookup
swoole_async_read                                                   Read file stream asynchronously
swoole_async_readfile                                               Read a file asynchronously
swoole_async_set                                                    Update the async I/O options
swoole_async_write                                                  Write data to a file stream asynchronously
swoole_async_writefile                                              Write data to a file asynchronously
swoole_clear_error                                                  Clear errors in the socket or on the last error code
swoole_client_select                                                Get the file description which are ready to read/write or error
swoole_cpu_num                                                      Get the number of CPU
swoole_errno                                                        Get the error code of the latest system call
swoole_error_log                                                    Output error messages to the log
swoole_event_add                                                    Add new callback functions of a socket into the EventLoop
swoole_event_defer                                                  Add callback function to the next event loop
swoole_event_del                                                    Remove all event callback functions of a socket
swoole_event_exit                                                   Exit the eventloop, only available at the client side
swoole_event_set                                                    Update the event callback functions of a socket
swoole_event_wait                                                   Start the event loop
swoole_event_write                                                  Write data to a socket
swoole_get_local_ip                                                 Get the IPv4 IP addresses of each NIC on the machine
swoole_last_error                                                   Get the lastest error message
swoole_load_module                                                  Load a swoole extension
swoole_select                                                       Select the file descriptions which are ready to read/write or error in the eventloop
swoole_set_process_name                                             Set the process name
swoole_strerror                                                     Convert the Errno into error messages
swoole_timer_after                                                  Trigger a one time callback function in the future
swoole_timer_exists                                                 Check if a timer callback function is existed
swoole_timer_tick                                                   Trigger a timer tick callback function by time interval
swoole_version                                                      Get the version of Swoole
SyncEvent::fire                                                     Fires/sets the event
SyncEvent::reset                                                    Resets a manual event
SyncEvent::wait                                                     Waits for the event to be fired/set
SyncEvent::__construct                                              Constructs a new SyncEvent object
SyncMutex::lock                                                     Waits for an exclusive lock
SyncMutex::unlock                                                   Unlocks the mutex
SyncMutex::__construct                                              Constructs a new SyncMutex object
SyncReaderWriter::readlock                                          Waits for a read lock
SyncReaderWriter::readunlock                                        Releases a read lock
SyncReaderWriter::writelock                                         Waits for an exclusive write lock
SyncReaderWriter::writeunlock                                       Releases a write lock
SyncReaderWriter::__construct                                       Constructs a new SyncReaderWriter object
SyncSemaphore::lock                                                 Decreases the count of the semaphore or waits
SyncSemaphore::unlock                                               Increases the count of the semaphore
SyncSemaphore::__construct                                          Constructs a new SyncSemaphore object
SyncSharedMemory::first                                             Check to see if the object is the first instance system-wide of named shared memory
SyncSharedMemory::read                                              Copy data from named shared memory
SyncSharedMemory::size                                              Returns the size of the named shared memory
SyncSharedMemory::write                                             Copy data to named shared memory
SyncSharedMemory::__construct                                       Constructs a new SyncSharedMemory object
Table::count                                                        Get row count
Table::delete                                                       Delete rows from table
Table::existsInDatabase                                             Check if table exists in database
Table::getName                                                      Get table name
Table::getSchema                                                    Get table schema
Table::getSession                                                   Get table session
Table::insert                                                       Insert table rows
Table::isView                                                       Check if table is view
Table::select                                                       Select rows from table
Table::update                                                       Update rows in table
Table::__construct                                                  Table constructor
TableDelete::bind                                                   Bind delete query parameters
TableDelete::execute                                                Execute delete query
TableDelete::limit                                                  Limit deleted rows
TableDelete::orderby                                                Set delete sort criteria
TableDelete::where                                                  Set delete search condition
TableDelete::__construct                                            TableDelete constructor
TableInsert::execute                                                Execute insert query
TableInsert::values                                                 Add insert row values
TableInsert::__construct                                            TableInsert constructor
TableSelect::bind                                                   Bind select query parameters
TableSelect::execute                                                Execute select statement
TableSelect::groupBy                                                Set select grouping criteria
TableSelect::having                                                 Set select having condition
TableSelect::limit                                                  Limit selected rows
TableSelect::lockExclusive                                          Execute EXCLUSIVE LOCK
TableSelect::lockShared                                             Execute SHARED LOCK
TableSelect::offset                                                 Set limit offset
TableSelect::orderby                                                Set select sort criteria
TableSelect::where                                                  Set select search condition
TableSelect::__construct                                            TableSelect constructor
TableUpdate::bind                                                   Bind update query parameters
TableUpdate::execute                                                Execute update query
TableUpdate::limit                                                  Limit update row count
TableUpdate::orderby                                                Set sorting criteria
TableUpdate::set                                                    Add field to be updated
TableUpdate::where                                                  Set search filter
TableUpdate::__construct                                            TableUpdate constructor
taint                                                               Taint a string
tcpwrap_check                                                       Performs a tcpwrap check
textdomain                                                          Sets the default domain
Thread::detach                                                      Execution
Thread::getCreatorId                                                Identification
Thread::getCurrentThread                                            Identification
Thread::getCurrentThreadId                                          Identification
Thread::getThreadId                                                 Identification
Thread::globally                                                    Execution
Thread::isJoined                                                    State Detection
Thread::isStarted                                                   State Detection
Thread::join                                                        Synchronization
Thread::kill                                                        Execution
Thread::start                                                       Execution
Threaded::chunk                                                     Manipulation
Threaded::count                                                     Manipulation
Threaded::extend                                                    Runtime Manipulation
Threaded::from                                                      Creation
Threaded::getTerminationInfo                                        Error Detection
Threaded::isRunning                                                 State Detection
Threaded::isTerminated                                              State Detection
Threaded::isWaiting                                                 State Detection
Threaded::lock                                                      Synchronization
Threaded::merge                                                     Manipulation
Threaded::notify                                                    Synchronization
Threaded::notifyOne                                                 Synchronization
Threaded::pop                                                       Manipulation
Threaded::run                                                       Execution
Threaded::shift                                                     Manipulation
Threaded::synchronized                                              Synchronization
Threaded::unlock                                                    Synchronization
Threaded::wait                                                      Synchronization
Throwable::getCode                                                  Gets the exception code
Throwable::getFile                                                  Gets the file in which the object was created
Throwable::getLine                                                  Gets the line on which the object was instantiated
Throwable::getMessage                                               Gets the message
Throwable::getPrevious                                              Returns the previous Throwable
Throwable::getTrace                                                 Gets the stack trace
Throwable::getTraceAsString                                         Gets the stack trace as a string
Throwable::__toString                                               Gets a string representation of the thrown object
tidy::$errorBuffer                                                  Return warnings and errors which occurred parsing the specified document
tidy::body                                                          Returns a tidyNode object starting from the <body> tag of the tidy parse tree
tidy::cleanRepair                                                   Execute configured cleanup and repair operations on parsed markup
tidy::diagnose                                                      Run configured diagnostics on parsed and repaired markup
tidy::getConfig                                                     Get current Tidy configuration
tidy::getHtmlVer                                                    Get the Detected HTML version for the specified document
tidy::getOpt                                                        Returns the value of the specified configuration option for the tidy document
tidy::getOptDoc                                                     Returns the documentation for the given option name
tidy::getRelease                                                    Get release date (version) for Tidy library
tidy::getStatus                                                     Get status of specified document
tidy::head                                                          Returns a tidyNode object starting from the <head> tag of the tidy parse tree
tidy::html                                                          Returns a tidyNode object starting from the <html> tag of the tidy parse tree
tidy::isXhtml                                                       Indicates if the document is a XHTML document
tidy::isXml                                                         Indicates if the document is a generic (non HTML/XHTML) XML document
tidy::parseFile                                                     Parse markup in file or URI
tidy::parseString                                                   Parse a document stored in a string
tidy::repairFile                                                    Repair a file and return it as a string
tidy::repairString                                                  Repair a string using an optionally provided configuration file
tidy::root                                                          Returns a tidyNode object representing the root of the tidy parse tree
tidy::__construct                                                   Constructs a new tidy object
tidyNode::getParent                                                 Returns the parent node of the current node
tidyNode::hasChildren                                               Checks if a node has children
tidyNode::hasSiblings                                               Checks if a node has siblings
tidyNode::isAsp                                                     Checks if this node is ASP
tidyNode::isComment                                                 Checks if a node represents a comment
tidyNode::isHtml                                                    Checks if a node is an element node
tidyNode::isJste                                                    Checks if this node is JSTE
tidyNode::isPhp                                                     Checks if a node is PHP
tidyNode::isText                                                    Checks if a node represents text (no markup)
tidyNode::__construct                                               Private constructor to disallow direct instantiation
tidy_access_count                                                   Returns the Number of Tidy accessibility warnings encountered for specified document
tidy_config_count                                                   Returns the Number of Tidy configuration errors encountered for specified document
tidy_error_count                                                    Returns the Number of Tidy errors encountered for specified document
tidy_get_output                                                     Return a string representing the parsed tidy markup
tidy_warning_count                                                  Returns the Number of Tidy warnings encountered for specified document
TokyoTyrant::add                                                    Adds to a numeric key
TokyoTyrant::connect                                                Connect to a database
TokyoTyrant::connectUri                                             Connects to a database
TokyoTyrant::copy                                                   Copies the database
TokyoTyrant::ext                                                    Execute a remote script
TokyoTyrant::fwmKeys                                                Returns the forward matching keys
TokyoTyrant::get                                                    The get purpose
TokyoTyrant::getIterator                                            Get an iterator
TokyoTyrant::num                                                    Number of records in the database
TokyoTyrant::out                                                    Removes records
TokyoTyrant::put                                                    Puts values
TokyoTyrant::putCat                                                 Concatenates to a record
TokyoTyrant::putKeep                                                Puts a record
TokyoTyrant::putNr                                                  Puts value
TokyoTyrant::putShl                                                 Concatenates to a record
TokyoTyrant::restore                                                Restore the database
TokyoTyrant::setMaster                                              Set the replication master
TokyoTyrant::size                                                   Returns the size of the value
TokyoTyrant::stat                                                   Get statistics
TokyoTyrant::sync                                                   Synchronize the database
TokyoTyrant::tune                                                   Tunes connection values
TokyoTyrant::vanish                                                 Empties the database
TokyoTyrant::__construct                                            Construct a new TokyoTyrant object
TokyoTyrantIterator::current                                        Get the current value
TokyoTyrantIterator::key                                            Returns the current key
TokyoTyrantIterator::next                                           Move to next key
TokyoTyrantIterator::rewind                                         Rewinds the iterator
TokyoTyrantIterator::valid                                          Rewinds the iterator
TokyoTyrantIterator::__construct                                    Construct an iterator
TokyoTyrantQuery::addCond                                           Adds a condition to the query
TokyoTyrantQuery::count                                             Counts records
TokyoTyrantQuery::current                                           Returns the current element
TokyoTyrantQuery::hint                                              Get the hint string of the query
TokyoTyrantQuery::key                                               Returns the current key
TokyoTyrantQuery::metaSearch                                        Retrieve records with multiple queries
TokyoTyrantQuery::next                                              Moves the iterator to next entry
TokyoTyrantQuery::out                                               Removes records based on query
TokyoTyrantQuery::rewind                                            Rewinds the iterator
TokyoTyrantQuery::search                                            Searches records
TokyoTyrantQuery::setLimit                                          Limit results
TokyoTyrantQuery::setOrder                                          Orders results
TokyoTyrantQuery::valid                                             Checks the validity of current item
TokyoTyrantQuery::__construct                                       Construct a new query
TokyoTyrantTable::add                                               Adds a record
TokyoTyrantTable::genUid                                            Generate unique id
TokyoTyrantTable::get                                               Get a row
TokyoTyrantTable::getIterator                                       Get an iterator
TokyoTyrantTable::getQuery                                          Get a query object
TokyoTyrantTable::out                                               Remove records
TokyoTyrantTable::put                                               Store a row
TokyoTyrantTable::putCat                                            Concatenates to a row
TokyoTyrantTable::putKeep                                           Put a new record
TokyoTyrantTable::putNr                                             Puts value
TokyoTyrantTable::putShl                                            Concatenates to a record
TokyoTyrantTable::setIndex                                          Sets index
trader_acos                                                         Vector Trigonometric ACos
trader_ad                                                           Chaikin A/D Line
trader_add                                                          Vector Arithmetic Add
trader_adosc                                                        Chaikin A/D Oscillator
trader_adx                                                          Average Directional Movement Index
trader_adxr                                                         Average Directional Movement Index Rating
trader_apo                                                          Absolute Price Oscillator
trader_aroon                                                        Aroon
trader_aroonosc                                                     Aroon Oscillator
trader_asin                                                         Vector Trigonometric ASin
trader_atan                                                         Vector Trigonometric ATan
trader_atr                                                          Average True Range
trader_avgprice                                                     Average Price
trader_bbands                                                       Bollinger Bands
trader_beta                                                         Beta
trader_bop                                                          Balance Of Power
trader_cci                                                          Commodity Channel Index
trader_cdl2crows                                                    Two Crows
trader_cdl3blackcrows                                               Three Black Crows
trader_cdl3inside                                                   Three Inside Up/Down
trader_cdl3linestrike                                               Three-Line Strike
trader_cdl3outside                                                  Three Outside Up/Down
trader_cdl3starsinsouth                                             Three Stars In The South
trader_cdl3whitesoldiers                                            Three Advancing White Soldiers
trader_cdlabandonedbaby                                             Abandoned Baby
trader_cdladvanceblock                                              Advance Block
trader_cdlbelthold                                                  Belt-hold
trader_cdlbreakaway                                                 Breakaway
trader_cdlclosingmarubozu                                           Closing Marubozu
trader_cdlconcealbabyswall                                          Concealing Baby Swallow
trader_cdlcounterattack                                             Counterattack
trader_cdldarkcloudcover                                            Dark Cloud Cover
trader_cdldoji                                                      Doji
trader_cdldojistar                                                  Doji Star
trader_cdldragonflydoji                                             Dragonfly Doji
trader_cdlengulfing                                                 Engulfing Pattern
trader_cdleveningdojistar                                           Evening Doji Star
trader_cdleveningstar                                               Evening Star
trader_cdlgapsidesidewhite                                          Up/Down-gap side-by-side white lines
trader_cdlgravestonedoji                                            Gravestone Doji
trader_cdlhammer                                                    Hammer
trader_cdlhangingman                                                Hanging Man
trader_cdlharami                                                    Harami Pattern
trader_cdlharamicross                                               Harami Cross Pattern
trader_cdlhighwave                                                  High-Wave Candle
trader_cdlhikkake                                                   Hikkake Pattern
trader_cdlhikkakemod                                                Modified Hikkake Pattern
trader_cdlhomingpigeon                                              Homing Pigeon
trader_cdlidentical3crows                                           Identical Three Crows
trader_cdlinneck                                                    In-Neck Pattern
trader_cdlinvertedhammer                                            Inverted Hammer
trader_cdlkicking                                                   Kicking
trader_cdlkickingbylength                                           Kicking - bull/bear determined by the longer marubozu
trader_cdlladderbottom                                              Ladder Bottom
trader_cdllongleggeddoji                                            Long Legged Doji
trader_cdllongline                                                  Long Line Candle
trader_cdlmarubozu                                                  Marubozu
trader_cdlmatchinglow                                               Matching Low
trader_cdlmathold                                                   Mat Hold
trader_cdlmorningdojistar                                           Morning Doji Star
trader_cdlmorningstar                                               Morning Star
trader_cdlonneck                                                    On-Neck Pattern
trader_cdlpiercing                                                  Piercing Pattern
trader_cdlrickshawman                                               Rickshaw Man
trader_cdlrisefall3methods                                          Rising/Falling Three Methods
trader_cdlseparatinglines                                           Separating Lines
trader_cdlshootingstar                                              Shooting Star
trader_cdlshortline                                                 Short Line Candle
trader_cdlspinningtop                                               Spinning Top
trader_cdlstalledpattern                                            Stalled Pattern
trader_cdlsticksandwich                                             Stick Sandwich
trader_cdltakuri                                                    Takuri (Dragonfly Doji with very long lower shadow)
trader_cdltasukigap                                                 Tasuki Gap
trader_cdlthrusting                                                 Thrusting Pattern
trader_cdltristar                                                   Tristar Pattern
trader_cdlunique3river                                              Unique 3 River
trader_cdlupsidegap2crows                                           Upside Gap Two Crows
trader_cdlxsidegap3methods                                          Upside/Downside Gap Three Methods
trader_ceil                                                         Vector Ceil
trader_cmo                                                          Chande Momentum Oscillator
trader_correl                                                       Pearson's Correlation Coefficient (r)
trader_cos                                                          Vector Trigonometric Cos
trader_cosh                                                         Vector Trigonometric Cosh
trader_dema                                                         Double Exponential Moving Average
trader_div                                                          Vector Arithmetic Div
trader_dx                                                           Directional Movement Index
trader_ema                                                          Exponential Moving Average
trader_errno                                                        Get error code
trader_exp                                                          Vector Arithmetic Exp
trader_floor                                                        Vector Floor
trader_get_compat                                                   Get compatibility mode
trader_get_unstable_period                                          Get unstable period
trader_ht_dcperiod                                                  Hilbert Transform - Dominant Cycle Period
trader_ht_dcphase                                                   Hilbert Transform - Dominant Cycle Phase
trader_ht_phasor                                                    Hilbert Transform - Phasor Components
trader_ht_sine                                                      Hilbert Transform - SineWave
trader_ht_trendline                                                 Hilbert Transform - Instantaneous Trendline
trader_ht_trendmode                                                 Hilbert Transform - Trend vs Cycle Mode
trader_kama                                                         Kaufman Adaptive Moving Average
trader_linearreg                                                    Linear Regression
trader_linearreg_angle                                              Linear Regression Angle
trader_linearreg_intercept                                          Linear Regression Intercept
trader_linearreg_slope                                              Linear Regression Slope
trader_ln                                                           Vector Log Natural
trader_log10                                                        Vector Log10
trader_ma                                                           Moving average
trader_macd                                                         Moving Average Convergence/Divergence
trader_macdext                                                      MACD with controllable MA type
trader_macdfix                                                      Moving Average Convergence/Divergence Fix 12/26
trader_mama                                                         MESA Adaptive Moving Average
trader_mavp                                                         Moving average with variable period
trader_max                                                          Highest value over a specified period
trader_maxindex                                                     Index of highest value over a specified period
trader_medprice                                                     Median Price
trader_mfi                                                          Money Flow Index
trader_midpoint                                                     MidPoint over period
trader_midprice                                                     Midpoint Price over period
trader_min                                                          Lowest value over a specified period
trader_minindex                                                     Index of lowest value over a specified period
trader_minmax                                                       Lowest and highest values over a specified period
trader_minmaxindex                                                  Indexes of lowest and highest values over a specified period
trader_minus_di                                                     Minus Directional Indicator
trader_minus_dm                                                     Minus Directional Movement
trader_mom                                                          Momentum
trader_mult                                                         Vector Arithmetic Mult
trader_natr                                                         Normalized Average True Range
trader_obv                                                          On Balance Volume
trader_plus_di                                                      Plus Directional Indicator
trader_plus_dm                                                      Plus Directional Movement
trader_ppo                                                          Percentage Price Oscillator
trader_roc                                                          Rate of change : ((price/prevPrice)-1)*100
trader_rocp                                                         Rate of change Percentage: (price-prevPrice)/prevPrice
trader_rocr                                                         Rate of change ratio: (price/prevPrice)
trader_rocr100                                                      Rate of change ratio 100 scale: (price/prevPrice)*100
trader_rsi                                                          Relative Strength Index
trader_sar                                                          Parabolic SAR
trader_sarext                                                       Parabolic SAR - Extended
trader_set_compat                                                   Set compatibility mode
trader_set_unstable_period                                          Set unstable period
trader_sin                                                          Vector Trigonometric Sin
trader_sinh                                                         Vector Trigonometric Sinh
trader_sma                                                          Simple Moving Average
trader_sqrt                                                         Vector Square Root
trader_stddev                                                       Standard Deviation
trader_stoch                                                        Stochastic
trader_stochf                                                       Stochastic Fast
trader_stochrsi                                                     Stochastic Relative Strength Index
trader_sub                                                          Vector Arithmetic Subtraction
trader_sum                                                          Summation
trader_t3                                                           Triple Exponential Moving Average (T3)
trader_tan                                                          Vector Trigonometric Tan
trader_tanh                                                         Vector Trigonometric Tanh
trader_tema                                                         Triple Exponential Moving Average
trader_trange                                                       True Range
trader_trima                                                        Triangular Moving Average
trader_trix                                                         1-day Rate-Of-Change (ROC) of a Triple Smooth EMA
trader_tsf                                                          Time Series Forecast
trader_typprice                                                     Typical Price
trader_ultosc                                                       Ultimate Oscillator
trader_var                                                          Variance
trader_wclprice                                                     Weighted Close Price
trader_willr                                                        Williams' %R
trader_wma                                                          Weighted Moving Average
Transliterator::create                                              Create a transliterator
Transliterator::createFromRules                                     Create transliterator from rules
Transliterator::createInverse                                       Create an inverse transliterator
Transliterator::getErrorCode                                        Get last error code
Transliterator::getErrorMessage                                     Get last error message
Transliterator::listIDs                                             Get transliterator IDs
Transliterator::transliterate                                       Transliterate a string
Transliterator::__construct                                         Private constructor to deny instantiation
UConverter::convert                                                 Convert string from one charset to another
UConverter::fromUCallback                                           Default "from" callback function
UConverter::getAliases                                              Get the aliases of the given name
UConverter::getAvailable                                            Get the available canonical converter names
UConverter::getDestinationEncoding                                  Get the destination encoding
UConverter::getDestinationType                                      Get the destination converter type
UConverter::getErrorCode                                            Get last error code on the object
UConverter::getErrorMessage                                         Get last error message on the object
UConverter::getSourceEncoding                                       Get the source encoding
UConverter::getSourceType                                           Get the source converter type
UConverter::getStandards                                            Get standards associated to converter names
UConverter::getSubstChars                                           Get substitution chars
UConverter::reasonText                                              Get string representation of the callback reason
UConverter::setDestinationEncoding                                  Set the destination encoding
UConverter::setSourceEncoding                                       Set the source encoding
UConverter::setSubstChars                                           Set the substitution chars
UConverter::toUCallback                                             Default "to" callback function
UConverter::transcode                                               Convert string from one charset to another
UConverter::__construct                                             Create UConverter object
UI\Area::onDraw                                                     Draw Callback
UI\Area::onKey                                                      Key Callback
UI\Area::onMouse                                                    Mouse Callback
UI\Area::redraw                                                     Redraw Area
UI\Area::scrollTo                                                   Area Scroll
UI\Area::setSize                                                    Set Size
UI\Control::destroy                                                 Destroy Control
UI\Control::disable                                                 Disable Control
UI\Control::enable                                                  Enable Control
UI\Control::getParent                                               Get Parent Control
UI\Control::getTopLevel                                             Get Top Level
UI\Control::hide                                                    Hide Control
UI\Control::isEnabled                                               Determine if Control is enabled
UI\Control::isVisible                                               Determine if Control is visible
UI\Control::setParent                                               Set Parent Control
UI\Control::show                                                    Control Show
UI\Controls\Box::append                                             Append Control
UI\Controls\Box::delete                                             Delete Control
UI\Controls\Box::getOrientation                                     Get Orientation
UI\Controls\Box::isPadded                                           Padding Detection
UI\Controls\Box::setPadded                                          Set Padding
UI\Controls\Box::__construct                                        Construct a new Box
UI\Controls\Button::getText                                         Get Text
UI\Controls\Button::onClick                                         Click Handler
UI\Controls\Button::setText                                         Set Text
UI\Controls\Button::__construct                                     Construct a new Button
UI\Controls\Check::getText                                          Get Text
UI\Controls\Check::isChecked                                        Checked Detection
UI\Controls\Check::onToggle                                         Toggle Callback
UI\Controls\Check::setChecked                                       Set Checked
UI\Controls\Check::setText                                          Set Text
UI\Controls\Check::__construct                                      Construct a new Check
UI\Controls\ColorButton::getColor                                   Get Color
UI\Controls\ColorButton::onChange                                   Change Handler
UI\Controls\ColorButton::setColor                                   Set Color
UI\Controls\Combo::append                                           Append Option
UI\Controls\Combo::getSelected                                      Get Selected Option
UI\Controls\Combo::onSelected                                       Selected Handler
UI\Controls\Combo::setSelected                                      Set Selected Option
UI\Controls\EditableCombo::append                                   Append Option
UI\Controls\EditableCombo::getText                                  Get Text
UI\Controls\EditableCombo::onChange                                 Change Handler
UI\Controls\EditableCombo::setText                                  Set Text
UI\Controls\Entry::getText                                          Get Text
UI\Controls\Entry::isReadOnly                                       Detect Read Only
UI\Controls\Entry::onChange                                         Change Handler
UI\Controls\Entry::setReadOnly                                      Set Read Only
UI\Controls\Entry::setText                                          Set Text
UI\Controls\Entry::__construct                                      Construct a new Entry
UI\Controls\Form::append                                            Append Control
UI\Controls\Form::delete                                            Delete Control
UI\Controls\Form::isPadded                                          Padding Detection
UI\Controls\Form::setPadded                                         Set Padding
UI\Controls\Grid::append                                            Append Control
UI\Controls\Grid::isPadded                                          Padding Detection
UI\Controls\Grid::setPadded                                         Set Padding
UI\Controls\Group::append                                           Append Control
UI\Controls\Group::getTitle                                         Get Title
UI\Controls\Group::hasMargin                                        Margin Detection
UI\Controls\Group::setMargin                                        Set Margin
UI\Controls\Group::setTitle                                         Set Title
UI\Controls\Group::__construct                                      Construct a new Group
UI\Controls\Label::getText                                          Get Text
UI\Controls\Label::setText                                          Set Text
UI\Controls\Label::__construct                                      Construct a new Label
UI\Controls\MultilineEntry::append                                  Append Text
UI\Controls\MultilineEntry::getText                                 Get Text
UI\Controls\MultilineEntry::isReadOnly                              Read Only Detection
UI\Controls\MultilineEntry::onChange                                Change Handler
UI\Controls\MultilineEntry::setReadOnly                             Set Read Only
UI\Controls\MultilineEntry::setText                                 Set Text
UI\Controls\MultilineEntry::__construct                             Construct a new Multiline Entry
UI\Controls\Picker::__construct                                     Construct a new Picker
UI\Controls\Progress::getValue                                      Get Value
UI\Controls\Progress::setValue                                      Set Value
UI\Controls\Radio::append                                           Append Option
UI\Controls\Radio::getSelected                                      Get Selected Option
UI\Controls\Radio::onSelected                                       Selected Handler
UI\Controls\Radio::setSelected                                      Set Selected Option
UI\Controls\Separator::__construct                                  Construct a new Separator
UI\Controls\Slider::getValue                                        Get Value
UI\Controls\Slider::onChange                                        Change Handler
UI\Controls\Slider::setValue                                        Set Value
UI\Controls\Slider::__construct                                     Construct a new Slider
UI\Controls\Spin::getValue                                          Get Value
UI\Controls\Spin::onChange                                          Change Handler
UI\Controls\Spin::setValue                                          Set Value
UI\Controls\Spin::__construct                                       Construct a new Spin
UI\Controls\Tab::append                                             Append Page
UI\Controls\Tab::delete                                             Delete Page
UI\Controls\Tab::hasMargin                                          Margin Detection
UI\Controls\Tab::insertAt                                           Insert Page
UI\Controls\Tab::pages                                              Page Count
UI\Controls\Tab::setMargin                                          Set Margin
UI\Draw\Brush::getColor                                             Get Color
UI\Draw\Brush::setColor                                             Set Color
UI\Draw\Brush::__construct                                          Construct a new Brush
UI\Draw\Brush\Gradient::addStop                                     Stop Manipulation
UI\Draw\Brush\Gradient::delStop                                     Stop Manipulation
UI\Draw\Brush\Gradient::setStop                                     Stop Manipulation
UI\Draw\Brush\LinearGradient::__construct                           Construct a Linear Gradient
UI\Draw\Brush\RadialGradient::__construct                           Construct a new Radial Gradient
UI\Draw\Color::getChannel                                           Color Manipulation
UI\Draw\Color::setChannel                                           Color Manipulation
UI\Draw\Color::__construct                                          Construct new Color
UI\Draw\Matrix::invert                                              Invert Matrix
UI\Draw\Matrix::isInvertible                                        Invertible Detection
UI\Draw\Matrix::multiply                                            Multiply Matrix
UI\Draw\Matrix::rotate                                              Rotate Matrix
UI\Draw\Matrix::scale                                               Scale Matrix
UI\Draw\Matrix::skew                                                Skew Matrix
UI\Draw\Matrix::translate                                           Translate Matrix
UI\Draw\Path::addRectangle                                          Draw a Rectangle
UI\Draw\Path::arcTo                                                 Draw an Arc
UI\Draw\Path::bezierTo                                              Draw Bezier Curve
UI\Draw\Path::closeFigure                                           Close Figure
UI\Draw\Path::end                                                   Finalize Path
UI\Draw\Path::lineTo                                                Draw a Line
UI\Draw\Path::newFigure                                             Draw Figure
UI\Draw\Path::newFigureWithArc                                      Draw Figure with Arc
UI\Draw\Path::__construct                                           Construct a new Path
UI\Draw\Pen::clip                                                   Clip a Path
UI\Draw\Pen::fill                                                   Fill a Path
UI\Draw\Pen::restore                                                Restore
UI\Draw\Pen::save                                                   Save
UI\Draw\Pen::stroke                                                 Stroke a Path
UI\Draw\Pen::transform                                              Matrix Transform
UI\Draw\Pen::write                                                  Draw Text at Point
UI\Draw\Stroke::getCap                                              Get Line Cap
UI\Draw\Stroke::getJoin                                             Get Line Join
UI\Draw\Stroke::getMiterLimit                                       Get Miter Limit
UI\Draw\Stroke::getThickness                                        Get Thickness
UI\Draw\Stroke::setCap                                              Set Line Cap
UI\Draw\Stroke::setJoin                                             Set Line Join
UI\Draw\Stroke::setMiterLimit                                       Set Miter Limit
UI\Draw\Stroke::setThickness                                        Set Thickness
UI\Draw\Stroke::__construct                                         Construct a new Stroke
UI\Draw\Text\Font::getAscent                                        Font Metrics
UI\Draw\Text\Font::getDescent                                       Font Metrics
UI\Draw\Text\Font::getLeading                                       Font Metrics
UI\Draw\Text\Font::getUnderlinePosition                             Font Metrics
UI\Draw\Text\Font::getUnderlineThickness                            Font Metrics
UI\Draw\Text\Font::__construct                                      Construct a new Font
UI\Draw\Text\Font\Descriptor::getFamily                             Get Font Family
UI\Draw\Text\Font\Descriptor::getItalic                             Style Detection
UI\Draw\Text\Font\Descriptor::getSize                               Size Detection
UI\Draw\Text\Font\Descriptor::getStretch                            Style Detection
UI\Draw\Text\Font\Descriptor::getWeight                             Weight Detection
UI\Draw\Text\Font\Descriptor::__construct                           Construct a new Font Descriptor
UI\Draw\Text\Font\fontFamilies                                      Retrieve Font Families
UI\Draw\Text\Layout::setColor                                       Set Color
UI\Draw\Text\Layout::setWidth                                       Set Width
UI\Draw\Text\Layout::__construct                                    Construct a new Text Layout
UI\Executor::kill                                                   Stop Executor
UI\Executor::onExecute                                              Execution Callback
UI\Executor::setInterval                                            Interval Manipulation
UI\Executor::__construct                                            Construct a new Executor
UI\Menu::append                                                     Append Menu Item
UI\Menu::appendAbout                                                Append About Menu Item
UI\Menu::appendCheck                                                Append Checkable Menu Item
UI\Menu::appendPreferences                                          Append Preferences Menu Item
UI\Menu::appendQuit                                                 Append Quit Menu Item
UI\Menu::appendSeparator                                            Append Menu Item Separator
UI\Menu::__construct                                                Construct a new Menu
UI\MenuItem::disable                                                Disable Menu Item
UI\MenuItem::enable                                                 Enable Menu Item
UI\MenuItem::isChecked                                              Detect Checked
UI\MenuItem::onClick                                                On Click Callback
UI\MenuItem::setChecked                                             Set Checked
UI\Point::at                                                        Size Coercion
UI\Point::getX                                                      Retrieves X
UI\Point::getY                                                      Retrieves Y
UI\Point::setX                                                      Set X
UI\Point::setY                                                      Set Y
UI\Point::__construct                                               Construct a new Point
UI\quit                                                             Quit UI Loop
UI\run                                                              Enter UI Loop
UI\Size::getHeight                                                  Retrieves Height
UI\Size::getWidth                                                   Retrives Width
UI\Size::of                                                         Point Coercion
UI\Size::setHeight                                                  Set Height
UI\Size::setWidth                                                   Set Width
UI\Size::__construct                                                Construct a new Size
UI\Window::add                                                      Add a Control
UI\Window::error                                                    Show Error Box
UI\Window::getSize                                                  Get Window Size
UI\Window::getTitle                                                 Get Title
UI\Window::hasBorders                                               Border Detection
UI\Window::hasMargin                                                Margin Detection
UI\Window::isFullScreen                                             Full Screen Detection
UI\Window::msg                                                      Show Message Box
UI\Window::onClosing                                                Closing Callback
UI\Window::open                                                     Open Dialog
UI\Window::save                                                     Save Dialog
UI\Window::setBorders                                               Border Use
UI\Window::setFullScreen                                            Full Screen Use
UI\Window::setMargin                                                Margin Use
UI\Window::setSize                                                  Set Size
UI\Window::setTitle                                                 Window Title
UI\Window::__construct                                              Construct a new Window
unixtojd                                                            Convert Unix timestamp to Julian Day
unset                                                               Unset a given variable
untaint                                                             Untaint strings
uopz_add_function                                                   Adds non-existent function or method
uopz_allow_exit                                                     Allows control over disabled exit opcode
uopz_backup                                                         Backup a function
uopz_compose                                                        Compose a class
uopz_copy                                                           Copy a function
uopz_delete                                                         Delete a function
uopz_del_function                                                   Deletes previously added function or method
uopz_extend                                                         Extend a class at runtime
uopz_flags                                                          Get or set flags on function or class
uopz_function                                                       Creates a function at runtime
uopz_get_exit_status                                                Retrieve the last set exit status
uopz_get_hook                                                       Gets previously set hook on function or method
uopz_get_mock                                                       Get the current mock for a class
uopz_get_property                                                   Gets value of class or instance property
uopz_get_return                                                     Gets a previous set return value for a function
uopz_get_static                                                     Gets the static variables from function or method scope
uopz_implement                                                      Implements an interface at runtime
uopz_overload                                                       Overload a VM opcode
uopz_redefine                                                       Redefine a constant
uopz_rename                                                         Rename a function at runtime
uopz_restore                                                        Restore a previously backed up function
uopz_set_hook                                                       Sets hook to execute when entering a function or method
uopz_set_mock                                                       Use mock instead of class for new objects
uopz_set_property                                                   Sets value of existing class or instance property
uopz_set_return                                                     Provide a return value for an existing function
uopz_set_static                                                     Sets the static variables in function or method scope
uopz_undefine                                                       Undefine a constant
uopz_unset_hook                                                     Removes previously set hook on function or method
uopz_unset_mock                                                     Unset previously set mock
uopz_unset_return                                                   Unsets a previously set return value for a function
use_soap_error_handler                                              Set whether to use the SOAP error handler
V8Js::executeString                                                 Execute a string as Javascript code
V8Js::getExtensions                                                 Return an array of registered extensions
V8Js::getPendingException                                           Return pending uncaught Javascript exception
V8Js::registerExtension                                             Register Javascript extensions for V8Js
V8Js::__construct                                                   Construct a new V8Js object
V8JsException::getJsFileName                                        The getJsFileName purpose
V8JsException::getJsLineNumber                                      The getJsLineNumber purpose
V8JsException::getJsSourceLine                                      The getJsSourceLine purpose
V8JsException::getJsTrace                                           The getJsTrace purpose
variant::__construct                                                variant class constructor
variant_abs                                                         Returns the absolute value of a variant
variant_add                                                         "Adds" two variant values together and returns the result
variant_and                                                         Performs a bitwise AND operation between two variants
variant_cast                                                        Convert a variant into a new variant object of another type
variant_cat                                                         Concatenates two variant values together and returns the result
variant_cmp                                                         Compares two variants
variant_date_from_timestamp                                         Returns a variant date representation of a Unix timestamp
variant_date_to_timestamp                                           Converts a variant date/time value to Unix timestamp
variant_div                                                         Returns the result from dividing two variants
variant_eqv                                                         Performs a bitwise equivalence on two variants
variant_fix                                                         Returns the integer portion of a variant
variant_get_type                                                    Returns the type of a variant object
variant_idiv                                                        Converts variants to integers and then returns the result from dividing them
variant_imp                                                         Performs a bitwise implication on two variants
variant_int                                                         Returns the integer portion of a variant
variant_mod                                                         Divides two variants and returns only the remainder
variant_mul                                                         Multiplies the values of the two variants
variant_neg                                                         Performs logical negation on a variant
variant_not                                                         Performs bitwise not negation on a variant
variant_or                                                          Performs a logical disjunction on two variants
variant_pow                                                         Returns the result of performing the power function with two variants
variant_round                                                       Rounds a variant to the specified number of decimal places
variant_set                                                         Assigns a new value for a variant object
variant_set_type                                                    Convert a variant into another type "in-place"
variant_sub                                                         Subtracts the value of the right variant from the left variant value
variant_xor                                                         Performs a logical exclusion on two variants
VarnishAdmin::auth                                                  Authenticate on a varnish instance
VarnishAdmin::ban                                                   Ban URLs using a VCL expression
VarnishAdmin::banUrl                                                Ban an URL using a VCL expression
VarnishAdmin::clearPanic                                            Clear varnish instance panic messages
VarnishAdmin::connect                                               Connect to a varnish instance administration interface
VarnishAdmin::disconnect                                            Disconnect from a varnish instance administration interface
VarnishAdmin::getPanic                                              Get the last panic message on a varnish instance
VarnishAdmin::getParams                                             Fetch current varnish instance configuration parameters
VarnishAdmin::isRunning                                             Check if the varnish slave process is currently running
VarnishAdmin::setCompat                                             Set the class compat configuration param
VarnishAdmin::setHost                                               Set the class host configuration param
VarnishAdmin::setIdent                                              Set the class ident configuration param
VarnishAdmin::setParam                                              Set configuration param on the current varnish instance
VarnishAdmin::setPort                                               Set the class port configuration param
VarnishAdmin::setSecret                                             Set the class secret configuration param
VarnishAdmin::setTimeout                                            Set the class timeout configuration param
VarnishAdmin::start                                                 Start varnish worker process
VarnishAdmin::stop                                                  Stop varnish worker process
VarnishAdmin::__construct                                           VarnishAdmin constructor
VarnishLog::getLine                                                 Get next log line
VarnishLog::getTagName                                              Get the log tag string representation by its index
VarnishLog::__construct                                             Varnishlog constructor
VarnishStat::getSnapshot                                            Get the current varnish instance statistics snapshot
VarnishStat::__construct                                            VarnishStat constructor
var_dump                                                            Dumps information about a variable
virtual                                                             Perform an Apache sub-request
Vtiful\Kernel\Excel::addSheet                                       Vtiful\Kernel\Excel addSheet
Vtiful\Kernel\Excel::autoFilter                                     Vtiful\Kernel\Excel autoFilter
Vtiful\Kernel\Excel::constMemory                                    Vtiful\Kernel\Excel constMemory
Vtiful\Kernel\Excel::data                                           Vtiful\Kernel\Excel data
Vtiful\Kernel\Excel::fileName                                       Vtiful\Kernel\Excel fileName
Vtiful\Kernel\Excel::getHandle                                      Vtiful\Kernel\Excel getHandle
Vtiful\Kernel\Excel::header                                         Vtiful\Kernel\Excel header
Vtiful\Kernel\Excel::insertFormula                                  Vtiful\Kernel\Excel insertFormula
Vtiful\Kernel\Excel::insertImage                                    Vtiful\Kernel\Excel insertImage
Vtiful\Kernel\Excel::insertText                                     Vtiful\Kernel\Excel insertText
Vtiful\Kernel\Excel::mergeCells                                     Vtiful\Kernel\Excel mergeCells
Vtiful\Kernel\Excel::output                                         Vtiful\Kernel\Excel output
Vtiful\Kernel\Excel::setColumn                                      Vtiful\Kernel\Excel setColumn
Vtiful\Kernel\Excel::setRow                                         Vtiful\Kernel\Excel setRow
Vtiful\Kernel\Excel::__construct                                    Vtiful\Kernel\Excel constructor
Vtiful\Kernel\Format::align                                         Vtiful\Kernel\Format align
Vtiful\Kernel\Format::bold                                          Vtiful\Kernel\Format bold
Vtiful\Kernel\Format::italic                                        Vtiful\Kernel\Format italic
Vtiful\Kernel\Format::underline                                     Vtiful\Kernel\Format underline
Warning::__construct                                                Warning constructor
wddx_add_vars                                                       Add variables to a WDDX packet with the specified ID
wddx_deserialize                                                    Unserializes a WDDX packet
wddx_packet_end                                                     Ends a WDDX packet with the specified ID
wddx_packet_start                                                   Starts a new WDDX packet with structure inside it
wddx_serialize_value                                                Serialize a single value into a WDDX packet
wddx_serialize_vars                                                 Serialize variables into a WDDX packet
WeakMap::count                                                      Counts the number of live entries in the map
WeakMap::getIterator                                                Retrieve an external iterator
WeakMap::offsetExists                                               Checks whether a certain object is in the map
WeakMap::offsetGet                                                  Returns the value pointed to by a certain object
WeakMap::offsetSet                                                  Updates the map with a new key-value pair
WeakMap::offsetUnset                                                Removes an entry from the map
WeakMap::__construct                                                Constructs a new map
WeakReference::create                                               Create a new weak reference
WeakReference::get                                                  Get a weakly referenced Object
WeakReference::__construct                                          Constructor that disallows instantiation
win32_continue_service                                              Resumes a paused service
win32_create_service                                                Creates a new service entry in the SCM database
win32_delete_service                                                Deletes a service entry from the SCM database
win32_get_last_control_message                                      Returns the last control message that was sent to this service
win32_pause_service                                                 Pauses a service
win32_query_service_status                                          Queries the status of a service
win32_send_custom_control                                           Send a custom control to the service
win32_set_service_exit_code                                         Define or return the exit code for the current running service
win32_set_service_exit_mode                                         Define or return the exit mode for the current running service
win32_set_service_status                                            Update the service status
win32_start_service                                                 Starts a service
win32_start_service_ctrl_dispatcher                                 Registers the script with the SCM, so that it can act as the service with the given name
win32_stop_service                                                  Stops a service
wincache_fcache_fileinfo                                            Retrieves information about files cached in the file cache
wincache_fcache_meminfo                                             Retrieves information about file cache memory usage
wincache_lock                                                       Acquires an exclusive lock on a given key
wincache_ocache_fileinfo                                            Retrieves information about files cached in the opcode cache
wincache_ocache_meminfo                                             Retrieves information about opcode cache memory usage
wincache_refresh_if_changed                                         Refreshes the cache entries for the cached files
wincache_rplist_fileinfo                                            Retrieves information about resolve file path cache
wincache_rplist_meminfo                                             Retrieves information about memory usage by the resolve file path cache
wincache_scache_info                                                Retrieves information about files cached in the session cache
wincache_scache_meminfo                                             Retrieves information about session cache memory usage
wincache_ucache_add                                                 Adds a variable in user cache only if variable does not already exist in the cache
wincache_ucache_cas                                                 Compares the variable with old value and assigns new value to it
wincache_ucache_clear                                               Deletes entire content of the user cache
wincache_ucache_dec                                                 Decrements the value associated with the key
wincache_ucache_delete                                              Deletes variables from the user cache
wincache_ucache_exists                                              Checks if a variable exists in the user cache
wincache_ucache_get                                                 Gets a variable stored in the user cache
wincache_ucache_inc                                                 Increments the value associated with the key
wincache_ucache_info                                                Retrieves information about data stored in the user cache
wincache_ucache_meminfo                                             Retrieves information about user cache memory usage
wincache_ucache_set                                                 Adds a variable in user cache and overwrites a variable if it already exists in the cache
wincache_unlock                                                     Releases an exclusive lock on a given key
wkhtmltox\Image\Converter::convert                                  Perform Image conversion
wkhtmltox\Image\Converter::getVersion                               Determine version of Converter
wkhtmltox\Image\Converter::__construct                              Create a new Image converter
wkhtmltox\PDF\Converter::add                                        Add an object for conversion
wkhtmltox\PDF\Converter::convert                                    Perform PDF conversion
wkhtmltox\PDF\Converter::getVersion                                 Determine version of Converter
wkhtmltox\PDF\Converter::__construct                                Create a new PDF converter
wkhtmltox\PDF\Object::__construct                                   Create a new PDF Object
Worker::collect                                                     Collect references to completed tasks
Worker::getStacked                                                  Gets the remaining stack size
Worker::isShutdown                                                  State Detection
Worker::isWorking                                                   State Detection
Worker::shutdown                                                    Shutdown the worker
Worker::stack                                                       Stacking work
Worker::unstack                                                     Unstacking work
xattr_get                                                           Get an extended attribute
xattr_list                                                          Get a list of extended attributes
xattr_remove                                                        Remove an extended attribute
xattr_set                                                           Set an extended attribute
xattr_supported                                                     Check if filesystem supports extended attributes
xdiff_file_bdiff                                                    Make binary diff of two files
xdiff_file_bdiff_size                                               Read a size of file created by applying a binary diff
xdiff_file_bpatch                                                   Patch a file with a binary diff
xdiff_file_diff                                                     Make unified diff of two files
xdiff_file_diff_binary                                              Alias of xdiff_file_bdiff
xdiff_file_merge3                                                   Merge 3 files into one
xdiff_file_patch                                                    Patch a file with an unified diff
xdiff_file_patch_binary                                             Alias of xdiff_file_bpatch
xdiff_file_rabdiff                                                  Make binary diff of two files using the Rabin's polynomial fingerprinting algorithm
xdiff_string_bdiff                                                  Make binary diff of two strings
xdiff_string_bdiff_size                                             Read a size of file created by applying a binary diff
xdiff_string_bpatch                                                 Patch a string with a binary diff
xdiff_string_diff                                                   Make unified diff of two strings
xdiff_string_diff_binary                                            Alias of xdiff_string_bdiff
xdiff_string_merge3                                                 Merge 3 strings into one
xdiff_string_patch                                                  Patch a string with an unified diff
xdiff_string_patch_binary                                           Alias of xdiff_string_bpatch
xdiff_string_rabdiff                                                Make binary diff of two strings using the Rabin's polynomial fingerprinting algorithm
xhprof_disable                                                      Stops xhprof profiler
xhprof_enable                                                       Start xhprof profiler
xhprof_sample_disable                                               Stops xhprof sample profiler
xhprof_sample_enable                                                Start XHProf profiling in sampling mode
XMLDiff\Base::diff                                                  Produce diff of two XML documents
XMLDiff\Base::merge                                                 Produce new XML document based on diff
XMLDiff\Base::__construct                                           Constructor
XMLDiff\DOM::diff                                                   Diff two DOMDocument objects
XMLDiff\DOM::merge                                                  Produce merged DOMDocument
XMLDiff\File::diff                                                  Diff two XML files
XMLDiff\File::merge                                                 Produce merged XML document
XMLDiff\Memory::diff                                                Diff two XML documents
XMLDiff\Memory::merge                                               Produce merged XML document
XMLReader::close                                                    Close the XMLReader input
XMLReader::expand                                                   Returns a copy of the current node as a DOM object
XMLReader::getAttribute                                             Get the value of a named attribute
XMLReader::getAttributeNo                                           Get the value of an attribute by index
XMLReader::getAttributeNs                                           Get the value of an attribute by localname and URI
XMLReader::getParserProperty                                        Indicates if specified property has been set
XMLReader::isValid                                                  Indicates if the parsed document is valid
XMLReader::lookupNamespace                                          Lookup namespace for a prefix
XMLReader::moveToAttribute                                          Move cursor to a named attribute
XMLReader::moveToAttributeNo                                        Move cursor to an attribute by index
XMLReader::moveToAttributeNs                                        Move cursor to a named attribute
XMLReader::moveToElement                                            Position cursor on the parent Element of current Attribute
XMLReader::moveToFirstAttribute                                     Position cursor on the first Attribute
XMLReader::moveToNextAttribute                                      Position cursor on the next Attribute
XMLReader::next                                                     Move cursor to next node skipping all subtrees
XMLReader::open                                                     Set the URI containing the XML to parse
XMLReader::read                                                     Move to next node in document
XMLReader::readInnerXml                                             Retrieve XML from current node
XMLReader::readOuterXml                                             Retrieve XML from current node, including itself
XMLReader::readString                                               Reads the contents of the current node as a string
XMLReader::setParserProperty                                        Set parser options
XMLReader::setRelaxNGSchema                                         Set the filename or URI for a RelaxNG Schema
XMLReader::setRelaxNGSchemaSource                                   Set the data containing a RelaxNG Schema
XMLReader::setSchema                                                Validate document against XSD
XMLReader::XML                                                      Set the data containing the XML to parse
xmlrpc_decode                                                       Decodes XML into native PHP types
xmlrpc_decode_request                                               Decodes XML into native PHP types
xmlrpc_encode                                                       Generates XML for a PHP value
xmlrpc_encode_request                                               Generates XML for a method request
xmlrpc_get_type                                                     Gets xmlrpc type for a PHP value
xmlrpc_is_fault                                                     Determines if an array value represents an XMLRPC fault
xmlrpc_parse_method_descriptions                                    Decodes XML into a list of method descriptions
xmlrpc_server_add_introspection_data                                Adds introspection documentation
xmlrpc_server_call_method                                           Parses XML requests and call methods
xmlrpc_server_create                                                Creates an xmlrpc server
xmlrpc_server_destroy                                               Destroys server resources
xmlrpc_server_register_introspection_callback                       Register a PHP function to generate documentation
xmlrpc_server_register_method                                       Register a PHP function to resource method matching method_name
xmlrpc_set_type                                                     Sets xmlrpc type, base64 or datetime, for a PHP string value
XMLWriter::endAttribute                                             End attribute
XMLWriter::endCdata                                                 End current CDATA
XMLWriter::endComment                                               Create end comment
XMLWriter::endDocument                                              End current document
XMLWriter::endDtd                                                   End current DTD
XMLWriter::endDtdAttlist                                            End current DTD AttList
XMLWriter::endDtdElement                                            End current DTD element
XMLWriter::endDtdEntity                                             End current DTD Entity
XMLWriter::endElement                                               End current element
XMLWriter::endPi                                                    End current PI
XMLWriter::flush                                                    Flush current buffer
XMLWriter::fullEndElement                                           End current element
XMLWriter::openMemory                                               Create new xmlwriter using memory for string output
XMLWriter::openUri                                                  Create new xmlwriter using source uri for output
XMLWriter::outputMemory                                             Returns current buffer
XMLWriter::setIndent                                                Toggle indentation on/off
XMLWriter::setIndentString                                          Set string used for indenting
XMLWriter::startAttribute                                           Create start attribute
XMLWriter::startAttributeNs                                         Create start namespaced attribute
XMLWriter::startCdata                                               Create start CDATA tag
XMLWriter::startComment                                             Create start comment
XMLWriter::startDocument                                            Create document tag
XMLWriter::startDtd                                                 Create start DTD tag
XMLWriter::startDtdAttlist                                          Create start DTD AttList
XMLWriter::startDtdElement                                          Create start DTD element
XMLWriter::startDtdEntity                                           Create start DTD Entity
XMLWriter::startElement                                             Create start element tag
XMLWriter::startElementNs                                           Create start namespaced element tag
XMLWriter::startPi                                                  Create start PI tag
XMLWriter::text                                                     Write text
XMLWriter::writeAttribute                                           Write full attribute
XMLWriter::writeAttributeNs                                         Write full namespaced attribute
XMLWriter::writeCdata                                               Write full CDATA tag
XMLWriter::writeComment                                             Write full comment tag
XMLWriter::writeDtd                                                 Write full DTD tag
XMLWriter::writeDtdAttlist                                          Write full DTD AttList tag
XMLWriter::writeDtdElement                                          Write full DTD element tag
XMLWriter::writeDtdEntity                                           Write full DTD Entity tag
XMLWriter::writeElement                                             Write full element tag
XMLWriter::writeElementNs                                           Write full namespaced element tag
XMLWriter::writePi                                                  Writes a PI
XMLWriter::writeRaw                                                 Write a raw XML text
XSLTProcessor::getParameter                                         Get value of a parameter
XSLTProcessor::getSecurityPrefs                                     Get security preferences
XSLTProcessor::hasExsltSupport                                      Determine if PHP has EXSLT support
XSLTProcessor::importStylesheet                                     Import stylesheet
XSLTProcessor::registerPHPFunctions                                 Enables the ability to use PHP functions as XSLT functions
XSLTProcessor::removeParameter                                      Remove parameter
XSLTProcessor::setParameter                                         Set value for a parameter
XSLTProcessor::setProfiling                                         Sets profiling output file
XSLTProcessor::setSecurityPrefs                                     Set security preferences
XSLTProcessor::transformToDoc                                       Transform to a DOMDocument
XSLTProcessor::transformToUri                                       Transform to URI
XSLTProcessor::transformToXml                                       Transform to XML
XSLTProcessor::__construct                                          Creates a new XSLTProcessor object
Yac::add                                                            Store into cache
Yac::delete                                                         Remove items from cache
Yac::dump                                                           Dump cache
Yac::flush                                                          Flush the cache
Yac::get                                                            Retrieve values from cache
Yac::info                                                           Status of cache
Yac::set                                                            Store into cache
Yac::__construct                                                    Constructor
Yac::__get                                                          Getter
Yac::__set                                                          Setter
Yaconf::get                                                         Retrieve a item
Yaconf::has                                                         Determine if a item exists
Yaf_Action_Abstract::execute                                        Action entry point
Yaf_Action_Abstract::getController                                  Retrieve controller object
Yaf_Action_Abstract::getControllerName                              Get controller name
Yaf_Application::app                                                Retrieve an Application instance
Yaf_Application::bootstrap                                          Call bootstrap
Yaf_Application::clearLastError                                     Clear the last error info
Yaf_Application::environ                                            Retrive environ
Yaf_Application::execute                                            Execute a callback
Yaf_Application::getAppDirectory                                    Get the application directory
Yaf_Application::getConfig                                          Retrive the config instance
Yaf_Application::getDispatcher                                      Get Yaf_Dispatcher instance
Yaf_Application::getLastErrorMsg                                    Get message of the last occurred error
Yaf_Application::getLastErrorNo                                     Get code of last occurred error
Yaf_Application::getModules                                         Get defined module names
Yaf_Application::run                                                Start Yaf_Application
Yaf_Application::setAppDirectory                                    Change the application directory
Yaf_Application::__construct                                        Yaf_Application constructor
Yaf_Application::__destruct                                         The __destruct purpose
Yaf_Config_Abstract::get                                            Getter
Yaf_Config_Abstract::readonly                                       Find a config whether readonly
Yaf_Config_Abstract::set                                            Setter
Yaf_Config_Abstract::toArray                                        Cast to array
Yaf_Config_Ini::count                                               Count all elements in Yaf_Config.ini
Yaf_Config_Ini::current                                             Retrieve the current value
Yaf_Config_Ini::key                                                 Fetch current element's key
Yaf_Config_Ini::next                                                Advance the internal pointer
Yaf_Config_Ini::offsetExists                                        The offsetExists purpose
Yaf_Config_Ini::offsetGet                                           The offsetGet purpose
Yaf_Config_Ini::offsetSet                                           The offsetSet purpose
Yaf_Config_Ini::offsetUnset                                         The offsetUnset purpose
Yaf_Config_Ini::readonly                                            The readonly purpose
Yaf_Config_Ini::rewind                                              The rewind purpose
Yaf_Config_Ini::toArray                                             Return config as a PHP array
Yaf_Config_Ini::valid                                               The valid purpose
Yaf_Config_Ini::__construct                                         Yaf_Config_Ini constructor
Yaf_Config_Ini::__get                                               Retrieve a element
Yaf_Config_Ini::__isset                                             Determine if a key is exists
Yaf_Config_Ini::__set                                               The __set purpose
Yaf_Config_Simple::count                                            The count purpose
Yaf_Config_Simple::current                                          The current purpose
Yaf_Config_Simple::key                                              The key purpose
Yaf_Config_Simple::next                                             The next purpose
Yaf_Config_Simple::offsetExists                                     The offsetExists purpose
Yaf_Config_Simple::offsetGet                                        The offsetGet purpose
Yaf_Config_Simple::offsetSet                                        The offsetSet purpose
Yaf_Config_Simple::offsetUnset                                      The offsetUnset purpose
Yaf_Config_Simple::readonly                                         The readonly purpose
Yaf_Config_Simple::rewind                                           The rewind purpose
Yaf_Config_Simple::toArray                                          Returns a PHP array
Yaf_Config_Simple::valid                                            The valid purpose
Yaf_Config_Simple::__construct                                      The __construct purpose
Yaf_Config_Simple::__get                                            The __get purpose
Yaf_Config_Simple::__isset                                          The __isset purpose
Yaf_Config_Simple::__set                                            The __set purpose
Yaf_Controller_Abstract::display                                    The display purpose
Yaf_Controller_Abstract::forward                                    Forward to another action
Yaf_Controller_Abstract::getInvokeArg                               The getInvokeArg purpose
Yaf_Controller_Abstract::getInvokeArgs                              The getInvokeArgs purpose
Yaf_Controller_Abstract::getModuleName                              Get module name
Yaf_Controller_Abstract::getName                                    Get self name
Yaf_Controller_Abstract::getRequest                                 Retrieve current request object
Yaf_Controller_Abstract::getResponse                                Retrieve current response object
Yaf_Controller_Abstract::getView                                    Retrieve the view engine
Yaf_Controller_Abstract::getViewpath                                The getViewpath purpose
Yaf_Controller_Abstract::init                                       Controller initializer
Yaf_Controller_Abstract::initView                                   The initView purpose
Yaf_Controller_Abstract::redirect                                   Redirect to a URL
Yaf_Controller_Abstract::render                                     Render view template
Yaf_Controller_Abstract::setViewpath                                The setViewpath purpose
Yaf_Controller_Abstract::__construct                                Yaf_Controller_Abstract constructor
Yaf_Dispatcher::autoRender                                          Switch on/off autorendering
Yaf_Dispatcher::catchException                                      Switch on/off exception catching
Yaf_Dispatcher::disableView                                         Disable view rendering
Yaf_Dispatcher::dispatch                                            Dispatch a request
Yaf_Dispatcher::enableView                                          Enable view rendering
Yaf_Dispatcher::flushInstantly                                      Switch on/off the instant flushing
Yaf_Dispatcher::getApplication                                      Retrive the application
Yaf_Dispatcher::getDefaultAction                                    Retrive the default action name
Yaf_Dispatcher::getDefaultController                                Retrive the default controller name
Yaf_Dispatcher::getDefaultModule                                    Retrive the default module name
Yaf_Dispatcher::getInstance                                         Retrive the dispatcher instance
Yaf_Dispatcher::getRequest                                          Retrive the request instance
Yaf_Dispatcher::getRouter                                           Retrive router instance
Yaf_Dispatcher::initView                                            Initialize view and return it
Yaf_Dispatcher::registerPlugin                                      Register a plugin
Yaf_Dispatcher::returnResponse                                      The returnResponse purpose
Yaf_Dispatcher::setDefaultAction                                    Change default action name
Yaf_Dispatcher::setDefaultController                                Change default controller name
Yaf_Dispatcher::setDefaultModule                                    Change default module name
Yaf_Dispatcher::setErrorHandler                                     Set error handler
Yaf_Dispatcher::setRequest                                          The setRequest purpose
Yaf_Dispatcher::setView                                             Set a custom view engine
Yaf_Dispatcher::throwException                                      Switch on/off exception throwing
Yaf_Dispatcher::__construct                                         Yaf_Dispatcher constructor
Yaf_Exception::getPrevious                                          The getPrevious purpose
Yaf_Exception::__construct                                          The __construct purpose
Yaf_Loader::autoload                                                The autoload purpose
Yaf_Loader::clearLocalNamespace                                     The clearLocalNamespace purpose
Yaf_Loader::getInstance                                             The getInstance purpose
Yaf_Loader::getLibraryPath                                          Get the library path
Yaf_Loader::getLocalNamespace                                       Retrive all register namespaces info
Yaf_Loader::getNamespacePath                                        Retieve path of a registered namespace
Yaf_Loader::import                                                  The import purpose
Yaf_Loader::isLocalName                                             The isLocalName purpose
Yaf_Loader::registerLocalNamespace                                  Register local class prefix
Yaf_Loader::registerNamespace                                       Register namespace with searching path
Yaf_Loader::setLibraryPath                                          Change the library path
Yaf_Loader::__construct                                             The __construct purpose
Yaf_Plugin_Abstract::dispatchLoopShutdown                           The dispatchLoopShutdown purpose
Yaf_Plugin_Abstract::dispatchLoopStartup                            Hook before dispatch loop
Yaf_Plugin_Abstract::postDispatch                                   The postDispatch purpose
Yaf_Plugin_Abstract::preDispatch                                    The preDispatch purpose
Yaf_Plugin_Abstract::preResponse                                    The preResponse purpose
Yaf_Plugin_Abstract::routerShutdown                                 The routerShutdown purpose
Yaf_Plugin_Abstract::routerStartup                                  RouterStartup hook
Yaf_Registry::del                                                   Remove an item from registry
Yaf_Registry::get                                                   Retrieve an item from registry
Yaf_Registry::has                                                   Check whether an item exists
Yaf_Registry::set                                                   Add an item into registry
Yaf_Registry::__construct                                           Yaf_Registry implements singleton
Yaf_Request_Abstract::clearParams                                   Remove all params
Yaf_Request_Abstract::getActionName                                 The getActionName purpose
Yaf_Request_Abstract::getBaseUri                                    The getBaseUri purpose
Yaf_Request_Abstract::getControllerName                             The getControllerName purpose
Yaf_Request_Abstract::getEnv                                        Retrieve ENV varialbe
Yaf_Request_Abstract::getException                                  The getException purpose
Yaf_Request_Abstract::getLanguage                                   Retrieve client's preferred language
Yaf_Request_Abstract::getMethod                                     Retrieve the request method
Yaf_Request_Abstract::getModuleName                                 The getModuleName purpose
Yaf_Request_Abstract::getParam                                      Retrieve calling parameter
Yaf_Request_Abstract::getParams                                     Retrieve all calling parameters
Yaf_Request_Abstract::getRequestUri                                 The getRequestUri purpose
Yaf_Request_Abstract::getServer                                     Retrieve SERVER variable
Yaf_Request_Abstract::isCli                                         Determine if request is CLI request
Yaf_Request_Abstract::isDispatched                                  Determin if the request is dispatched
Yaf_Request_Abstract::isGet                                         Determine if request is GET request
Yaf_Request_Abstract::isHead                                        Determine if request is HEAD request
Yaf_Request_Abstract::isOptions                                     Determine if request is OPTIONS request
Yaf_Request_Abstract::isPost                                        Determine if request is POST request
Yaf_Request_Abstract::isPut                                         Determine if request is PUT request
Yaf_Request_Abstract::isRouted                                      Determin if request has been routed
Yaf_Request_Abstract::isXmlHttpRequest                              Determine if request is AJAX request
Yaf_Request_Abstract::setActionName                                 Set action name
Yaf_Request_Abstract::setBaseUri                                    Set base URI
Yaf_Request_Abstract::setControllerName                             Set controller name
Yaf_Request_Abstract::setDispatched                                 The setDispatched purpose
Yaf_Request_Abstract::setModuleName                                 Set module name
Yaf_Request_Abstract::setParam                                      Set a calling parameter to a request
Yaf_Request_Abstract::setRequestUri                                 The setRequestUri purpose
Yaf_Request_Abstract::setRouted                                     The setRouted purpose
Yaf_Request_Http::get                                               Retrieve variable from client
Yaf_Request_Http::getCookie                                         Retrieve Cookie variable
Yaf_Request_Http::getFiles                                          The getFiles purpose
Yaf_Request_Http::getPost                                           Retrieve POST variable
Yaf_Request_Http::getQuery                                          Fetch a query parameter
Yaf_Request_Http::getRaw                                            Retrieve Raw request body
Yaf_Request_Http::getRequest                                        The getRequest purpose
Yaf_Request_Http::isXmlHttpRequest                                  Determin if request is Ajax Request
Yaf_Request_Http::__construct                                       Constructor of Yaf_Request_Http
Yaf_Request_Simple::get                                             The get purpose
Yaf_Request_Simple::getCookie                                       The getCookie purpose
Yaf_Request_Simple::getFiles                                        The getFiles purpose
Yaf_Request_Simple::getPost                                         The getPost purpose
Yaf_Request_Simple::getQuery                                        The getQuery purpose
Yaf_Request_Simple::getRequest                                      The getRequest purpose
Yaf_Request_Simple::isXmlHttpRequest                                Determin if request is AJAX request
Yaf_Request_Simple::__construct                                     Constructor of Yaf_Request_Simple
Yaf_Response_Abstract::appendBody                                   Append to response body
Yaf_Response_Abstract::clearBody                                    Discard all exists response body
Yaf_Response_Abstract::clearHeaders                                 Discard all set headers
Yaf_Response_Abstract::getBody                                      Retrieve a exists content
Yaf_Response_Abstract::getHeader                                    The getHeader purpose
Yaf_Response_Abstract::prependBody                                  The prependBody purpose
Yaf_Response_Abstract::response                                     Send response
Yaf_Response_Abstract::setAllHeaders                                The setAllHeaders purpose
Yaf_Response_Abstract::setBody                                      Set content to response
Yaf_Response_Abstract::setHeader                                    Set reponse header
Yaf_Response_Abstract::setRedirect                                  The setRedirect purpose
Yaf_Response_Abstract::__construct                                  The __construct purpose
Yaf_Response_Abstract::__destruct                                   The __destruct purpose
Yaf_Response_Abstract::__toString                                   Retrieve all bodys as string
Yaf_Router::addConfig                                               Add config-defined routes into Router
Yaf_Router::addRoute                                                Add new Route into Router
Yaf_Router::getCurrentRoute                                         Get the effective route name
Yaf_Router::getRoute                                                Retrieve a route by name
Yaf_Router::getRoutes                                               Retrieve registered routes
Yaf_Router::route                                                   The route purpose
Yaf_Router::__construct                                             Yaf_Router constructor
Yaf_Route_Interface::assemble                                       Assemble a request
Yaf_Route_Interface::route                                          Route a request
Yaf_Route_Map::assemble                                             Assemble a url
Yaf_Route_Map::route                                                The route purpose
Yaf_Route_Map::__construct                                          The __construct purpose
Yaf_Route_Regex::assemble                                           Assemble a url
Yaf_Route_Regex::route                                              The route purpose
Yaf_Route_Regex::__construct                                        Yaf_Route_Regex constructor
Yaf_Route_Rewrite::assemble                                         Assemble a url
Yaf_Route_Rewrite::route                                            The route purpose
Yaf_Route_Rewrite::__construct                                      Yaf_Route_Rewrite constructor
Yaf_Route_Simple::assemble                                          Assemble a url
Yaf_Route_Simple::route                                             Route a request
Yaf_Route_Simple::__construct                                       Yaf_Route_Simple constructor
Yaf_Route_Static::assemble                                          Assemble a url
Yaf_Route_Static::match                                             The match purpose
Yaf_Route_Static::route                                             Route a request
Yaf_Route_Supervar::assemble                                        Assemble a url
Yaf_Route_Supervar::route                                           The route purpose
Yaf_Route_Supervar::__construct                                     The __construct purpose
Yaf_Session::count                                                  The count purpose
Yaf_Session::current                                                The current purpose
Yaf_Session::del                                                    The del purpose
Yaf_Session::getInstance                                            The getInstance purpose
Yaf_Session::has                                                    The has purpose
Yaf_Session::key                                                    The key purpose
Yaf_Session::next                                                   The next purpose
Yaf_Session::offsetExists                                           The offsetExists purpose
Yaf_Session::offsetGet                                              The offsetGet purpose
Yaf_Session::offsetSet                                              The offsetSet purpose
Yaf_Session::offsetUnset                                            The offsetUnset purpose
Yaf_Session::rewind                                                 The rewind purpose
Yaf_Session::start                                                  The start purpose
Yaf_Session::valid                                                  The valid purpose
Yaf_Session::__construct                                            Constructor of Yaf_Session
Yaf_Session::__get                                                  The __get purpose
Yaf_Session::__isset                                                The __isset purpose
Yaf_Session::__set                                                  The __set purpose
Yaf_Session::__unset                                                The __unset purpose
Yaf_View_Interface::assign                                          Assign value to View engine
Yaf_View_Interface::display                                         Render and output a template
Yaf_View_Interface::getScriptPath                                   The getScriptPath purpose
Yaf_View_Interface::render                                          Render a template
Yaf_View_Interface::setScriptPath                                   The setScriptPath purpose
Yaf_View_Simple::assign                                             Assign values
Yaf_View_Simple::assignRef                                          The assignRef purpose
Yaf_View_Simple::clear                                              Clear Assigned values
Yaf_View_Simple::display                                            Render and display
Yaf_View_Simple::eval                                               Render template
Yaf_View_Simple::getScriptPath                                      Get templates directory
Yaf_View_Simple::render                                             Render template
Yaf_View_Simple::setScriptPath                                      Set tempaltes directory
Yaf_View_Simple::__construct                                        Constructor of Yaf_View_Simple
Yaf_View_Simple::__get                                              Retrieve assigned variable
Yaf_View_Simple::__isset                                            The __isset purpose
Yaf_View_Simple::__set                                              Set value to engine
yaml_emit                                                           Returns the YAML representation of a value
yaml_emit_file                                                      Send the YAML representation of a value to a file
yaml_parse                                                          Parse a YAML stream
yaml_parse_file                                                     Parse a YAML stream from a file
yaml_parse_url                                                      Parse a Yaml stream from a URL
Yar_Client::setOpt                                                  Set calling contexts
Yar_Client::__call                                                  Call service
Yar_Client::__construct                                             Create a client
Yar_Client_Exception::getType                                       Retrieve exception's type
Yar_Concurrent_Client::call                                         Register a concurrent call
Yar_Concurrent_Client::loop                                         Send all calls
Yar_Concurrent_Client::reset                                        Clean all registered calls
Yar_Server::handle                                                  Start RPC Server
Yar_Server::__construct                                             Register a server
Yar_Server_Exception::getType                                       Retrieve exception's type
yaz_addinfo                                                         Returns additional error information
yaz_ccl_conf                                                        Configure CCL parser
yaz_ccl_parse                                                       Invoke CCL Parser
yaz_close                                                           Close YAZ connection
yaz_connect                                                         Prepares for a connection to a Z39.50 server
yaz_database                                                        Specifies the databases within a session
yaz_element                                                         Specifies Element-Set Name for retrieval
yaz_errno                                                           Returns error number
yaz_error                                                           Returns error description
yaz_es                                                              Prepares for an Extended Service Request
yaz_es_result                                                       Inspects Extended Services Result
yaz_get_option                                                      Returns value of option for connection
yaz_hits                                                            Returns number of hits for last search
yaz_itemorder                                                       Prepares for Z39.50 Item Order with an ILL-Request package
yaz_present                                                         Prepares for retrieval (Z39.50 present)
yaz_range                                                           Specifies a range of records to retrieve
yaz_record                                                          Returns a record
yaz_scan                                                            Prepares for a scan
yaz_scan_result                                                     Returns Scan Response result
yaz_schema                                                          Specifies schema for retrieval
yaz_search                                                          Prepares for a search
yaz_set_option                                                      Sets one or more options for connection
yaz_sort                                                            Sets sorting criteria
yaz_syntax                                                          Specifies the preferred record syntax for retrieval
yaz_wait                                                            Wait for Z39.50 requests to complete
zend_thread_id                                                      Returns a unique identifier for the current thread
ZipArchive::addEmptyDir                                             Add a new directory
ZipArchive::addFile                                                 Adds a file to a ZIP archive from the given path
ZipArchive::addFromString                                           Add a file to a ZIP archive using its contents
ZipArchive::addGlob                                                 Add files from a directory by glob pattern
ZipArchive::addPattern                                              Add files from a directory by PCRE pattern
ZipArchive::close                                                   Close the active archive (opened or newly created)
ZipArchive::count                                                   Counts the number of files in the archive
ZipArchive::deleteIndex                                             Delete an entry in the archive using its index
ZipArchive::deleteName                                              Delete an entry in the archive using its name
ZipArchive::extractTo                                               Extract the archive contents
ZipArchive::getArchiveComment                                       Returns the Zip archive comment
ZipArchive::getCommentIndex                                         Returns the comment of an entry using the entry index
ZipArchive::getCommentName                                          Returns the comment of an entry using the entry name
ZipArchive::getExternalAttributesIndex                              Retrieve the external attributes of an entry defined by its index
ZipArchive::getExternalAttributesName                               Retrieve the external attributes of an entry defined by its name
ZipArchive::getFromIndex                                            Returns the entry contents using its index
ZipArchive::getFromName                                             Returns the entry contents using its name
ZipArchive::getNameIndex                                            Returns the name of an entry using its index
ZipArchive::getStatusString                                         Returns the status error message, system and/or zip messages
ZipArchive::getStream                                               Get a file handler to the entry defined by its name (read only)
ZipArchive::isCompressionMethodSupported                            Check if a compression method is supported by libzip
ZipArchive::isEncryptionMethodSupported                             Check if a encryption method is supported by libzip
ZipArchive::locateName                                              Returns the index of the entry in the archive
ZipArchive::open                                                    Open a ZIP file archive
ZipArchive::registerCancelCallback                                  Register a callback to allow cancellation during archive close.
ZipArchive::registerProgressCallback                                Register a callback to provide updates during archive close.
ZipArchive::renameIndex                                             Renames an entry defined by its index
ZipArchive::renameName                                              Renames an entry defined by its name
ZipArchive::replaceFile                                             Replace file in ZIP archive with a given path
ZipArchive::setArchiveComment                                       Set the comment of a ZIP archive
ZipArchive::setCommentIndex                                         Set the comment of an entry defined by its index
ZipArchive::setCommentName                                          Set the comment of an entry defined by its name
ZipArchive::setCompressionIndex                                     Set the compression method of an entry defined by its index
ZipArchive::setCompressionName                                      Set the compression method of an entry defined by its name
ZipArchive::setEncryptionIndex                                      Set the encryption method of an entry defined by its index
ZipArchive::setEncryptionName                                       Set the encryption method of an entry defined by its name
ZipArchive::setExternalAttributesIndex                              Set the external attributes of an entry defined by its index
ZipArchive::setExternalAttributesName                               Set the external attributes of an entry defined by its name
ZipArchive::setMtimeIndex                                           Set the modification time of an entry defined by its index
ZipArchive::setMtimeName                                            Set the modification time of an entry defined by its name
ZipArchive::setPassword                                             Set the password for the active archive
ZipArchive::statIndex                                               Get the details of an entry defined by its index
ZipArchive::statName                                                Get the details of an entry defined by its name
ZipArchive::unchangeAll                                             Undo all changes done in the archive
ZipArchive::unchangeArchive                                         Revert all global changes done in the archive
ZipArchive::unchangeIndex                                           Revert all changes done to an entry at the given index
ZipArchive::unchangeName                                            Revert all changes done to an entry with the given name
Zip context options                                                 Zip context option listing
zip_close                                                           Close a ZIP file archive
zip_entry_close                                                     Close a directory entry
zip_entry_compressedsize                                            Retrieve the compressed size of a directory entry
zip_entry_compressionmethod                                         Retrieve the compression method of a directory entry
zip_entry_filesize                                                  Retrieve the actual file size of a directory entry
zip_entry_name                                                      Retrieve the name of a directory entry
zip_entry_open                                                      Open a directory entry for reading
zip_entry_read                                                      Read from an open directory entry
zip_open                                                            Open a ZIP file archive
zip_read                                                            Read next entry in a ZIP file archive
zlib://                                                             Compression Streams
ZMQ::__construct                                                    ZMQ constructor
ZMQContext::getOpt                                                  Get context option
ZMQContext::getSocket                                               Create a new socket
ZMQContext::isPersistent                                            Whether the context is persistent
ZMQContext::setOpt                                                  Set a socket option
ZMQContext::__construct                                             Construct a new ZMQContext object
ZMQDevice::getIdleTimeout                                           Get the idle timeout
ZMQDevice::getTimerTimeout                                          Get the timer timeout
ZMQDevice::run                                                      Run the new device
ZMQDevice::setIdleCallback                                          Set the idle callback function
ZMQDevice::setIdleTimeout                                           Set the idle timeout
ZMQDevice::setTimerCallback                                         Set the timer callback function
ZMQDevice::setTimerTimeout                                          Set the timer timeout
ZMQDevice::__construct                                              Construct a new device
ZMQPoll::add                                                        Add item to the poll set
ZMQPoll::clear                                                      Clear the poll set
ZMQPoll::count                                                      Count items in the poll set
ZMQPoll::getLastErrors                                              Get poll errors
ZMQPoll::poll                                                       Poll the items
ZMQPoll::remove                                                     Remove item from poll set
ZMQSocket::bind                                                     Bind the socket
ZMQSocket::connect                                                  Connect the socket
ZMQSocket::disconnect                                               Disconnect a socket
ZMQSocket::getEndpoints                                             Get list of endpoints
ZMQSocket::getPersistentId                                          Get the persistent id
ZMQSocket::getSocketType                                            Get the socket type
ZMQSocket::getSockOpt                                               Get socket option
ZMQSocket::isPersistent                                             Whether the socket is persistent
ZMQSocket::recv                                                     Receives a message
ZMQSocket::recvMulti                                                Receives a multipart message
ZMQSocket::send                                                     Sends a message
ZMQSocket::sendmulti                                                Sends a multipart message
ZMQSocket::setSockOpt                                               Set a socket option
ZMQSocket::unbind                                                   Unbind the socket
ZMQSocket::__construct                                              Construct a new ZMQSocket
Zookeeper::addAuth                                                  Specify application credentials
Zookeeper::close                                                    Close the zookeeper handle and free up any resources
Zookeeper::connect                                                  Create a handle to used communicate with zookeeper
Zookeeper::create                                                   Create a node synchronously
Zookeeper::delete                                                   Delete a node in zookeeper synchronously
Zookeeper::exists                                                   Checks the existence of a node in zookeeper synchronously
Zookeeper::get                                                      Gets the data associated with a node synchronously
Zookeeper::getAcl                                                   Gets the acl associated with a node synchronously
Zookeeper::getChildren                                              Lists the children of a node synchronously
Zookeeper::getClientId                                              Return the client session id, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE)
Zookeeper::getConfig                                                Get instance of ZookeeperConfig
Zookeeper::getRecvTimeout                                           Return the timeout for this session, only valid if the connections is currently connected (ie. last watcher state is ZOO_CONNECTED_STATE). This value may change after a server re-connect
Zookeeper::getState                                                 Get the state of the zookeeper connection
Zookeeper::isRecoverable                                            Checks if the current zookeeper connection state can be recovered
Zookeeper::set                                                      Sets the data associated with a node
Zookeeper::setAcl                                                   Sets the acl associated with a node synchronously
Zookeeper::setDebugLevel                                            Sets the debugging level for the library
Zookeeper::setDeterministicConnOrder                                Enable/disable quorum endpoint order randomization
Zookeeper::setLogStream                                             Sets the stream to be used by the library for logging
Zookeeper::setWatcher                                               Set a watcher function
Zookeeper::__construct                                              Create a handle to used communicate with zookeeper
ZookeeperConfig::add                                                Add servers to the ensemble
ZookeeperConfig::get                                                Gets the last committed configuration of the ZooKeeper cluster as it is known to the server to which the client is connected, synchronously
ZookeeperConfig::remove                                             Remove servers from the ensemble
ZookeeperConfig::set                                                Change ZK cluster ensemble membership and roles of ensemble peers
zookeeper_dispatch                                                  Calls callbacks for pending operations
__autoload                                                          Attempt to load undefined class
__halt_compiler                                                     Halts the compiler execution
